diff --git a/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java b/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java
index a54ff95..9fd5a3f 100644
--- a/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java
+++ b/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java
@@ -149,7 +149,7 @@
             return this;
         }
 
-        if (!isOpen()) throw new IOException("Connection remotely closed");
+        if (!isOpen()) throw new IOException("Connection remotely closed for " + r != null ? r.uuid() : "Null");
         logger.trace("WebSocket.write()");
 
         boolean transform = filters.size() > 0 && r.getStatus() < 400;
@@ -192,7 +192,7 @@
             logger.error("Cannot write null value for {}", resource());
             return this;
         }
-        if (!isOpen()) throw new IOException("Connection remotely closed");
+        if (!isOpen()) throw new IOException("Connection remotely closed for " + r != null ? r.uuid() : "Null");
 
         logger.trace("WebSocket.write()");
         boolean transform = filters.size() > 0 && r.getStatus() < 400;
diff --git a/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java b/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java
index a54ff95..9fd5a3f 100644
--- a/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java
+++ b/modules/cpr/src/main/java/org/atmosphere/websocket/WebSocket.java
@@ -149,7 +149,7 @@
             return this;
         }
 
-        if (!isOpen()) throw new IOException("Connection remotely closed");
+        if (!isOpen()) throw new IOException("Connection remotely closed for " + r != null ? r.uuid() : "Null");
         logger.trace("WebSocket.write()");
 
         boolean transform = filters.size() > 0 && r.getStatus() < 400;
@@ -192,7 +192,7 @@
             logger.error("Cannot write null value for {}", resource());
             return this;
         }
-        if (!isOpen()) throw new IOException("Connection remotely closed");
+        if (!isOpen()) throw new IOException("Connection remotely closed for " + r != null ? r.uuid() : "Null");
 
         logger.trace("WebSocket.write()");
         boolean transform = filters.size() > 0 && r.getStatus() < 400;
