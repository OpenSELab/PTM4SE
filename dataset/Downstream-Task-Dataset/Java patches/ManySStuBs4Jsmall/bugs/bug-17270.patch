diff --git a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java
index e2efffa..228d218 100644
--- a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java
+++ b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java
@@ -107,7 +107,7 @@
 
 	public OpenALSound newSound (FileHandle file) {
 		if (file == null) throw new IllegalArgumentException("file cannot be null.");
-		Class<? extends OpenALSound> soundClass = extensionToSoundClass.get(file.extension());
+		Class<? extends OpenALSound> soundClass = extensionToSoundClass.get(file.extension().toLowerCase());
 		if (soundClass == null) throw new GdxRuntimeException("Unknown file extension for sound: " + file);
 		try {
 			return soundClass.getConstructor(new Class[] {OpenALAudio.class, FileHandle.class}).newInstance(this, file);
@@ -118,7 +118,7 @@
 
 	public OpenALMusic newMusic (FileHandle file) {
 		if (file == null) throw new IllegalArgumentException("file cannot be null.");
-		Class<? extends OpenALMusic> musicClass = extensionToMusicClass.get(file.extension());
+		Class<? extends OpenALMusic> musicClass = extensionToMusicClass.get(file.extension().toLowerCase());
 		if (musicClass == null) throw new GdxRuntimeException("Unknown file extension for music: " + file);
 		try {
 			return musicClass.getConstructor(new Class[] {OpenALAudio.class, FileHandle.class}).newInstance(this, file);
diff --git a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java
index e2efffa..228d218 100644
--- a/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java
+++ b/backends/gdx-openal/src/com/badlogic/gdx/backends/openal/OpenALAudio.java
@@ -107,7 +107,7 @@
 
 	public OpenALSound newSound (FileHandle file) {
 		if (file == null) throw new IllegalArgumentException("file cannot be null.");
-		Class<? extends OpenALSound> soundClass = extensionToSoundClass.get(file.extension());
+		Class<? extends OpenALSound> soundClass = extensionToSoundClass.get(file.extension().toLowerCase());
 		if (soundClass == null) throw new GdxRuntimeException("Unknown file extension for sound: " + file);
 		try {
 			return soundClass.getConstructor(new Class[] {OpenALAudio.class, FileHandle.class}).newInstance(this, file);
@@ -118,7 +118,7 @@
 
 	public OpenALMusic newMusic (FileHandle file) {
 		if (file == null) throw new IllegalArgumentException("file cannot be null.");
-		Class<? extends OpenALMusic> musicClass = extensionToMusicClass.get(file.extension());
+		Class<? extends OpenALMusic> musicClass = extensionToMusicClass.get(file.extension().toLowerCase());
 		if (musicClass == null) throw new GdxRuntimeException("Unknown file extension for music: " + file);
 		try {
 			return musicClass.getConstructor(new Class[] {OpenALAudio.class, FileHandle.class}).newInstance(this, file);
