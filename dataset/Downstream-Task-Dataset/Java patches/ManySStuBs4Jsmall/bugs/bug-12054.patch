diff --git a/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java b/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java
index e03210f..fc04fb9 100644
--- a/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java
+++ b/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java
@@ -94,9 +94,9 @@
     assertTrue(result.contains("hello vert.x - {}"));
 
     result = recording.execute(() -> {
-      logger.info("hello {}", "vert.x", "foo");
+      logger.info("hello {} {}", "vert.x", "foo");
     });
-    assertTrue(result.contains("hello [vert.x, foo]"));
+    assertTrue(result.contains("hello vert.x foo"));
 
     result = recording.execute(() -> {
       logger.info("{}, an exception has been thrown", new IllegalStateException(), "Luke");
@@ -140,9 +140,9 @@
     assertTrue(result.contains("hello vert.x - {}"));
 
     result = recording.execute(() -> {
-      logger.error("hello {}", "vert.x", "foo");
+      logger.error("hello {} {}", "vert.x", "foo");
     });
-    String expected = "hello [vert.x, foo]";
+    String expected = "hello vert.x foo";
     assertTrue("Was expected <" + result + "> to contain <" + expected + ">" , result.contains(expected));
 
     result = recording.execute(() -> {
@@ -187,9 +187,9 @@
     assertTrue(result.contains("hello vert.x - {}"));
 
     result = recording.execute(() -> {
-      logger.warn("hello {}", "vert.x", "foo");
+      logger.warn("hello {} {}", "vert.x", "foo");
     });
-    String expected = "hello [vert.x, foo]";
+    String expected = "hello vert.x foo";
     assertTrue("Was expected <" + result + "> to contain <" + expected + ">" , result.contains(expected));
 
     result = recording.execute(() -> {
diff --git a/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java b/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java
index e03210f..fc04fb9 100644
--- a/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java
+++ b/src/test/java/io/vertx/test/it/Log4J2LogDelegateTest.java
@@ -94,9 +94,9 @@
     assertTrue(result.contains("hello vert.x - {}"));
 
     result = recording.execute(() -> {
-      logger.info("hello {}", "vert.x", "foo");
+      logger.info("hello {} {}", "vert.x", "foo");
     });
-    assertTrue(result.contains("hello [vert.x, foo]"));
+    assertTrue(result.contains("hello vert.x foo"));
 
     result = recording.execute(() -> {
       logger.info("{}, an exception has been thrown", new IllegalStateException(), "Luke");
@@ -140,9 +140,9 @@
     assertTrue(result.contains("hello vert.x - {}"));
 
     result = recording.execute(() -> {
-      logger.error("hello {}", "vert.x", "foo");
+      logger.error("hello {} {}", "vert.x", "foo");
     });
-    String expected = "hello [vert.x, foo]";
+    String expected = "hello vert.x foo";
     assertTrue("Was expected <" + result + "> to contain <" + expected + ">" , result.contains(expected));
 
     result = recording.execute(() -> {
@@ -187,9 +187,9 @@
     assertTrue(result.contains("hello vert.x - {}"));
 
     result = recording.execute(() -> {
-      logger.warn("hello {}", "vert.x", "foo");
+      logger.warn("hello {} {}", "vert.x", "foo");
     });
-    String expected = "hello [vert.x, foo]";
+    String expected = "hello vert.x foo";
     assertTrue("Was expected <" + result + "> to contain <" + expected + ">" , result.contains(expected));
 
     result = recording.execute(() -> {
