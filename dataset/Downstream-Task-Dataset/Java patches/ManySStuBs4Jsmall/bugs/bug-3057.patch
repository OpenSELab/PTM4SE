diff --git a/src/cn/trinea/android/common/entity/HttpResponse.java b/src/cn/trinea/android/common/entity/HttpResponse.java
index 5f28ce2..65659e6 100644
--- a/src/cn/trinea/android/common/entity/HttpResponse.java
+++ b/src/cn/trinea/android/common/entity/HttpResponse.java
@@ -229,7 +229,7 @@
      * 
      * @return -1 represents http error or no cache-control in response headers, or max-age in seconds
      */
-    private int getCacheControlMaxAge() {
+    private long getCacheControlMaxAge() {
         try {
             String cacheControl = (String)responseHeaders.get(HttpConstants.CACHE_CONTROL);
             if (!StringUtils.isEmpty(cacheControl)) {
@@ -242,7 +242,7 @@
                     } else {
                         maxAge = cacheControl.substring(start + "max-age=".length());
                     }
-                    return Integer.parseInt(maxAge);
+                    return Long.parseLong(maxAge);
                 }
             }
             return -1;
@@ -262,7 +262,7 @@
      *         </ul>
      */
     private long getExpiresInMillis() {
-        int maxAge = getCacheControlMaxAge();
+        long maxAge = getCacheControlMaxAge();
         if (maxAge != -1) {
             return System.currentTimeMillis() + maxAge * 1000;
         } else {
diff --git a/src/cn/trinea/android/common/entity/HttpResponse.java b/src/cn/trinea/android/common/entity/HttpResponse.java
index 5f28ce2..65659e6 100644
--- a/src/cn/trinea/android/common/entity/HttpResponse.java
+++ b/src/cn/trinea/android/common/entity/HttpResponse.java
@@ -229,7 +229,7 @@
      * 
      * @return -1 represents http error or no cache-control in response headers, or max-age in seconds
      */
-    private int getCacheControlMaxAge() {
+    private long getCacheControlMaxAge() {
         try {
             String cacheControl = (String)responseHeaders.get(HttpConstants.CACHE_CONTROL);
             if (!StringUtils.isEmpty(cacheControl)) {
@@ -242,7 +242,7 @@
                     } else {
                         maxAge = cacheControl.substring(start + "max-age=".length());
                     }
-                    return Integer.parseInt(maxAge);
+                    return Long.parseLong(maxAge);
                 }
             }
             return -1;
@@ -262,7 +262,7 @@
      *         </ul>
      */
     private long getExpiresInMillis() {
-        int maxAge = getCacheControlMaxAge();
+        long maxAge = getCacheControlMaxAge();
         if (maxAge != -1) {
             return System.currentTimeMillis() + maxAge * 1000;
         } else {
