diff --git a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java
index 23094d1..d0ef0de 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java
@@ -191,8 +191,7 @@
             break;
           }
         }
-        if (pkPos == rowType.getFieldNames().size()
-            || pkPos == rowType.getFieldNames().size()) {
+        if (pkPos == rowType.getFieldNames().size()) {
           LOG.error("Column for primary key definition " + pkColName + " not found");
           return ImmutableList.of();
         }
@@ -218,8 +217,7 @@
             break;
           }
         }
-        if (ukPos == rowType.getFieldNames().size()
-            || ukPos == rowType.getFieldNames().size()) {
+        if (ukPos == rowType.getFieldNames().size()) {
           LOG.error("Column for unique constraint definition " + ukCol.colName + " not found");
           return ImmutableList.of();
         }
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java
index 23094d1..d0ef0de 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/RelOptHiveTable.java
@@ -191,8 +191,7 @@
             break;
           }
         }
-        if (pkPos == rowType.getFieldNames().size()
-            || pkPos == rowType.getFieldNames().size()) {
+        if (pkPos == rowType.getFieldNames().size()) {
           LOG.error("Column for primary key definition " + pkColName + " not found");
           return ImmutableList.of();
         }
@@ -218,8 +217,7 @@
             break;
           }
         }
-        if (ukPos == rowType.getFieldNames().size()
-            || ukPos == rowType.getFieldNames().size()) {
+        if (ukPos == rowType.getFieldNames().size()) {
           LOG.error("Column for unique constraint definition " + ukCol.colName + " not found");
           return ImmutableList.of();
         }
