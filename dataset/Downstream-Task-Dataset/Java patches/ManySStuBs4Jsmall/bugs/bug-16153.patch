diff --git a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java
index b0b7f6a..d88d435 100644
--- a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java
+++ b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java
@@ -335,8 +335,7 @@
     }
 
     public int size() {
-        //TODO check tx
-        return getItemQueue().size(); //TODO check max size
+        return Math.min(config.getMaxSize(),getItemQueue().size()); //TODO check max size
     }
 
     public int backupSize(){
@@ -454,7 +453,7 @@
                 QueueItem item = iter.next();
                 if (map.containsKey(item.getItemId())) {
                     iter.remove();
-                    pollBackup(item.getItemId());
+                    age(item, Clock.currentTimeMillis());//For Stats
                 }
             }
         }
diff --git a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java
index b0b7f6a..d88d435 100644
--- a/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java
+++ b/hazelcast/src/main/java/com/hazelcast/queue/QueueContainer.java
@@ -335,8 +335,7 @@
     }
 
     public int size() {
-        //TODO check tx
-        return getItemQueue().size(); //TODO check max size
+        return Math.min(config.getMaxSize(),getItemQueue().size()); //TODO check max size
     }
 
     public int backupSize(){
@@ -454,7 +453,7 @@
                 QueueItem item = iter.next();
                 if (map.containsKey(item.getItemId())) {
                     iter.remove();
-                    pollBackup(item.getItemId());
+                    age(item, Clock.currentTimeMillis());//For Stats
                 }
             }
         }
