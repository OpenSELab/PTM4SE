diff --git a/api/src/main/java/org/openmrs/api/db/hibernate/HibernateEncounterDAO.java b/api/src/main/java/org/openmrs/api/db/hibernate/HibernateEncounterDAO.java
index bebb449..3e6ecec 100644
--- a/api/src/main/java/org/openmrs/api/db/hibernate/HibernateEncounterDAO.java
+++ b/api/src/main/java/org/openmrs/api/db/hibernate/HibernateEncounterDAO.java
@@ -311,7 +311,7 @@
 	 */
 	@Override
 	public Map<Integer, List<Encounter>> getAllEncounters(Cohort patients) {
-		Map<Integer, List<Encounter>> encountersBypatient = new HashMap<Integer, List<Encounter>>();
+		Map<Integer, List<Encounter>> encountersBypatient = new HashMap<>();
 		
 		@SuppressWarnings("unchecked")
 		List<Encounter> allEncounters = createEncounterCriteria(patients).list();
@@ -322,7 +322,7 @@
 			List<Encounter> encounters = encountersBypatient.get(patientId);
 			
 			if (encounters == null) {
-				encounters = new ArrayList<Encounter>();
+				encounters = new ArrayList<>();
 			}
 			
 			encounters.add(encounter);
@@ -345,7 +345,7 @@
 		
 		// only include this where clause if patients were passed in
 		if (patients != null) {
-            ArrayList<Integer> patientIds = new ArrayList<Integer>();
+            ArrayList<Integer> patientIds = new ArrayList<>();
 			patients.getMemberships().forEach(m -> patientIds.add(m.getPatientId()));
 			criteria.add(Restrictions.in("patient.personId", patientIds));
 		}
@@ -438,7 +438,7 @@
 			//As identifier could be all alpha, no heuristic here will work in determining intent of user for querying by name versus identifier
 			//So search by both!
 			criteria = new PatientSearchCriteria(sessionFactory, criteria).prepareCriteria(query, query,
-			    new ArrayList<PatientIdentifierType>(), true, orderByNames, true);	
+					new ArrayList<>(), true, orderByNames, true);
 		}
 		
 		return criteria;
