diff --git a/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java b/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
index dc2b724..d5beade 100644
--- a/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
+++ b/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
@@ -153,7 +153,7 @@
         "var x=0;" + "for(;x<10;x++);" + "x=0;" + "for(;x<10;x++);" + "x=0;" + "for(;x<10;x++) {}");
 
     inFunction(
-        "for(var x = 0; x < 10; x++){z}" + "for(var y = 0, z = 0; y < 10; y++){z}",
+        "for(var x = 0; x < 10; x++){z} for(var y = 0, z = 0; y < 10; y++){z}",
         "var x=0;for(;x<10;x++)z;x=0;var z=0;for(;x<10;x++)z");
 
     inFunction("var x = 1; x; for (var y; y=1; ) {y}", "var x = 1; x; for ( ; x=1; ) {x}");
@@ -314,9 +314,10 @@
             "  var buffer;",
             "  if(opt_a2){",
             "    var i=0;",
-            "    for(;i<arguments.length;i++)buffer=buffer+arguments[i]",
+            "    for(;i<arguments.length;i++)",
+            "      buffer=buffer+arguments[i];",
             "  }",
-            "return buffer",
+            "  return buffer;",
             "}");
     testSame(src);
   }
@@ -479,61 +480,65 @@
   public void testBug1445366() {
     // An assignment might not be complete if the RHS throws an exception.
     inFunction(
-        " var iframe = getFrame();" +
-        " try {" +
-        "   var win = iframe.contentWindow;" +
-        " } catch (e) {" +
-        " } finally {" +
-        "   if (win)" +
-        "     this.setupWinUtil_();" +
-        "   else" +
-        "     this.load();" +
-        " }");
+        LINE_JOINER.join(
+            "var iframe = getFrame();",
+            "try {",
+            "  var win = iframe.contentWindow;",
+            "} catch (e) {",
+            "} finally {",
+            "  if (win)",
+            "    this.setupWinUtil_();",
+            "  else",
+            "    this.load();",
+            "}"));
 
     // Verify that we can still coalesce it if there are no handlers.
     inFunction(
-        " var iframe = getFrame();" +
-        " var win = iframe.contentWindow;" +
-        " if (win)" +
-        "   this.setupWinUtil_();" +
-        " else" +
-        "   this.load();",
-
-        " var iframe = getFrame();" +
-        " iframe = iframe.contentWindow;" +
-        " if (iframe)" +
-        "   this.setupWinUtil_();" +
-        " else" +
-        "   this.load();");
+        LINE_JOINER.join(
+            "var iframe = getFrame();",
+            "var win = iframe.contentWindow;",
+            "if (win)",
+            "  this.setupWinUtil_();",
+            "else",
+            "  this.load();"),
+        LINE_JOINER.join(
+            "var iframe = getFrame();",
+            "iframe = iframe.contentWindow;",
+            "if (iframe)",
+            "  this.setupWinUtil_();",
+            "else",
+            "  this.load();"));
   }
 
   public void testCannotReuseAnyParamsBug() {
-    testSame("function handleKeyboardShortcut(e, key, isModifierPressed) {\n" +
-        "  if (!isModifierPressed) {\n" +
-        "    return false;\n" +
-        "  }\n" +
-        "  var command;\n" +
-        "  switch (key) {\n" +
-        "    case 'b': // Ctrl+B\n" +
-        "      command = COMMAND.BOLD;\n" +
-        "      break;\n" +
-        "    case 'i': // Ctrl+I\n" +
-        "      command = COMMAND.ITALIC;\n" +
-        "      break;\n" +
-        "    case 'u': // Ctrl+U\n" +
-        "      command = COMMAND.UNDERLINE;\n" +
-        "      break;\n" +
-        "    case 's': // Ctrl+S\n" +
-        "      return true;\n" +
-        "  }\n" +
-        "\n" +
-        "  if (command) {\n" +
-        "    this.fieldObject.execCommand(command);\n" +
-        "    return true;\n" +
-        "  }\n" +
-        "\n" +
-        "  return false;\n" +
-        "};");
+    testSame(
+        LINE_JOINER.join(
+            "function handleKeyboardShortcut(e, key, isModifierPressed) {",
+            "  if (!isModifierPressed) {",
+            "    return false;",
+            "  }",
+            "  var command;",
+            "  switch (key) {",
+            "    case 'b': // Ctrl+B",
+            "      command = COMMAND.BOLD;",
+            "      break;",
+            "    case 'i': // Ctrl+I",
+            "      command = COMMAND.ITALIC;",
+            "      break;",
+            "    case 'u': // Ctrl+U",
+            "      command = COMMAND.UNDERLINE;",
+            "      break;",
+            "    case 's': // Ctrl+S",
+            "      return true;",
+            "  }",
+            "",
+            "  if (command) {",
+            "    this.fieldObject.execCommand(command);",
+            "    return true;",
+            "  }",
+            "",
+            "  return false;",
+            "};"));
   }
 
   public void testForInWithAssignment() {
@@ -559,11 +564,9 @@
     inFunction("var x   = 0; print(x  ); var   y = 1; print(  y)",
                "var x_y = 0; print(x_y);     x_y = 1; print(x_y)");
 
-    inFunction("var x_y = 1; var x   = 0; print(x  ); var     y = 1;" +
-               "print(  y); print(x_y);",
-
-               "var x_y = 1; var x_y$ = 0; print(x_y$);     x_y$ = 1;" + "" +
-               "print(x_y$); print(x_y);");
+    inFunction(
+        "var x_y = 1; var x    = 0; print(x   ); var     y = 1; print(   y); print(x_y);",
+        "var x_y = 1; var x_y$ = 0; print(x_y$);      x_y$ = 1; print(x_y$); print(x_y);");
 
     inFunction(
         LINE_JOINER.join(
diff --git a/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java b/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
index dc2b724..d5beade 100644
--- a/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
+++ b/test/com/google/javascript/jscomp/CoalesceVariableNamesTest.java
@@ -153,7 +153,7 @@
         "var x=0;" + "for(;x<10;x++);" + "x=0;" + "for(;x<10;x++);" + "x=0;" + "for(;x<10;x++) {}");
 
     inFunction(
-        "for(var x = 0; x < 10; x++){z}" + "for(var y = 0, z = 0; y < 10; y++){z}",
+        "for(var x = 0; x < 10; x++){z} for(var y = 0, z = 0; y < 10; y++){z}",
         "var x=0;for(;x<10;x++)z;x=0;var z=0;for(;x<10;x++)z");
 
     inFunction("var x = 1; x; for (var y; y=1; ) {y}", "var x = 1; x; for ( ; x=1; ) {x}");
@@ -314,9 +314,10 @@
             "  var buffer;",
             "  if(opt_a2){",
             "    var i=0;",
-            "    for(;i<arguments.length;i++)buffer=buffer+arguments[i]",
+            "    for(;i<arguments.length;i++)",
+            "      buffer=buffer+arguments[i];",
             "  }",
-            "return buffer",
+            "  return buffer;",
             "}");
     testSame(src);
   }
@@ -479,61 +480,65 @@
   public void testBug1445366() {
     // An assignment might not be complete if the RHS throws an exception.
     inFunction(
-        " var iframe = getFrame();" +
-        " try {" +
-        "   var win = iframe.contentWindow;" +
-        " } catch (e) {" +
-        " } finally {" +
-        "   if (win)" +
-        "     this.setupWinUtil_();" +
-        "   else" +
-        "     this.load();" +
-        " }");
+        LINE_JOINER.join(
+            "var iframe = getFrame();",
+            "try {",
+            "  var win = iframe.contentWindow;",
+            "} catch (e) {",
+            "} finally {",
+            "  if (win)",
+            "    this.setupWinUtil_();",
+            "  else",
+            "    this.load();",
+            "}"));
 
     // Verify that we can still coalesce it if there are no handlers.
     inFunction(
-        " var iframe = getFrame();" +
-        " var win = iframe.contentWindow;" +
-        " if (win)" +
-        "   this.setupWinUtil_();" +
-        " else" +
-        "   this.load();",
-
-        " var iframe = getFrame();" +
-        " iframe = iframe.contentWindow;" +
-        " if (iframe)" +
-        "   this.setupWinUtil_();" +
-        " else" +
-        "   this.load();");
+        LINE_JOINER.join(
+            "var iframe = getFrame();",
+            "var win = iframe.contentWindow;",
+            "if (win)",
+            "  this.setupWinUtil_();",
+            "else",
+            "  this.load();"),
+        LINE_JOINER.join(
+            "var iframe = getFrame();",
+            "iframe = iframe.contentWindow;",
+            "if (iframe)",
+            "  this.setupWinUtil_();",
+            "else",
+            "  this.load();"));
   }
 
   public void testCannotReuseAnyParamsBug() {
-    testSame("function handleKeyboardShortcut(e, key, isModifierPressed) {\n" +
-        "  if (!isModifierPressed) {\n" +
-        "    return false;\n" +
-        "  }\n" +
-        "  var command;\n" +
-        "  switch (key) {\n" +
-        "    case 'b': // Ctrl+B\n" +
-        "      command = COMMAND.BOLD;\n" +
-        "      break;\n" +
-        "    case 'i': // Ctrl+I\n" +
-        "      command = COMMAND.ITALIC;\n" +
-        "      break;\n" +
-        "    case 'u': // Ctrl+U\n" +
-        "      command = COMMAND.UNDERLINE;\n" +
-        "      break;\n" +
-        "    case 's': // Ctrl+S\n" +
-        "      return true;\n" +
-        "  }\n" +
-        "\n" +
-        "  if (command) {\n" +
-        "    this.fieldObject.execCommand(command);\n" +
-        "    return true;\n" +
-        "  }\n" +
-        "\n" +
-        "  return false;\n" +
-        "};");
+    testSame(
+        LINE_JOINER.join(
+            "function handleKeyboardShortcut(e, key, isModifierPressed) {",
+            "  if (!isModifierPressed) {",
+            "    return false;",
+            "  }",
+            "  var command;",
+            "  switch (key) {",
+            "    case 'b': // Ctrl+B",
+            "      command = COMMAND.BOLD;",
+            "      break;",
+            "    case 'i': // Ctrl+I",
+            "      command = COMMAND.ITALIC;",
+            "      break;",
+            "    case 'u': // Ctrl+U",
+            "      command = COMMAND.UNDERLINE;",
+            "      break;",
+            "    case 's': // Ctrl+S",
+            "      return true;",
+            "  }",
+            "",
+            "  if (command) {",
+            "    this.fieldObject.execCommand(command);",
+            "    return true;",
+            "  }",
+            "",
+            "  return false;",
+            "};"));
   }
 
   public void testForInWithAssignment() {
@@ -559,11 +564,9 @@
     inFunction("var x   = 0; print(x  ); var   y = 1; print(  y)",
                "var x_y = 0; print(x_y);     x_y = 1; print(x_y)");
 
-    inFunction("var x_y = 1; var x   = 0; print(x  ); var     y = 1;" +
-               "print(  y); print(x_y);",
-
-               "var x_y = 1; var x_y$ = 0; print(x_y$);     x_y$ = 1;" + "" +
-               "print(x_y$); print(x_y);");
+    inFunction(
+        "var x_y = 1; var x    = 0; print(x   ); var     y = 1; print(   y); print(x_y);",
+        "var x_y = 1; var x_y$ = 0; print(x_y$);      x_y$ = 1; print(x_y$); print(x_y);");
 
     inFunction(
         LINE_JOINER.join(
