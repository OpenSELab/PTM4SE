diff --git a/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java b/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java
index ef4c6ff..798b741 100644
--- a/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java
+++ b/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java
@@ -49,7 +49,7 @@
         context.stop();
     }
 
-    protected CamelContext createCamelContext() {
+    protected CamelContext createCamelContext() throws Exception {
         return new DefaultCamelContext();
     }
 
diff --git a/camel-core/src/test/java/org/apache/camel/processor/IdempotentConsumerTest.java b/camel-core/src/test/java/org/apache/camel/processor/IdempotentConsumerTest.java
index bcc102e..260e8b4 100644
--- a/camel-core/src/test/java/org/apache/camel/processor/IdempotentConsumerTest.java
+++ b/camel-core/src/test/java/org/apache/camel/processor/IdempotentConsumerTest.java
@@ -71,14 +71,14 @@
     protected void setUp() throws Exception {
         super.setUp();
 
-        startEndpoint = resolveMandatoryEndpoint("direct:test.a");
+        startEndpoint = resolveMandatoryEndpoint("direct:start");
         resultEndpoint = (MockEndpoint) resolveMandatoryEndpoint("mock:result");
     }
 
     protected RouteBuilder createRouteBuilder() {
         return new RouteBuilder() {
             public void configure() {
-                from("direct:test.a").idempotentConsumer(header("messageId"), memoryMessageIdRepository()).to("mock:result");
+                from("direct:start").idempotentConsumer(header("messageId"), memoryMessageIdRepository()).to("mock:result");
             }
         };
     }
diff --git a/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java b/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java
index 8c1dff8..a8d9348 100644
--- a/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java
+++ b/camel-jpa/src/test/java/org/apache/camel/processor/jpa/JpaIdempotentConsumerTest.java
@@ -36,20 +36,20 @@
     protected ApplicationContext applicationContext;
 
     @Override
-    protected CamelContext createContext() throws Exception {
+    protected CamelContext createCamelContext() throws Exception {
         applicationContext = new ClassPathXmlApplicationContext("org/apache/camel/processor/jpa/spring.xml");
         return SpringCamelContext.springCamelContext(applicationContext);
     }
 
     @Override
-    protected RouteBuilder createRouteBuilder(final String fromUri, final String toUri) {
+    protected RouteBuilder createRouteBuilder() {
         // START SNIPPET: idempotent
         return new SpringRouteBuilder<Exchange>() {
             public void configure() {
-                from(fromUri).idempotentConsumer(
+                from("direct:start").idempotentConsumer(
                         header("messageId"),
                         jpaMessageIdRepository(bean(JpaTemplate.class), "myProcessorName")
-                ).to(toUri);
+                ).to("mock:result");
             }
         };
         // END SNIPPET: idempotent
diff --git a/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java b/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java
index ef4c6ff..798b741 100644
--- a/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java
+++ b/camel-core/src/test/java/org/apache/camel/ContextTestSupport.java
@@ -49,7 +49,7 @@
         context.stop();
     }
 
-    protected CamelContext createCamelContext() {
+    protected CamelContext createCamelContext() throws Exception {
         return new DefaultCamelContext();
     }
 
