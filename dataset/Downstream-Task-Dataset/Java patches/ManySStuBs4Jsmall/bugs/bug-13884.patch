diff --git a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
index edf8307..0c6fc5e 100644
--- a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
+++ b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
@@ -1629,9 +1629,13 @@
 
   public void testCallGenerator2() {
     this.mode = TypeInferenceMode.NEITHER; // type check for yield not yet implemented
-    String source =
-        LINE_JOINER.join(
-            "function* f() {", "  while (true) {", "    yield 1;", "  }", "}", "var g = f()");
+    String source = LINE_JOINER.join(
+            "function* f() {",
+            "  while (true) {",
+            "    yield 1;",
+            "  }",
+            "}",
+            "var g = f();");
     assertPureCallsMarked(source, ImmutableList.of("f"));
   }
 
diff --git a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
index edf8307..0c6fc5e 100644
--- a/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
+++ b/test/com/google/javascript/jscomp/PureFunctionIdentifierTest.java
@@ -1629,9 +1629,13 @@
 
   public void testCallGenerator2() {
     this.mode = TypeInferenceMode.NEITHER; // type check for yield not yet implemented
-    String source =
-        LINE_JOINER.join(
-            "function* f() {", "  while (true) {", "    yield 1;", "  }", "}", "var g = f()");
+    String source = LINE_JOINER.join(
+            "function* f() {",
+            "  while (true) {",
+            "    yield 1;",
+            "  }",
+            "}",
+            "var g = f();");
     assertPureCallsMarked(source, ImmutableList.of("f"));
   }
 
