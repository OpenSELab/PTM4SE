diff --git a/src/com/google/javascript/jscomp/newtypes/FunctionType.java b/src/com/google/javascript/jscomp/newtypes/FunctionType.java
index 463291c..9a3c224 100644
--- a/src/com/google/javascript/jscomp/newtypes/FunctionType.java
+++ b/src/com/google/javascript/jscomp/newtypes/FunctionType.java
@@ -766,11 +766,11 @@
     builder.append("function(");
     if (nominalType != null) {
       builder.append("new:");
-      builder.append(nominalType.getName());
+      builder.append(nominalType);
       builder.append(',');
     } else if (receiverType != null) {
       builder.append("this:");
-      builder.append(receiverType.getName());
+      builder.append(receiverType);
       builder.append(',');
     }
     for (int i = 0; i < requiredFormals.size(); ++i) {
diff --git a/src/com/google/javascript/jscomp/newtypes/FunctionType.java b/src/com/google/javascript/jscomp/newtypes/FunctionType.java
index 463291c..9a3c224 100644
--- a/src/com/google/javascript/jscomp/newtypes/FunctionType.java
+++ b/src/com/google/javascript/jscomp/newtypes/FunctionType.java
@@ -766,11 +766,11 @@
     builder.append("function(");
     if (nominalType != null) {
       builder.append("new:");
-      builder.append(nominalType.getName());
+      builder.append(nominalType);
       builder.append(',');
     } else if (receiverType != null) {
       builder.append("this:");
-      builder.append(receiverType.getName());
+      builder.append(receiverType);
       builder.append(',');
     }
     for (int i = 0; i < requiredFormals.size(); ++i) {
