diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java
index d88bf21..f1c33e5 100644
--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java
+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java
@@ -372,7 +372,7 @@
     		return addInterceptor(methodName, args, interceptor);
     	} else {
 			if (logger.isWarnEnabled()) {
-				logger.warn("MethodInfo is not declared. class={}, methodName={}, args={}", ctClass.getName(), methodName, Arrays.toString(args));
+				logger.warn("Method is not declared. class={}, methodName={}, args={}", ctClass.getName(), methodName, Arrays.toString(args));
 			}
     		return -1;
     	}
diff --git a/profiler/src/test/java/com/navercorp/pinpoint/profiler/interceptor/bci/MethodRenameInterceptorTest.java b/profiler/src/test/java/com/navercorp/pinpoint/profiler/interceptor/bci/MethodRenameInterceptorTest.java
index 1c87b1f..d2a1e9b 100644
--- a/profiler/src/test/java/com/navercorp/pinpoint/profiler/interceptor/bci/MethodRenameInterceptorTest.java
+++ b/profiler/src/test/java/com/navercorp/pinpoint/profiler/interceptor/bci/MethodRenameInterceptorTest.java
@@ -13,7 +13,7 @@
 public class MethodRenameInterceptorTest {
     @Test
     public void methodRename() {
-        // MethodInfo rename을 사용해서 local 변수를 공유하는 방법의 경우 call stack이 변경되는 문제점이있다.
+        // Method rename을 사용해서 local 변수를 공유하는 방법의 경우 call stack이 변경되는 문제점이있다.
         try {
             String methodName = "callA";
             String objectName = "TestObject";
diff --git a/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapClientImplModifierTest.java b/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapClientImplModifierTest.java
index 56284de..d84e6ad 100644
--- a/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapClientImplModifierTest.java
+++ b/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapClientImplModifierTest.java
@@ -84,7 +84,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo insertSpanEventBo = spanEvents.get(0);
 		final SpanEventBo queryForListSpanEventBo = spanEvents.get(1);
 		assertThat(insertSpanEventBo.getApiId(), not(0));
@@ -107,7 +107,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo insertASpanEventBo = spanEvents.get(0);
 		final SpanEventBo insertBSpanEventBo = spanEvents.get(1);
 		assertThat(insertASpanEventBo.getApiId(), not(0));
@@ -127,7 +127,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo insertWith1ArgSpanEventBo = spanEvents.get(0);
 		final SpanEventBo insertWith2ArgSpanEventBo = spanEvents.get(1);
 		assertThat(insertWith1ArgSpanEventBo.getApiId(), not(0));
@@ -158,7 +158,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo deleteWith1ArgSpanEvent = spanEvents.get(0);
 		final SpanEventBo deleteWith2ArgSpanEvent = spanEvents.get(1);
 		assertThat(deleteWith1ArgSpanEvent.getApiId(), not(0));
@@ -188,7 +188,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo updateWith1ArgSpanEvent = spanEvents.get(0);
 		final SpanEventBo updateWith2ArgSpanEvent = spanEvents.get(1);
 		assertThat(updateWith1ArgSpanEvent.getApiId(), not(0));
@@ -218,7 +218,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(1));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo apiCallSpanEventBo = spanEvents.get(0);
 		assertThat(apiCallSpanEventBo.getApiId(), not(0));
 
@@ -240,7 +240,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(1));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo apiCallSpanEventBo = spanEvents.get(0);
 		assertThat(apiCallSpanEventBo.getApiId(), not(0));
 
@@ -265,7 +265,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(3));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo startTransactionSpanEventBo = spanEvents.get(0);
 		final SpanEventBo commitTransactionSpanEventBo = spanEvents.get(1);
 		final SpanEventBo endTransactionSpanEventBo = spanEvents.get(2);
diff --git a/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapSessionImplModifierTest.java b/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapSessionImplModifierTest.java
index 26997bb..76925f0 100644
--- a/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapSessionImplModifierTest.java
+++ b/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/ibatis/SqlMapSessionImplModifierTest.java
@@ -85,7 +85,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo insertSpanEventBo = spanEvents.get(0);
 		final SpanEventBo queryForListSpanEventBo = spanEvents.get(1);
 		assertThat(insertSpanEventBo.getApiId(), not(0));
@@ -108,7 +108,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo insertASpanEventBo = spanEvents.get(0);
 		final SpanEventBo insertBSpanEventBo = spanEvents.get(1);
 		assertThat(insertASpanEventBo.getApiId(), not(0));
@@ -128,7 +128,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo insertWith1ArgSpanEventBo = spanEvents.get(0);
 		final SpanEventBo insertWith2ArgSpanEventBo = spanEvents.get(1);
 		assertThat(insertWith1ArgSpanEventBo.getApiId(), not(0));
@@ -159,7 +159,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo deleteWith1ArgSpanEvent = spanEvents.get(0);
 		final SpanEventBo deleteWith2ArgSpanEvent = spanEvents.get(1);
 		assertThat(deleteWith1ArgSpanEvent.getApiId(), not(0));
@@ -189,7 +189,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(2));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo updateWith1ArgSpanEvent = spanEvents.get(0);
 		final SpanEventBo updateWith2ArgSpanEvent = spanEvents.get(1);
 		assertThat(updateWith1ArgSpanEvent.getApiId(), not(0));
@@ -219,7 +219,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(1));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo apiCallSpanEventBo = spanEvents.get(0);
 		assertThat(apiCallSpanEventBo.getApiId(), not(0));
 
@@ -241,7 +241,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(1));
 
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo apiCallSpanEventBo = spanEvents.get(0);
 		assertThat(apiCallSpanEventBo.getApiId(), not(0));
 
@@ -266,7 +266,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(3));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo startTransactionSpanEventBo = spanEvents.get(0);
 		final SpanEventBo commitTransactionSpanEventBo = spanEvents.get(1);
 		final SpanEventBo endTransactionSpanEventBo = spanEvents.get(2);
@@ -296,7 +296,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(1));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo closeSpanEventBo = spanEvents.get(0);
 		assertThat(closeSpanEventBo.getApiId(), not(0));
 		
diff --git a/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/mybatis/MyBatisClientModifierTest.java b/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/mybatis/MyBatisClientModifierTest.java
index 55acf0f..ea95d84 100644
--- a/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/mybatis/MyBatisClientModifierTest.java
+++ b/profiler/src/test/java/com/navercorp/pinpoint/profiler/modifier/orm/mybatis/MyBatisClientModifierTest.java
@@ -48,7 +48,7 @@
 		final List<SpanEventBo> spanEvents = getCurrentSpanEvents();
 		assertThat(spanEvents.size(), is(1));
 		
-		// Check MethodInfo
+		// Check Method
 		final SpanEventBo insertSpanEventBo = spanEvents.get(0);
 		assertThat(insertSpanEventBo.getApiId(), not(NOT_CACHED));
 		
diff --git a/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java b/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java
index d88bf21..f1c33e5 100644
--- a/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java
+++ b/profiler/src/main/java/com/navercorp/pinpoint/profiler/interceptor/bci/JavaAssistClass.java
@@ -372,7 +372,7 @@
     		return addInterceptor(methodName, args, interceptor);
     	} else {
 			if (logger.isWarnEnabled()) {
-				logger.warn("MethodInfo is not declared. class={}, methodName={}, args={}", ctClass.getName(), methodName, Arrays.toString(args));
+				logger.warn("Method is not declared. class={}, methodName={}, args={}", ctClass.getName(), methodName, Arrays.toString(args));
 			}
     		return -1;
     	}
