diff --git a/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java b/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java
index 596d18b..d289437 100644
--- a/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java
+++ b/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java
@@ -29,11 +29,11 @@
 import org.apache.camel.util.ObjectHelper;
 
 /**
- * To use JSonPath in Camel expressions or predicates.
+ * To use JsonPath in Camel expressions or predicates.
  *
  * @version 
  */
-@Metadata(firstVersion = "2.13.0", label = "language,json", title = "JSonPath")
+@Metadata(firstVersion = "2.13.0", label = "language,json", title = "JsonPath")
 @XmlRootElement(name = "jsonpath")
 @XmlAccessorType(XmlAccessType.FIELD)
 public class JsonPathExpression extends ExpressionDefinition {
@@ -91,7 +91,7 @@
     }
 
     /**
-     * Whether to allow in inlined simple exceptions in the json path expression
+     * Whether to allow in inlined simple exceptions in the JsonPath expression
      */
     public void setAllowSimple(Boolean allowSimple) {
         this.allowSimple = allowSimple;
@@ -120,7 +120,7 @@
     }
 
     /**
-     * Whether to write the output of each row/element as a JSon String value instead of a Map/POJO value.
+     * Whether to write the output of each row/element as a JSON String value instead of a Map/POJO value.
      */
     public void setWriteAsString(Boolean writeAsString) {
         this.writeAsString = writeAsString;
diff --git a/components/camel-jsonpath/src/main/java/org/apache/camel/jsonpath/JsonPath.java b/components/camel-jsonpath/src/main/java/org/apache/camel/jsonpath/JsonPath.java
index bbb399f..0cf390e 100644
--- a/components/camel-jsonpath/src/main/java/org/apache/camel/jsonpath/JsonPath.java
+++ b/components/camel-jsonpath/src/main/java/org/apache/camel/jsonpath/JsonPath.java
@@ -26,7 +26,7 @@
 import org.apache.camel.language.LanguageAnnotation;
 
 /**
- * An annotation used to inject a <a href="http://commons.apache.org/jsonpath/">JSon Path</a>
+ * An annotation used to inject a <a href="http://commons.apache.org/jsonpath/">JsonPath</a>
  * expression into a method parameter when using
  * <a href="http://camel.apache.org/bean-integration.html">Bean Integration</a>
  *
@@ -46,12 +46,12 @@
     boolean suppressExceptions() default false;
 
     /**
-     * Whether to allow in inlined simple exceptions in the json path expression
+     * Whether to allow in inlined simple exceptions in the JsonPath expression
      */
     boolean allowSimple() default true;
 
     /**
-     * To configure the json path options to use
+     * To configure the JsonPath options to use
      */
     Option[] options() default {};
 }
\ No newline at end of file
diff --git a/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java b/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java
index f9a7c6e..d40ca8f 100644
--- a/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java
+++ b/platforms/spring-boot/components-starter/camel-jsonpath-starter/src/main/java/org/apache/camel/jsonpath/springboot/JsonPathLanguageConfiguration.java
@@ -21,7 +21,7 @@
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
 /**
- * To use JSonPath in Camel expressions or predicates.
+ * To use JsonPath in Camel expressions or predicates.
  * 
  * Generated by camel-package-maven-plugin - do not edit this file!
  */
@@ -36,7 +36,7 @@
      */
     private Boolean suppressExceptions = false;
     /**
-     * Whether to allow in inlined simple exceptions in the json path expression
+     * Whether to allow in inlined simple exceptions in the JsonPath expression
      */
     private Boolean allowSimple = true;
     /**
@@ -44,7 +44,7 @@
      */
     private Boolean allowEasyPredicate = true;
     /**
-     * Whether to write the output of each row/element as a JSon String value
+     * Whether to write the output of each row/element as a JSON String value
      * instead of a Map/POJO value.
      */
     private Boolean writeAsString = false;
diff --git a/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java b/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java
index 596d18b..d289437 100644
--- a/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java
+++ b/camel-core/src/main/java/org/apache/camel/model/language/JsonPathExpression.java
@@ -29,11 +29,11 @@
 import org.apache.camel.util.ObjectHelper;
 
 /**
- * To use JSonPath in Camel expressions or predicates.
+ * To use JsonPath in Camel expressions or predicates.
  *
  * @version 
  */
-@Metadata(firstVersion = "2.13.0", label = "language,json", title = "JSonPath")
+@Metadata(firstVersion = "2.13.0", label = "language,json", title = "JsonPath")
 @XmlRootElement(name = "jsonpath")
 @XmlAccessorType(XmlAccessType.FIELD)
 public class JsonPathExpression extends ExpressionDefinition {
@@ -91,7 +91,7 @@
     }
 
     /**
-     * Whether to allow in inlined simple exceptions in the json path expression
+     * Whether to allow in inlined simple exceptions in the JsonPath expression
      */
     public void setAllowSimple(Boolean allowSimple) {
         this.allowSimple = allowSimple;
@@ -120,7 +120,7 @@
     }
 
     /**
-     * Whether to write the output of each row/element as a JSon String value instead of a Map/POJO value.
+     * Whether to write the output of each row/element as a JSON String value instead of a Map/POJO value.
      */
     public void setWriteAsString(Boolean writeAsString) {
         this.writeAsString = writeAsString;
