diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java
index 31cd3c0..8a7a3e6 100644
--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java
+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java
@@ -32,7 +32,7 @@
 						+ "from <lexerName> import <lexerName>\n"
 						+ "\n"
 						+ "def main(argv):\n"
-						+ "    input = FileStream(argv[1])\n"
+						+ "    input = FileStream(argv[1], encoding='utf-8', errors='replace')\n"
 						+ "    lexer = <lexerName>(input)\n"
 						+ "    stream = CommonTokenStream(lexer)\n"
 						+ "    stream.fill()\n"
@@ -76,7 +76,7 @@
 						+ "                raise IllegalStateException(\"Invalid parse tree shape detected.\")\n"
 						+ "\n"
 						+ "def main(argv):\n"
-						+ "    input = FileStream(argv[1])\n"
+						+ "    input = FileStream(argv[1], encoding='utf-8', errors='replace')\n"
 						+ "    lexer = <lexerName>(input)\n"
 						+ "    stream = CommonTokenStream(lexer)\n"
 						+ "<createParser>"
diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/BasePython3Test.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/BasePython3Test.java
index 2e1ba6d..fc00793 100644
--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/BasePython3Test.java
+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python3/BasePython3Test.java
@@ -30,7 +30,7 @@
 						+ "from <lexerName> import <lexerName>\n"
 						+ "\n"
 						+ "def main(argv):\n"
-						+ "    input = FileStream(argv[1])\n"
+						+ "    input = FileStream(argv[1], encoding='utf-8', errors='replace')\n"
 						+ "    lexer = <lexerName>(input)\n"
 						+ "    stream = CommonTokenStream(lexer)\n"
 						+ "    stream.fill()\n"
@@ -74,7 +74,7 @@
 						+ "                raise IllegalStateException(\"Invalid parse tree shape detected.\")\n"
 						+ "\n"
 						+ "def main(argv):\n"
-						+ "    input = FileStream(argv[1])\n"
+						+ "    input = FileStream(argv[1], encoding='utf-8', errors='replace')\n"
 						+ "    lexer = <lexerName>(input)\n"
 						+ "    stream = CommonTokenStream(lexer)\n"
 						+ "<createParser>"
diff --git a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java
index 31cd3c0..8a7a3e6 100644
--- a/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java
+++ b/runtime-testsuite/test/org/antlr/v4/test/runtime/python2/BasePython2Test.java
@@ -32,7 +32,7 @@
 						+ "from <lexerName> import <lexerName>\n"
 						+ "\n"
 						+ "def main(argv):\n"
-						+ "    input = FileStream(argv[1])\n"
+						+ "    input = FileStream(argv[1], encoding='utf-8', errors='replace')\n"
 						+ "    lexer = <lexerName>(input)\n"
 						+ "    stream = CommonTokenStream(lexer)\n"
 						+ "    stream.fill()\n"
@@ -76,7 +76,7 @@
 						+ "                raise IllegalStateException(\"Invalid parse tree shape detected.\")\n"
 						+ "\n"
 						+ "def main(argv):\n"
-						+ "    input = FileStream(argv[1])\n"
+						+ "    input = FileStream(argv[1], encoding='utf-8', errors='replace')\n"
 						+ "    lexer = <lexerName>(input)\n"
 						+ "    stream = CommonTokenStream(lexer)\n"
 						+ "<createParser>"
