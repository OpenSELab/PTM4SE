diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java
index 288dda2..3cd3a67 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java
@@ -50,17 +50,17 @@
     @Override
     protected String getPath(String filename) throws IOException {
         return super.getPath("checks" + File.separator
-                + "imports" + File.separator + filename);
+                + "imports" + File.separator + "importcontrol" + File.separator + filename);
     }
 
     @Override
     protected String getUriString(String filename) {
         return super.getUriString("checks" + File.separator
-                + "imports" + File.separator + filename);
+                + "imports" + File.separator + "importcontrol" + File.separator + filename);
     }
 
     private static String getResourcePath(String filename) {
-        return "/com/puppycrawl/tools/checkstyle/checks/imports/" + filename;
+        return "/com/puppycrawl/tools/checkstyle/checks/imports/importcontrol/" + filename;
     }
 
     @Test
@@ -77,7 +77,7 @@
     @Test
     public void testOne() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -86,7 +86,7 @@
     @Test
     public void testTwo() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_two.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlTwo.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -99,7 +99,7 @@
     @Test
     public void testWrong() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_wrong.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlWrong.xml"));
         final String[] expected = {"1:1: " + getCheckMessage(MSG_UNKNOWN_PKG)};
         verify(checkConfig, getPath("InputImportControl.java"), expected);
     }
@@ -145,7 +145,7 @@
     @Test
     public void testBroken() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_broken.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlBroken.xml"));
         try {
             final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;
             verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -160,7 +160,7 @@
     @Test
     public void testOneRegExp() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_one-re.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlOneRegExp.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -169,7 +169,7 @@
     @Test
     public void testTwoRegExp() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_two-re.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlTwoRegExp.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -182,7 +182,7 @@
     @Test
     public void testBlacklist() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_blacklist.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlBlacklist.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.util.stream.Stream"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "java.util.Date"),
@@ -196,7 +196,7 @@
     @Test
     public void testStrategyOnMismatchOne() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_one.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchOne.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -209,7 +209,7 @@
     @Test
     public void testStrategyOnMismatchTwo() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_two.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchTwo.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "6:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Button.ABORT"),
@@ -221,7 +221,7 @@
     @Test
     public void testStrategyOnMismatchThree() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_three.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchThree.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
         };
@@ -232,7 +232,7 @@
     @Test
     public void testStrategyOnMismatchFour() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_four.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchFour.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -243,17 +243,17 @@
 
     @Test
     public void testPkgRegExpInParent() throws Exception {
-        testRegExpInPackage("import-control_pkg-re-in-parent.xml");
+        testRegExpInPackage("InputImportControlPkgRegExpInParent.xml");
     }
 
     @Test
     public void testPkgRegExpInChild() throws Exception {
-        testRegExpInPackage("import-control_pkg-re-in-child.xml");
+        testRegExpInPackage("InputImportControlPkgRegExpInChild.xml");
     }
 
     @Test
     public void testPkgRegExpInBoth() throws Exception {
-        testRegExpInPackage("import-control_pkg-re-in-both.xml");
+        testRegExpInPackage("InputImportControlPkgRegExpInBoth.xml");
     }
 
     // all import-control_pkg-re* files should be equivalent so use one test for all
@@ -282,7 +282,7 @@
     @Test
     public void testUrl() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("url", getUriString("import-control_one.xml"));
+        checkConfig.addAttribute("url", getUriString("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -341,7 +341,7 @@
     @Test
     public void testResource() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -366,7 +366,7 @@
     @Test
     public void testUrlInFileProperty() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getUriString("import-control_one.xml"));
+        checkConfig.addAttribute("file", getUriString("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -391,7 +391,7 @@
     @Test
     public void testCacheWhenFileExternalResourceContentDoesNotChange() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_one-re.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlOneRegExp.xml"));
 
         final Checker checker = createMockCheckerWithCache(checkConfig);
 
@@ -406,7 +406,7 @@
     @Test
     public void testCacheWhenUrlExternalResourceContentDoesNotChange() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("url", getUriString("import-control_one.xml"));
+        checkConfig.addAttribute("url", getUriString("InputImportControlOne.xml"));
 
         final Checker checker = createMockCheckerWithCache(checkConfig);
 
@@ -421,7 +421,7 @@
     @Test
     public void testPathRegexMatches() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "^.*[\\\\/]src[\\\\/]test[\\\\/].*$");
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
@@ -431,7 +431,7 @@
     @Test
     public void testPathRegexMatchesPartially() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "[\\\\/]InputImportControl\\.java");
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
@@ -441,7 +441,7 @@
     @Test
     public void testPathRegexDoesntMatch() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "^.*[\\\\/]src[\\\\/]main[\\\\/].*$");
         final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;
 
@@ -451,7 +451,7 @@
     @Test
     public void testPathRegexDoesntMatchPartially() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "[\\\\/]NoMatch\\.java");
         final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;
 
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java
index 288dda2..3cd3a67 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheckTest.java
@@ -50,17 +50,17 @@
     @Override
     protected String getPath(String filename) throws IOException {
         return super.getPath("checks" + File.separator
-                + "imports" + File.separator + filename);
+                + "imports" + File.separator + "importcontrol" + File.separator + filename);
     }
 
     @Override
     protected String getUriString(String filename) {
         return super.getUriString("checks" + File.separator
-                + "imports" + File.separator + filename);
+                + "imports" + File.separator + "importcontrol" + File.separator + filename);
     }
 
     private static String getResourcePath(String filename) {
-        return "/com/puppycrawl/tools/checkstyle/checks/imports/" + filename;
+        return "/com/puppycrawl/tools/checkstyle/checks/imports/importcontrol/" + filename;
     }
 
     @Test
@@ -77,7 +77,7 @@
     @Test
     public void testOne() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -86,7 +86,7 @@
     @Test
     public void testTwo() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_two.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlTwo.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -99,7 +99,7 @@
     @Test
     public void testWrong() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_wrong.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlWrong.xml"));
         final String[] expected = {"1:1: " + getCheckMessage(MSG_UNKNOWN_PKG)};
         verify(checkConfig, getPath("InputImportControl.java"), expected);
     }
@@ -145,7 +145,7 @@
     @Test
     public void testBroken() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_broken.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlBroken.xml"));
         try {
             final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;
             verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -160,7 +160,7 @@
     @Test
     public void testOneRegExp() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_one-re.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlOneRegExp.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -169,7 +169,7 @@
     @Test
     public void testTwoRegExp() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_two-re.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlTwoRegExp.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -182,7 +182,7 @@
     @Test
     public void testBlacklist() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_blacklist.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlBlacklist.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.util.stream.Stream"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "java.util.Date"),
@@ -196,7 +196,7 @@
     @Test
     public void testStrategyOnMismatchOne() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_one.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchOne.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -209,7 +209,7 @@
     @Test
     public void testStrategyOnMismatchTwo() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_two.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchTwo.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "6:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Button.ABORT"),
@@ -221,7 +221,7 @@
     @Test
     public void testStrategyOnMismatchThree() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_three.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchThree.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
         };
@@ -232,7 +232,7 @@
     @Test
     public void testStrategyOnMismatchFour() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_strategy-on-mismatch_four.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlStrategyOnMismatchFour.xml"));
         final String[] expected = {
             "3:1: " + getCheckMessage(MSG_DISALLOWED, "java.awt.Image"),
             "4:1: " + getCheckMessage(MSG_DISALLOWED, "javax.swing.border.*"),
@@ -243,17 +243,17 @@
 
     @Test
     public void testPkgRegExpInParent() throws Exception {
-        testRegExpInPackage("import-control_pkg-re-in-parent.xml");
+        testRegExpInPackage("InputImportControlPkgRegExpInParent.xml");
     }
 
     @Test
     public void testPkgRegExpInChild() throws Exception {
-        testRegExpInPackage("import-control_pkg-re-in-child.xml");
+        testRegExpInPackage("InputImportControlPkgRegExpInChild.xml");
     }
 
     @Test
     public void testPkgRegExpInBoth() throws Exception {
-        testRegExpInPackage("import-control_pkg-re-in-both.xml");
+        testRegExpInPackage("InputImportControlPkgRegExpInBoth.xml");
     }
 
     // all import-control_pkg-re* files should be equivalent so use one test for all
@@ -282,7 +282,7 @@
     @Test
     public void testUrl() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("url", getUriString("import-control_one.xml"));
+        checkConfig.addAttribute("url", getUriString("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -341,7 +341,7 @@
     @Test
     public void testResource() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -366,7 +366,7 @@
     @Test
     public void testUrlInFileProperty() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getUriString("import-control_one.xml"));
+        checkConfig.addAttribute("file", getUriString("InputImportControlOne.xml"));
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
         verify(checkConfig, getPath("InputImportControl.java"), expected);
@@ -391,7 +391,7 @@
     @Test
     public void testCacheWhenFileExternalResourceContentDoesNotChange() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getPath("import-control_one-re.xml"));
+        checkConfig.addAttribute("file", getPath("InputImportControlOneRegExp.xml"));
 
         final Checker checker = createMockCheckerWithCache(checkConfig);
 
@@ -406,7 +406,7 @@
     @Test
     public void testCacheWhenUrlExternalResourceContentDoesNotChange() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("url", getUriString("import-control_one.xml"));
+        checkConfig.addAttribute("url", getUriString("InputImportControlOne.xml"));
 
         final Checker checker = createMockCheckerWithCache(checkConfig);
 
@@ -421,7 +421,7 @@
     @Test
     public void testPathRegexMatches() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "^.*[\\\\/]src[\\\\/]test[\\\\/].*$");
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
@@ -431,7 +431,7 @@
     @Test
     public void testPathRegexMatchesPartially() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "[\\\\/]InputImportControl\\.java");
         final String[] expected = {"5:1: " + getCheckMessage(MSG_DISALLOWED, "java.io.File")};
 
@@ -441,7 +441,7 @@
     @Test
     public void testPathRegexDoesntMatch() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "^.*[\\\\/]src[\\\\/]main[\\\\/].*$");
         final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;
 
@@ -451,7 +451,7 @@
     @Test
     public void testPathRegexDoesntMatchPartially() throws Exception {
         final DefaultConfiguration checkConfig = createCheckConfig(ImportControlCheck.class);
-        checkConfig.addAttribute("file", getResourcePath("import-control_one.xml"));
+        checkConfig.addAttribute("file", getResourcePath("InputImportControlOne.xml"));
         checkConfig.addAttribute("path", "[\\\\/]NoMatch\\.java");
         final String[] expected = CommonUtils.EMPTY_STRING_ARRAY;
 
