diff --git a/src/main/java/org/apache/hadoop/hbase/KeyValue.java b/src/main/java/org/apache/hadoop/hbase/KeyValue.java
index 14c5c8c..6ab3f5d 100644
--- a/src/main/java/org/apache/hadoop/hbase/KeyValue.java
+++ b/src/main/java/org/apache/hadoop/hbase/KeyValue.java
@@ -1930,9 +1930,10 @@
   // HeapSize
   public long heapSize() {
     return ClassSize.align(ClassSize.OBJECT + (2 * ClassSize.REFERENCE) +
-        ClassSize.align(ClassSize.ARRAY + length) +
+        ClassSize.align(ClassSize.ARRAY) + ClassSize.align(length) +
         (3 * Bytes.SIZEOF_INT) +
-        ClassSize.align(ClassSize.ARRAY + (rowCache == null ? 0 : rowCache.length)) +
+        ClassSize.align(ClassSize.ARRAY) +
+        ClassSize.align((rowCache == null ? 0 : rowCache.length)) +
         (2 * Bytes.SIZEOF_LONG));
   }
 
diff --git a/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java b/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java
index c7d94e2..9ada18c 100755
--- a/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java
+++ b/src/main/java/org/apache/hadoop/hbase/util/ClassSize.java
@@ -118,7 +118,7 @@
 
     OBJECT = 2 * REFERENCE;
 
-    ARRAY = 3 * REFERENCE;
+    ARRAY = align(3 * REFERENCE);
 
     ARRAYLIST = align(OBJECT + align(REFERENCE) + align(ARRAY) +
         (2 * Bytes.SIZEOF_INT));
diff --git a/src/main/java/org/apache/hadoop/hbase/KeyValue.java b/src/main/java/org/apache/hadoop/hbase/KeyValue.java
index 14c5c8c..6ab3f5d 100644
--- a/src/main/java/org/apache/hadoop/hbase/KeyValue.java
+++ b/src/main/java/org/apache/hadoop/hbase/KeyValue.java
@@ -1930,9 +1930,10 @@
   // HeapSize
   public long heapSize() {
     return ClassSize.align(ClassSize.OBJECT + (2 * ClassSize.REFERENCE) +
-        ClassSize.align(ClassSize.ARRAY + length) +
+        ClassSize.align(ClassSize.ARRAY) + ClassSize.align(length) +
         (3 * Bytes.SIZEOF_INT) +
-        ClassSize.align(ClassSize.ARRAY + (rowCache == null ? 0 : rowCache.length)) +
+        ClassSize.align(ClassSize.ARRAY) +
+        ClassSize.align((rowCache == null ? 0 : rowCache.length)) +
         (2 * Bytes.SIZEOF_LONG));
   }
 
