diff --git a/src/edu/stanford/nlp/dcoref/Rules.java b/src/edu/stanford/nlp/dcoref/Rules.java
index 873c9f1..69c8509 100644
--- a/src/edu/stanford/nlp/dcoref/Rules.java
+++ b/src/edu/stanford/nlp/dcoref/Rules.java
@@ -644,7 +644,7 @@
    */
   public static int getSpeakerClusterId(Document document, String speakerString) {
     int speakerClusterId = -1;
-    if (NumberMatchingRegex.isDecimalInteger(speakerString)) {
+    if (speakerString != null && NumberMatchingRegex.isDecimalInteger(speakerString)) {
       try {
         int speakerMentionId = Integer.parseInt(speakerString);
         Mention mention = document.allPredictedMentions.get(speakerMentionId);
diff --git a/src/edu/stanford/nlp/pipeline/TextOutputter.java b/src/edu/stanford/nlp/pipeline/TextOutputter.java
index 676e13d..1642431 100644
--- a/src/edu/stanford/nlp/pipeline/TextOutputter.java
+++ b/src/edu/stanford/nlp/pipeline/TextOutputter.java
@@ -142,11 +142,11 @@
           os.println("\t(" + mention.sentNum + "," +
               mention.headIndex + ",[" +
               mention.startIndex + "," +
-              mention.endIndex + ")) -> (" +
+              mention.endIndex + "]) -> (" +
               representative.sentNum + "," +
               representative.headIndex + ",[" +
               representative.startIndex + "," +
-              representative.endIndex + ")), that is: \"" +
+              representative.endIndex + "]), that is: \"" +
               mention.mentionSpan + "\" -> \"" +
               representative.mentionSpan + "\"");
         }
diff --git a/src/edu/stanford/nlp/dcoref/Rules.java b/src/edu/stanford/nlp/dcoref/Rules.java
index 873c9f1..69c8509 100644
--- a/src/edu/stanford/nlp/dcoref/Rules.java
+++ b/src/edu/stanford/nlp/dcoref/Rules.java
@@ -644,7 +644,7 @@
    */
   public static int getSpeakerClusterId(Document document, String speakerString) {
     int speakerClusterId = -1;
-    if (NumberMatchingRegex.isDecimalInteger(speakerString)) {
+    if (speakerString != null && NumberMatchingRegex.isDecimalInteger(speakerString)) {
       try {
         int speakerMentionId = Integer.parseInt(speakerString);
         Mention mention = document.allPredictedMentions.get(speakerMentionId);
