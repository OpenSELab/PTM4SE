diff --git a/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java b/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java
index 4b2ab92..1d8b755 100644
--- a/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java
+++ b/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java
@@ -263,14 +263,14 @@
 	 */
 	@Override
 	public String toString() {
-		List<Double[]> list = getValues();
+		List<Interval<Double[]>> list = getIntervals(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);
 		if (!list.isEmpty()) {
 			StringBuilder sb = new StringBuilder("<");
-			sb.append("[").append(list.get(0)[0]).append(", ").
-					append(list.get(0)[1]).append("]");
+			sb.append(list.get(0).isLowExcluded()?"]":"[").append(list.get(0).getLow()).append(", ").
+					append(list.get(0).getHigh()).append(list.get(0).isHighExcluded()?"[":"]");
 			for (int i = 1; i < list.size(); ++i)
-				sb.append(", ").append("[").append(list.get(i)[0]).append(", ").
-						append(list.get(i)[1]).append("]");
+				sb.append(", ").append(list.get(i).isLowExcluded()?"]":"[").append(list.get(i).getLow()).append(", ").
+						append(list.get(i).getHigh()).append(list.get(i).isHighExcluded()?"[":"]");
 			sb.append(">");
 			return sb.toString();
 		}
diff --git a/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java b/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java
index 4b2ab92..1d8b755 100644
--- a/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java
+++ b/AttributesAPI/src/org/gephi/data/attributes/type/TimeInterval.java
@@ -263,14 +263,14 @@
 	 */
 	@Override
 	public String toString() {
-		List<Double[]> list = getValues();
+		List<Interval<Double[]>> list = getIntervals(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY);
 		if (!list.isEmpty()) {
 			StringBuilder sb = new StringBuilder("<");
-			sb.append("[").append(list.get(0)[0]).append(", ").
-					append(list.get(0)[1]).append("]");
+			sb.append(list.get(0).isLowExcluded()?"]":"[").append(list.get(0).getLow()).append(", ").
+					append(list.get(0).getHigh()).append(list.get(0).isHighExcluded()?"[":"]");
 			for (int i = 1; i < list.size(); ++i)
-				sb.append(", ").append("[").append(list.get(i)[0]).append(", ").
-						append(list.get(i)[1]).append("]");
+				sb.append(", ").append(list.get(i).isLowExcluded()?"]":"[").append(list.get(i).getLow()).append(", ").
+						append(list.get(i).getHigh()).append(list.get(i).isHighExcluded()?"[":"]");
 			sb.append(">");
 			return sb.toString();
 		}
