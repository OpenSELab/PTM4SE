diff --git a/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/PetApi.java b/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/PetApi.java
index 9c96120..e75d7ca 100644
--- a/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/PetApi.java
+++ b/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/PetApi.java
@@ -15,7 +15,7 @@
 import java.util.List;
 import java.util.Map;
 
-@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-02-17T17:16:20.498+08:00")
+@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-02-23T20:01:57.005+08:00")
 public class PetApi {
   private ApiClient apiClient;
 
@@ -40,7 +40,7 @@
    * Update an existing pet
    * 
    * @param body Pet object that needs to be added to the store
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void updatePet(Pet body) throws ApiException {
     Object postBody = body;
@@ -80,7 +80,7 @@
    * Add a new pet to the store
    * 
    * @param body Pet object that needs to be added to the store
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void addPet(Pet body) throws ApiException {
     Object postBody = body;
@@ -121,6 +121,7 @@
    * Multiple status values can be provided with comma seperated strings
    * @param status Status values that need to be considered for filter
    * @return List<Pet>
+   * @throws ApiException if fails to make API call
    */
   public List<Pet> findPetsByStatus(List<String> status) throws ApiException {
     Object postBody = null;
@@ -164,6 +165,7 @@
    * Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.
    * @param tags Tags to filter by
    * @return List<Pet>
+   * @throws ApiException if fails to make API call
    */
   public List<Pet> findPetsByTags(List<String> tags) throws ApiException {
     Object postBody = null;
@@ -207,6 +209,7 @@
    * Returns a pet when ID &lt; 10.  ID &gt; 10 or nonintegers will simulate API error conditions
    * @param petId ID of pet that needs to be fetched
    * @return Pet
+   * @throws ApiException if fails to make API call
    */
   public Pet getPetById(Long petId) throws ApiException {
     Object postBody = null;
@@ -255,7 +258,7 @@
    * @param petId ID of pet that needs to be updated
    * @param name Updated name of the pet
    * @param status Updated status of the pet
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void updatePetWithForm(String petId, String name, String status) throws ApiException {
     Object postBody = null;
@@ -306,7 +309,7 @@
    * 
    * @param petId Pet id to delete
    * @param apiKey 
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void deletePet(Long petId, String apiKey) throws ApiException {
     Object postBody = null;
@@ -356,7 +359,7 @@
    * @param petId ID of pet to update
    * @param additionalMetadata Additional data to pass to server
    * @param file file to upload
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void uploadFile(Long petId, String additionalMetadata, File file) throws ApiException {
     Object postBody = null;
@@ -407,6 +410,7 @@
    * Returns a pet when ID &lt; 10.  ID &gt; 10 or nonintegers will simulate API error conditions
    * @param petId ID of pet that needs to be fetched
    * @return byte[]
+   * @throws ApiException if fails to make API call
    */
   public byte[] getPetByIdWithByteArray(Long petId) throws ApiException {
     Object postBody = null;
@@ -453,7 +457,7 @@
    * Fake endpoint to test byte array in body parameter for adding a new pet to the store
    * 
    * @param body Pet object in the form of byte array
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void addPetUsingByteArray(byte[] body) throws ApiException {
     Object postBody = body;
