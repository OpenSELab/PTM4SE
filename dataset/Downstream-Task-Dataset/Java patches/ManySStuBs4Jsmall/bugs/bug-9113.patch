diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java
index f8868e9..2e68aa7 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java
@@ -86,7 +86,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("NeedBraces");
-        final String filePath = builder.getFilePath("NeedBracesInput");
+        final String filePath = builder.getFilePath("InputNeedBraces");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java
index 32fd0bb..5358532 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java
@@ -60,7 +60,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("LeftCurly");
-        final String filePath = builder.getFilePath("LeftCurlyInput_Braces");
+        final String filePath = builder.getFilePath("InputLeftCurlyBraces");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -78,7 +78,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("LeftCurly");
-        final String filePath = builder.getFilePath("LeftCurlyInput_Annotations");
+        final String filePath = builder.getFilePath("InputLeftCurlyAnnotations");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -106,7 +106,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("LeftCurly");
-        final String filePath = builder.getFilePath("LeftCurlyInput_Method");
+        final String filePath = builder.getFilePath("InputLeftCurlyMethod");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -126,7 +126,7 @@
             "122:6: " + getCheckMessage(RightCurlyCheck.class, MSG_KEY_LINE_NEW, "}", 6),
         };
 
-        final String filePath = builder.getFilePath("RightCurlyInput_Other");
+        final String filePath = builder.getFilePath("InputRightCurlyOther");
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(newCheckConfig, filePath, expected, warnList);
     }
@@ -138,7 +138,7 @@
 
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
-        final String filePath = builder.getFilePath("RightCurlyInputSame");
+        final String filePath = builder.getFilePath("InputRightCurlySame");
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(newCheckConfig, filePath, expected, warnList);
     }
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java
index a61dd7e..2efa480 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyBlockTest.java
@@ -78,7 +78,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("EmptyBlock");
-        final String filePath = builder.getFilePath("EmptyBlockInput_Basic");
+        final String filePath = builder.getFilePath("InputEmptyBlockBasic");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -94,7 +94,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("EmptyBlock");
-        final String filePath = builder.getFilePath("EmptyBlockInputCatch");
+        final String filePath = builder.getFilePath("InputEmptyBlockCatch");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java
index eafff63..8fe7aa1 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule413emptyblocks/EmptyCatchBlockTest.java
@@ -48,7 +48,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("EmptyCatchBlock");
-        final String filePath = builder.getFilePath("EmptyBlockInputCatch");
+        final String filePath = builder.getFilePath("InputEmptyBlockCatch");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -60,7 +60,7 @@
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
         final Configuration checkConfig = builder.getCheckConfig("EmptyCatchBlock");
-        final String filePath = builder.getFilePath("EmptyCatchBlockNoViolationsInput");
+        final String filePath = builder.getFilePath("InputEmptyCatchBlockNoViolations");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -75,7 +75,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("EmptyCatchBlock");
-        final String filePath = builder.getFilePath("EmptyCatchBlockViolationsByCommentInput");
+        final String filePath = builder.getFilePath("InputEmptyCatchBlockViolationsByComment");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -91,7 +91,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("EmptyCatchBlock");
-        final String filePath = builder.getFilePath("EmptyCatchBlockViolationsByVariableNameInput");
+        final String filePath = builder.getFilePath("InputEmptyCatchBlockViolationsByVariableName");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java
index 2410874..51ce9a8 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule43onestatement/OneStatementPerLineTest.java
@@ -69,7 +69,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("OneStatementPerLine");
-        final String filePath = builder.getFilePath("OneStatementPerLineInput");
+        final String filePath = builder.getFilePath("InputOneStatementPerLine");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java
index e540980..d77da9b 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java
@@ -50,7 +50,7 @@
             "130:9: " + getCheckMessage(clazz, messageKey, "("),
         };
         final Configuration checkConfig = builder.getCheckConfig("MethodParamPad");
-        final String filePath = builder.getFilePath("MethodParamPadInput");
+        final String filePath = builder.getFilePath("InputMethodParamPad");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java
index 20c13a3..297a665 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java
@@ -69,7 +69,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("OperatorWrap");
-        final String filePath = builder.getFilePath("OperatorWrapInput");
+        final String filePath = builder.getFilePath("InputOperatorWrap");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -123,7 +123,7 @@
             "348:17: " + getCheckMessage(clazz, messageKey, "<<="),
         };
 
-        final String filePath = builder.getFilePath("OperatorWrapAssignInput");
+        final String filePath = builder.getFilePath("InputOperatorWrapAssign");
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(newCheckConfig, filePath, expected, warnList);
     }
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java
index 2d5b621..8130ece 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java
@@ -46,7 +46,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("SeparatorWrap");
-        final String filePath = builder.getFilePath("SeparatorWrapInput");
+        final String filePath = builder.getFilePath("InputSeparatorWrap");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java
index 697252d..97617a7 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4841indentation/IndentationTest.java
@@ -45,7 +45,7 @@
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
         final Configuration checkConfig = builder.getCheckConfig("Indentation");
-        final String filePath = builder.getFilePath("IndentationCorrectClassInput");
+        final String filePath = builder.getFilePath("InputIndentationCorrectClass");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -57,7 +57,7 @@
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
         final Configuration checkConfig = builder.getCheckConfig("Indentation");
-        final String filePath = builder.getFilePath("IndentationCorrectFieldAndParameterInput");
+        final String filePath = builder.getFilePath("InputIndentationCorrectFieldAndParameter");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -69,7 +69,7 @@
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
         final Configuration checkConfig = builder.getCheckConfig("Indentation");
-        final String filePath = builder.getFilePath("IndentationCorrectForAndParameterInput");
+        final String filePath = builder.getFilePath("InputIndentationCorrectForAndParameter");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -81,7 +81,7 @@
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
         final Configuration checkConfig = builder.getCheckConfig("Indentation");
-        final String filePath = builder.getFilePath("IndentationCorrectIfAndParameterInput");
+        final String filePath = builder.getFilePath("InputIndentationCorrectIfAndParameter");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -93,7 +93,7 @@
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
         final Configuration checkConfig = builder.getCheckConfig("Indentation");
-        final String filePath = builder.getFilePath("IndentationCorrectInput");
+        final String filePath = builder.getFilePath("InputIndentationCorrect");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -105,7 +105,7 @@
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
         final Configuration checkConfig = builder.getCheckConfig("Indentation");
-        final String filePath = builder.getFilePath("IndentationCorrectReturnAndParameterInput");
+        final String filePath = builder.getFilePath("InputIndentationCorrectReturnAndParameter");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
@@ -118,7 +118,7 @@
 
         final Configuration checkConfig = builder.getCheckConfig("Indentation");
         final String filePath = builder
-            .getFilePath("IndentationCorrectWhileDoWhileAndParameterInput");
+            .getFilePath("InputIndentationCorrectWhileDoWhileAndParameter");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java b/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java
index 979d4b0..6d20750 100644
--- a/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java
@@ -48,7 +48,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("EmptyBlock");
-        final String filePath = builder.getFilePath("EmptyBlockInputCatch");
+        final String filePath = builder.getFilePath("InputEmptyBlockCatch");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java
index f8868e9..2e68aa7 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule411bracesareused/NeedBracesTest.java
@@ -86,7 +86,7 @@
         };
 
         final Configuration checkConfig = builder.getCheckConfig("NeedBraces");
-        final String filePath = builder.getFilePath("NeedBracesInput");
+        final String filePath = builder.getFilePath("InputNeedBraces");
 
         final Integer[] warnList = builder.getLinesWithWarn(filePath);
         verify(checkConfig, filePath, expected, warnList);
