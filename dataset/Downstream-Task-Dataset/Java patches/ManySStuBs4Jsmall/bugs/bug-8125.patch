diff --git a/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java b/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java
index 6e455f2..5b700d6 100644
--- a/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java
+++ b/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java
@@ -58,7 +58,7 @@
         for (TopologyDetails td : topologies.getTopologies()) {
             String topId = td.getId();
             Map<WorkerSlot, Collection<ExecutorDetails>> schedulerAssignmentMap;
-            if (cluster.needsScheduling(td) && cluster.getUnassignedExecutors(td).size() > 0) {
+            if (cluster.getUnassignedExecutors(td).size() > 0) {
                 LOG.debug("/********Scheduling topology {} ************/", topId);
 
                 schedulerAssignmentMap = RAStrategy.schedule(td);
diff --git a/storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java b/storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java
index b8a96a2..3fe37dd 100644
--- a/storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java
+++ b/storm-core/src/jvm/backtype/storm/scheduler/resource/strategies/ResourceAwareStrategy.java
@@ -263,7 +263,7 @@
     private Double distToNode(RAS_Node src, RAS_Node dest) {
         if (src.getId().equals(dest.getId())) {
             return 0.0;
-        } else if (this.NodeToCluster(src) == this.NodeToCluster(dest)) {
+        } else if (this.NodeToCluster(src).equals(this.NodeToCluster(dest))) {
             return 0.5;
         } else {
             return 1.0;
diff --git a/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java b/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java
index 6e455f2..5b700d6 100644
--- a/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java
+++ b/storm-core/src/jvm/backtype/storm/scheduler/resource/ResourceAwareScheduler.java
@@ -58,7 +58,7 @@
         for (TopologyDetails td : topologies.getTopologies()) {
             String topId = td.getId();
             Map<WorkerSlot, Collection<ExecutorDetails>> schedulerAssignmentMap;
-            if (cluster.needsScheduling(td) && cluster.getUnassignedExecutors(td).size() > 0) {
+            if (cluster.getUnassignedExecutors(td).size() > 0) {
                 LOG.debug("/********Scheduling topology {} ************/", topId);
 
                 schedulerAssignmentMap = RAStrategy.schedule(td);
