diff --git a/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java b/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java
index 0e6e3d9..2c90fce 100644
--- a/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java
+++ b/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java
@@ -203,10 +203,10 @@
       Class<?> refType = cacheDomainRef.value();
       String refName = cacheDomainRef.name();
       if (refType == void.class && refName.isEmpty()) {
-        throw new BuilderException("Should be specified either value() and namespace() attribute in the @CacheNamespaceRef");
+        throw new BuilderException("Should be specified either value() or name() attribute in the @CacheNamespaceRef");
       }
       if (refType != void.class && !refName.isEmpty()) {
-        throw new BuilderException("Cannot use both value() and namespace() attribute in the @CacheNamespaceRef");
+        throw new BuilderException("Cannot use both value() and name() attribute in the @CacheNamespaceRef");
       }
       String namespace = (refType != void.class) ? refType.getName() : refName;
       assistant.useCacheRef(namespace);
diff --git a/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java b/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java
index 5f94d7b..50310f3 100644
--- a/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java
+++ b/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java
@@ -358,7 +358,7 @@
   @Test
   public void shouldErrorInvalidCacheNamespaceRefAttributesSpecifyBoth() {
     expectedException.expect(BuilderException.class);
-    expectedException.expectMessage("Cannot use both value() and namespace() attribute in the @CacheNamespaceRef");
+    expectedException.expectMessage("Cannot use both value() and name() attribute in the @CacheNamespaceRef");
 
     sqlSessionFactory.getConfiguration().getMapperRegistry()
         .addMapper(InvalidCacheNamespaceRefBothMapper.class);
@@ -367,7 +367,7 @@
   @Test
   public void shouldErrorInvalidCacheNamespaceRefAttributesIsEmpty() {
     expectedException.expect(BuilderException.class);
-    expectedException.expectMessage("Should be specified either value() and namespace() attribute in the @CacheNamespaceRef");
+    expectedException.expectMessage("Should be specified either value() or name() attribute in the @CacheNamespaceRef");
 
     sqlSessionFactory.getConfiguration().getMapperRegistry()
         .addMapper(InvalidCacheNamespaceRefEmptyMapper.class);
diff --git a/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java b/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java
index 0e6e3d9..2c90fce 100644
--- a/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java
+++ b/src/main/java/org/apache/ibatis/builder/annotation/MapperAnnotationBuilder.java
@@ -203,10 +203,10 @@
       Class<?> refType = cacheDomainRef.value();
       String refName = cacheDomainRef.name();
       if (refType == void.class && refName.isEmpty()) {
-        throw new BuilderException("Should be specified either value() and namespace() attribute in the @CacheNamespaceRef");
+        throw new BuilderException("Should be specified either value() or name() attribute in the @CacheNamespaceRef");
       }
       if (refType != void.class && !refName.isEmpty()) {
-        throw new BuilderException("Cannot use both value() and namespace() attribute in the @CacheNamespaceRef");
+        throw new BuilderException("Cannot use both value() and name() attribute in the @CacheNamespaceRef");
       }
       String namespace = (refType != void.class) ? refType.getName() : refName;
       assistant.useCacheRef(namespace);
