diff --git a/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java b/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java
index 10dcd6a..609806b 100644
--- a/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java
+++ b/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java
@@ -123,7 +123,7 @@
           for (Transition transition : transitions) {
             int transitionNum = transitionIndex.indexOf(transition);
             Set<String> features = featureFactory.featurize(state);
-            int predictedNum = parser.findHighestScoringTransition(state, features, false);
+            int predictedNum = parser.findHighestScoringTransition(state, features, false).object();
             Transition predicted = transitionIndex.get(predictedNum);
             if (transitionNum == predictedNum) {
               numCorrect++;
diff --git a/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java b/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java
index 10dcd6a..609806b 100644
--- a/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java
+++ b/src/edu/stanford/nlp/parser/shiftreduce/TrainParser.java
@@ -123,7 +123,7 @@
           for (Transition transition : transitions) {
             int transitionNum = transitionIndex.indexOf(transition);
             Set<String> features = featureFactory.featurize(state);
-            int predictedNum = parser.findHighestScoringTransition(state, features, false);
+            int predictedNum = parser.findHighestScoringTransition(state, features, false).object();
             Transition predicted = transitionIndex.get(predictedNum);
             if (transitionNum == predictedNum) {
               numCorrect++;
