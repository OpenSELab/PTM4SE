diff --git a/src/test/java/io/vertx/test/core/Http1xTLSTest.java b/src/test/java/io/vertx/test/core/Http1xTLSTest.java
index 5130873..8ee2e73 100644
--- a/src/test/java/io/vertx/test/core/Http1xTLSTest.java
+++ b/src/test/java/io/vertx/test/core/Http1xTLSTest.java
@@ -85,28 +85,28 @@
   @Test
   // Client trusts all server certs
   public void testClearClientRequestAbsSetSSL() throws Exception {
-    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(false).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
   @Test
   // Client trusts all server certs
   public void testSSLClientRequestAbsSetSSL() throws Exception {
-    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(true).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
   @Test
   // Client trusts all server certs
   public void testClearClientRequestAbsSetClear() throws Exception {
-    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(false).serverSSL(false).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
   @Test
   // Client trusts all server certs
   public void testSSLClientRequestAbsSetClear() throws Exception {
-    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(true).serverSSL(false).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
diff --git a/src/test/java/io/vertx/test/core/Http1xTLSTest.java b/src/test/java/io/vertx/test/core/Http1xTLSTest.java
index 5130873..8ee2e73 100644
--- a/src/test/java/io/vertx/test/core/Http1xTLSTest.java
+++ b/src/test/java/io/vertx/test/core/Http1xTLSTest.java
@@ -85,28 +85,28 @@
   @Test
   // Client trusts all server certs
   public void testClearClientRequestAbsSetSSL() throws Exception {
-    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(false).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
   @Test
   // Client trusts all server certs
   public void testSSLClientRequestAbsSetSSL() throws Exception {
-    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "https://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(true).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
   @Test
   // Client trusts all server certs
   public void testClearClientRequestAbsSetClear() throws Exception {
-    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(false).serverSSL(false).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
   @Test
   // Client trusts all server certs
   public void testSSLClientRequestAbsSetClear() throws Exception {
-    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043" + DEFAULT_TEST_URI;
+    String absoluteURI = "http://" + DEFAULT_HTTP_HOST + ":4043/" + DEFAULT_TEST_URI;
     testTLS(Cert.NONE, Trust.SERVER_JKS, Cert.SERVER_JKS, Trust.NONE).clientSSL(true).serverSSL(false).requestProvider(c -> c.requestAbs(HttpMethod.POST, absoluteURI)).pass();
   }
 
