diff --git a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java
index 8c4a1d4..73a1da3 100644
--- a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java
+++ b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java
@@ -82,7 +82,7 @@
             //No-op case
             int[] shape = inputs[0].shape();
             forwardPassShapes = new int[][] {Arrays.copyOf(shape, shape.length)};
-            return inputs[0];
+            return workspaceMgr.leverageTo(ArrayType.ACTIVATIONS, inputs[0]);
         }
 
         forwardPassShapes = new int[inputs.length][0];
@@ -120,7 +120,7 @@
 
         if (forwardPassShapes.length == 1) {
             //No op case
-            return new Pair<>(null, new INDArray[] {epsilon});
+            return new Pair<>(null, new INDArray[] {workspaceMgr.leverageTo(ArrayType.ACTIVATION_GRAD, epsilon)});
         }
 
         //Split the epsilons in the opposite way that the activations were merged
diff --git a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java
index 8c4a1d4..73a1da3 100644
--- a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java
+++ b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/vertex/impl/MergeVertex.java
@@ -82,7 +82,7 @@
             //No-op case
             int[] shape = inputs[0].shape();
             forwardPassShapes = new int[][] {Arrays.copyOf(shape, shape.length)};
-            return inputs[0];
+            return workspaceMgr.leverageTo(ArrayType.ACTIVATIONS, inputs[0]);
         }
 
         forwardPassShapes = new int[inputs.length][0];
@@ -120,7 +120,7 @@
 
         if (forwardPassShapes.length == 1) {
             //No op case
-            return new Pair<>(null, new INDArray[] {epsilon});
+            return new Pair<>(null, new INDArray[] {workspaceMgr.leverageTo(ArrayType.ACTIVATION_GRAD, epsilon)});
         }
 
         //Split the epsilons in the opposite way that the activations were merged
