diff --git a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java
index e8014c0..e123ea5 100644
--- a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java
+++ b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java
@@ -58,7 +58,7 @@
 
         checkSerialization(layer);
 
-        assertEquals(act, layer.getActivationFn().toString());
+        assertEquals(act, layer.getActivationFn());
         assertEquals(weight, layer.getWeightInit());
         assertEquals(dist, layer.getDist());
         assertEquals(dropOut, layer.getDropOut(), DELTA);
diff --git a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesBidirectionalLSTMTest.java b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesBidirectionalLSTMTest.java
index 46d7ff1..56539d7 100644
--- a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesBidirectionalLSTMTest.java
+++ b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesBidirectionalLSTMTest.java
@@ -560,7 +560,7 @@
 			MultiLayerNetwork net = new MultiLayerNetwork(conf);
 			net.init();
 
-			assertEquals(gateAfn, ((org.deeplearning4j.nn.conf.layers.GravesBidirectionalLSTM)net.getLayer(0).conf().getLayer()).getGateActivationFn());
+			assertEquals(gateAfn, ((org.deeplearning4j.nn.conf.layers.GravesBidirectionalLSTM)net.getLayer(0).conf().getLayer()).getGateActivationFn().toString());
 
 			INDArray in = Nd4j.rand(new int[]{3,2,5});
 			INDArray labels = Nd4j.rand(new int[]{3,2,5});
diff --git a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTMTest.java b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTMTest.java
index 506c790..2e20296 100644
--- a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTMTest.java
+++ b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/recurrent/GravesLSTMTest.java
@@ -250,7 +250,7 @@
 			MultiLayerNetwork net = new MultiLayerNetwork(conf);
 			net.init();
 
-			assertEquals(gateAfn, ((org.deeplearning4j.nn.conf.layers.GravesLSTM)net.getLayer(0).conf().getLayer()).getGateActivationFn());
+			assertEquals(gateAfn, ((org.deeplearning4j.nn.conf.layers.GravesLSTM)net.getLayer(0).conf().getLayer()).getGateActivationFn().toString());
 
 			INDArray in = Nd4j.rand(new int[]{3,2,5});
 			INDArray labels = Nd4j.rand(new int[]{3,2,5});
diff --git a/deeplearning4j-ui-parent/deeplearning4j-play/src/main/java/org/deeplearning4j/ui/module/train/TrainModuleUtils.java b/deeplearning4j-ui-parent/deeplearning4j-play/src/main/java/org/deeplearning4j/ui/module/train/TrainModuleUtils.java
index af3e6bf..f9a7fad 100644
--- a/deeplearning4j-ui-parent/deeplearning4j-play/src/main/java/org/deeplearning4j/ui/module/train/TrainModuleUtils.java
+++ b/deeplearning4j-ui-parent/deeplearning4j-play/src/main/java/org/deeplearning4j/ui/module/train/TrainModuleUtils.java
@@ -189,7 +189,7 @@
             latentInfo.put("Input Size", String.valueOf(inputSize));
             latentInfo.put("Layer Size", String.valueOf(outputSize));
             latentInfo.put("Num Parameters", String.valueOf((inputSize+1) * outputSize * 2));
-            latentInfo.put("Activation Function", va.getPzxActivationFunction());
+            latentInfo.put("Activation Function", va.getPzxActivationFn().toString());
             layerInfo.add(latentInfo);
 
 
diff --git a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java
index e8014c0..e123ea5 100644
--- a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java
+++ b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/conf/layers/LayerBuilderTest.java
@@ -58,7 +58,7 @@
 
         checkSerialization(layer);
 
-        assertEquals(act, layer.getActivationFn().toString());
+        assertEquals(act, layer.getActivationFn());
         assertEquals(weight, layer.getWeightInit());
         assertEquals(dist, layer.getDist());
         assertEquals(dropOut, layer.getDropOut(), DELTA);
