diff --git a/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java
index 41e373f..f83883b 100644
--- a/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java
+++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java
@@ -285,9 +285,10 @@
 
     public ByteBuffer toByteBuffer(int index, int length) {
         if (index == 0 && length == capacity()) {
-            return buffer.duplicate();
+            return buffer.duplicate().order(order());
         } else {
-            return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();
+            return ((ByteBuffer) buffer.duplicate().position(
+                    index).limit(index + length)).slice().order(order());
         }
     }
 
@@ -319,7 +320,8 @@
                 return ChannelBuffers.EMPTY_BUFFER;
             }
             return new ByteBufferBackedChannelBuffer(
-                    ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)));
+                    ((ByteBuffer) buffer.duplicate().position(
+                            index).limit(index + length)).order(order()));
         }
     }
 
diff --git a/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java
index 41e373f..f83883b 100644
--- a/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java
+++ b/src/main/java/org/jboss/netty/buffer/ByteBufferBackedChannelBuffer.java
@@ -285,9 +285,10 @@
 
     public ByteBuffer toByteBuffer(int index, int length) {
         if (index == 0 && length == capacity()) {
-            return buffer.duplicate();
+            return buffer.duplicate().order(order());
         } else {
-            return ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)).slice();
+            return ((ByteBuffer) buffer.duplicate().position(
+                    index).limit(index + length)).slice().order(order());
         }
     }
 
@@ -319,7 +320,8 @@
                 return ChannelBuffers.EMPTY_BUFFER;
             }
             return new ByteBufferBackedChannelBuffer(
-                    ((ByteBuffer) buffer.duplicate().position(index).limit(index + length)));
+                    ((ByteBuffer) buffer.duplicate().position(
+                            index).limit(index + length)).order(order()));
         }
     }
 
