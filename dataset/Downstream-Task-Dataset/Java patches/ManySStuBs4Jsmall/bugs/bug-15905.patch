diff --git a/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java b/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java
index b23f990..5d1ba2a 100644
--- a/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java
+++ b/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java
@@ -313,7 +313,7 @@
      * <p/>
      * Default value is {@value #DEFAULT_CHECK_IF_EVICTABLE_AFTER_MILLIS} milliseconds.
      *
-     * @return Number of milliseconds should pass before asking next eviction.
+     * @return number of milliseconds should pass before asking next eviction.
      * @since 3.3
      */
     public long getCheckIfEvictableAfterMillis() {
@@ -330,7 +330,7 @@
      */
     public void setCheckIfEvictableAfterMillis(long checkIfEvictableAfterMillis) {
         if (checkIfEvictableAfterMillis < 0) {
-            throw new IllegalArgumentException("Parameter checkIfEvictableAfterMillis must be greater or equal than 0");
+            throw new IllegalArgumentException("Parameter checkIfEvictableAfterMillis can not get a negative value");
         }
         this.checkIfEvictableAfterMillis = checkIfEvictableAfterMillis;
     }
diff --git a/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java b/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java
index b23f990..5d1ba2a 100644
--- a/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java
+++ b/hazelcast/src/main/java/com/hazelcast/config/MapConfig.java
@@ -313,7 +313,7 @@
      * <p/>
      * Default value is {@value #DEFAULT_CHECK_IF_EVICTABLE_AFTER_MILLIS} milliseconds.
      *
-     * @return Number of milliseconds should pass before asking next eviction.
+     * @return number of milliseconds should pass before asking next eviction.
      * @since 3.3
      */
     public long getCheckIfEvictableAfterMillis() {
@@ -330,7 +330,7 @@
      */
     public void setCheckIfEvictableAfterMillis(long checkIfEvictableAfterMillis) {
         if (checkIfEvictableAfterMillis < 0) {
-            throw new IllegalArgumentException("Parameter checkIfEvictableAfterMillis must be greater or equal than 0");
+            throw new IllegalArgumentException("Parameter checkIfEvictableAfterMillis can not get a negative value");
         }
         this.checkIfEvictableAfterMillis = checkIfEvictableAfterMillis;
     }
