diff --git a/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java b/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java
index 30ea230..3889df3 100644
--- a/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java
+++ b/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java
@@ -387,8 +387,13 @@
     private static void assertAtLeastTimePassed(
         Stopwatch stopwatch, long expectedMillis) {
       long elapsedMillis = stopwatch.elapsed(MILLISECONDS);
+      /*
+       * The "+ 5" below is to permit, say, sleep(10) to sleep only 9 milliseconds. We see such
+       * behavior sometimes when running these tests publicly as part of Guava. "+ 5" is probably
+       * more generous than it needs to be.
+       */
       assertTrue("Expected elapsed millis to be >= " + expectedMillis
-          + " but was " + elapsedMillis, elapsedMillis >= expectedMillis);
+          + " but was " + elapsedMillis, elapsedMillis + 5 >= expectedMillis);
     }
   }
 
diff --git a/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java b/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java
index 30ea230..3889df3 100644
--- a/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java
+++ b/guava-tests/test/com/google/common/util/concurrent/UninterruptiblesTest.java
@@ -387,8 +387,13 @@
     private static void assertAtLeastTimePassed(
         Stopwatch stopwatch, long expectedMillis) {
       long elapsedMillis = stopwatch.elapsed(MILLISECONDS);
+      /*
+       * The "+ 5" below is to permit, say, sleep(10) to sleep only 9 milliseconds. We see such
+       * behavior sometimes when running these tests publicly as part of Guava. "+ 5" is probably
+       * more generous than it needs to be.
+       */
       assertTrue("Expected elapsed millis to be >= " + expectedMillis
-          + " but was " + elapsedMillis, elapsedMillis >= expectedMillis);
+          + " but was " + elapsedMillis, elapsedMillis + 5 >= expectedMillis);
     }
   }
 
