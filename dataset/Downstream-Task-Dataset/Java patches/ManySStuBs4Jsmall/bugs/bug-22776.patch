diff --git a/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/UserApi.java b/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/UserApi.java
index 9762467..21cd502 100644
--- a/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/UserApi.java
+++ b/samples/client/petstore/java/default/src/main/java/io/swagger/client/api/UserApi.java
@@ -14,7 +14,7 @@
 import java.util.List;
 import java.util.Map;
 
-@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-02-12T18:48:10.013-08:00")
+@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-02-23T20:01:57.005+08:00")
 public class UserApi {
   private ApiClient apiClient;
 
@@ -39,7 +39,7 @@
    * Create user
    * This can only be done by the logged in user.
    * @param body Created user object
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void createUser(User body) throws ApiException {
     Object postBody = body;
@@ -79,7 +79,7 @@
    * Creates list of users with given input array
    * 
    * @param body List of user object
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void createUsersWithArrayInput(List<User> body) throws ApiException {
     Object postBody = body;
@@ -119,7 +119,7 @@
    * Creates list of users with given input array
    * 
    * @param body List of user object
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void createUsersWithListInput(List<User> body) throws ApiException {
     Object postBody = body;
@@ -161,6 +161,7 @@
    * @param username The user name for login
    * @param password The password for login in clear text
    * @return String
+   * @throws ApiException if fails to make API call
    */
   public String loginUser(String username, String password) throws ApiException {
     Object postBody = null;
@@ -204,7 +205,7 @@
   /**
    * Logs out current logged in user session
    * 
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void logoutUser() throws ApiException {
     Object postBody = null;
@@ -245,6 +246,7 @@
    * 
    * @param username The name that needs to be fetched. Use user1 for testing.
    * @return User
+   * @throws ApiException if fails to make API call
    */
   public User getUserByName(String username) throws ApiException {
     Object postBody = null;
@@ -292,7 +294,7 @@
    * This can only be done by the logged in user.
    * @param username name that need to be deleted
    * @param body Updated user object
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void updateUser(String username, User body) throws ApiException {
     Object postBody = body;
@@ -338,7 +340,7 @@
    * Delete user
    * This can only be done by the logged in user.
    * @param username The name that needs to be deleted
-   * @return void
+   * @throws ApiException if fails to make API call
    */
   public void deleteUser(String username) throws ApiException {
     Object postBody = null;
