diff --git a/src/main/java/org/b3log/solo/service/ArticleQueryService.java b/src/main/java/org/b3log/solo/service/ArticleQueryService.java
index b0c2e10..c40809d 100644
--- a/src/main/java/org/b3log/solo/service/ArticleQueryService.java
+++ b/src/main/java/org/b3log/solo/service/ArticleQueryService.java
@@ -687,7 +687,7 @@
                 articleIds.add(articleId);
             }
 
-            final List<JSONObject> ret = new ArrayList<JSONObject>();
+            final List<JSONObject> ret = new ArrayList<>();
 
             final Query query = new Query().setFilter(new PropertyFilter(Keys.OBJECT_ID, FilterOperator.IN, articleIds)).setPageCount(1).index(
                     Article.ARTICLE_PERMALINK);
diff --git a/src/main/java/org/b3log/solo/util/Markdowns.java b/src/main/java/org/b3log/solo/util/Markdowns.java
index b77e748..d4b81d7 100644
--- a/src/main/java/org/b3log/solo/util/Markdowns.java
+++ b/src/main/java/org/b3log/solo/util/Markdowns.java
@@ -135,7 +135,7 @@
             }
         } catch (final Exception e) {
             LOGGER.log(Level.INFO, "[marked] is not available, uses built-in [flexmark] for markdown processing. " +
-                    "Please reads FAQ section in user guide (https://hacpai.com/article/1492881378588) for more details.");
+                    "Please read FAQ section in user guide (https://hacpai.com/article/1492881378588) for more details.");
         }
     }
 
diff --git a/src/main/java/org/b3log/solo/service/ArticleQueryService.java b/src/main/java/org/b3log/solo/service/ArticleQueryService.java
index b0c2e10..c40809d 100644
--- a/src/main/java/org/b3log/solo/service/ArticleQueryService.java
+++ b/src/main/java/org/b3log/solo/service/ArticleQueryService.java
@@ -687,7 +687,7 @@
                 articleIds.add(articleId);
             }
 
-            final List<JSONObject> ret = new ArrayList<JSONObject>();
+            final List<JSONObject> ret = new ArrayList<>();
 
             final Query query = new Query().setFilter(new PropertyFilter(Keys.OBJECT_ID, FilterOperator.IN, articleIds)).setPageCount(1).index(
                     Article.ARTICLE_PERMALINK);
