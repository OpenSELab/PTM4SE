diff --git a/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java b/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java
index 217703d..9ec2ac3 100644
--- a/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java
+++ b/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java
@@ -232,7 +232,7 @@
             return httpProvider.execute(request, handler);
 
         } else {
-            FilterContext<T> fc = new FilterContext.FilterContextBuilder<>().asyncHandler(handler).request(request).build();
+            FilterContext<T> fc = new FilterContext.FilterContextBuilder<T>().asyncHandler(handler).request(request).build();
             try {
                 fc = preProcessRequest(fc);
             } catch (Exception e) {
diff --git a/api/src/test/java/org/asynchttpclient/async/FilterTest.java b/api/src/test/java/org/asynchttpclient/async/FilterTest.java
index a47fa25..11ab580 100644
--- a/api/src/test/java/org/asynchttpclient/async/FilterTest.java
+++ b/api/src/test/java/org/asynchttpclient/async/FilterTest.java
@@ -140,7 +140,7 @@
 
                 if (replay.getAndSet(false)) {
                     Request request = new RequestBuilder(ctx.getRequest()).addHeader("X-Replay", "true").build();
-                    return new FilterContext.FilterContextBuilder<>().asyncHandler(ctx.getAsyncHandler()).request(request).replayRequest(true).build();
+                    return new FilterContext.FilterContextBuilder<T>().asyncHandler(ctx.getAsyncHandler()).request(request).replayRequest(true).build();
                 }
                 return ctx;
             }
@@ -166,7 +166,7 @@
 
                 if (ctx.getResponseStatus() != null && ctx.getResponseStatus().getStatusCode() == 200 && replay.getAndSet(false)) {
                     Request request = new RequestBuilder(ctx.getRequest()).addHeader("X-Replay", "true").build();
-                    return new FilterContext.FilterContextBuilder<>().asyncHandler(ctx.getAsyncHandler()).request(request).replayRequest(true).build();
+                    return new FilterContext.FilterContextBuilder<T>().asyncHandler(ctx.getAsyncHandler()).request(request).replayRequest(true).build();
                 }
                 return ctx;
             }
@@ -193,7 +193,7 @@
                 if (ctx.getResponseHeaders() != null && ctx.getResponseHeaders().getHeaders().getFirstValue("Ping").equals("Pong") && replay.getAndSet(false)) {
 
                     Request request = new RequestBuilder(ctx.getRequest()).addHeader("Ping", "Pong").build();
-                    return new FilterContext.FilterContextBuilder<>().asyncHandler(ctx.getAsyncHandler()).request(request).replayRequest(true).build();
+                    return new FilterContext.FilterContextBuilder<T>().asyncHandler(ctx.getAsyncHandler()).request(request).replayRequest(true).build();
                 }
                 return ctx;
             }
diff --git a/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyRequestThrottleTimeoutTest.java b/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyRequestThrottleTimeoutTest.java
index 05b57e3..d507305 100644
--- a/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyRequestThrottleTimeoutTest.java
+++ b/providers/netty3/src/test/java/org/asynchttpclient/providers/netty3/NettyRequestThrottleTimeoutTest.java
@@ -85,7 +85,7 @@
 
         try (AsyncHttpClient client = getAsyncHttpClient(new AsyncHttpClientConfig.Builder().setMaxConnections(1).build())) {
             final CountDownLatch latch = new CountDownLatch(samples);
-            final List<Exception> tooManyConnections = Collections.synchronizedList(new ArrayList<>(2));
+            final List<Exception> tooManyConnections = Collections.synchronizedList(new ArrayList<Exception>(2));
 
             for (int i = 0; i < samples; i++) {
                 new Thread(new Runnable() {
diff --git a/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java b/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java
index 217703d..9ec2ac3 100644
--- a/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java
+++ b/api/src/main/java/org/asynchttpclient/DefaultAsyncHttpClient.java
@@ -232,7 +232,7 @@
             return httpProvider.execute(request, handler);
 
         } else {
-            FilterContext<T> fc = new FilterContext.FilterContextBuilder<>().asyncHandler(handler).request(request).build();
+            FilterContext<T> fc = new FilterContext.FilterContextBuilder<T>().asyncHandler(handler).request(request).build();
             try {
                 fc = preProcessRequest(fc);
             } catch (Exception e) {
