diff --git a/api/src/main/java/org/openmrs/validator/ObsValidator.java b/api/src/main/java/org/openmrs/validator/ObsValidator.java
index f94a671..a794964 100644
--- a/api/src/main/java/org/openmrs/validator/ObsValidator.java
+++ b/api/src/main/java/org/openmrs/validator/ObsValidator.java
@@ -181,7 +181,7 @@
 					// If the concept numeric is not precise, the value cannot be a float, so raise an error 
 					if (!cn.isAllowDecimal() && Math.ceil(obs.getValueNumeric()) != obs.getValueNumeric()) {
 						if (atRootNode) {
-							errors.rejectValue("valueNumeric", "error.precision");
+							errors.rejectValue("valueNumeric", "Obs.error.precision");
 						} else {
 							errors.rejectValue("groupMembers", "Obs.error.inGroupMember");
 						}
diff --git a/api/src/main/java/org/openmrs/validator/ObsValidator.java b/api/src/main/java/org/openmrs/validator/ObsValidator.java
index f94a671..a794964 100644
--- a/api/src/main/java/org/openmrs/validator/ObsValidator.java
+++ b/api/src/main/java/org/openmrs/validator/ObsValidator.java
@@ -181,7 +181,7 @@
 					// If the concept numeric is not precise, the value cannot be a float, so raise an error 
 					if (!cn.isAllowDecimal() && Math.ceil(obs.getValueNumeric()) != obs.getValueNumeric()) {
 						if (atRootNode) {
-							errors.rejectValue("valueNumeric", "error.precision");
+							errors.rejectValue("valueNumeric", "Obs.error.precision");
 						} else {
 							errors.rejectValue("groupMembers", "Obs.error.inGroupMember");
 						}
