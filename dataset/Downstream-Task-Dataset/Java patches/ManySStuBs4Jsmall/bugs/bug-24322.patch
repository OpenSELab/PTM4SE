diff --git a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java
index 07b7ca4..bda5951 100644
--- a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java
+++ b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java
@@ -56,21 +56,21 @@
             this.wait(200);
         }
         assertEquals("onfriendlist", received.get(0)[0]);
-        assertEquals(6358482, received.get(0)[1]);
+        assertEquals(6358482l, received.get(0)[1]);
         received.clear();
         siteStreams.next(listeners);
         synchronized (this) {
             this.wait(200);
         }
         assertEquals("onfriendlist", received.get(0)[0]);
-        assertEquals(6358481, received.get(0)[1]);
+        assertEquals(6358481l, received.get(0)[1]);
         received.clear();
         siteStreams.next(listeners);
         synchronized (this) {
             this.wait(200);
         }
         assertEquals("onfriendlist", received.get(0)[0]);
-        assertEquals(4933401, received.get(0)[1]);
+        assertEquals(4933401l, received.get(0)[1]);
     }
 
     public void testSiteStream() throws Exception {
diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java
index 7b07d4e..2431734 100644
--- a/twitter4j-core/src/test/java/twitter4j/TwitterTest.java
+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTest.java
@@ -277,7 +277,7 @@
         /*List Member Methods*/
         User user = null;
         try {
-            user = twitter1.checkUserListMembership(id1.screenName, id2.id, userList.getId());
+            user = twitter1.checkUserListMembership(id1.screenName, userList.getId(), id2.id);
             fail("id2 shouldn't be a member of the userList yet. expecting a TwitterException");
         } catch (TwitterException te) {
             assertEquals(404, te.getStatusCode());
@@ -380,7 +380,7 @@
 //        assertEquals(1, userLists.size()); workarounding issue 1300
 
         try {
-            user = twitter1.checkUserListSubscription(id1.screenName, id2.id, userList.getId());
+            user = twitter1.checkUserListSubscription(id1.screenName, userList.getId(), id2.id);
             fail("id2 shouldn't be a subscriber the userList. expecting a TwitterException");
         } catch (TwitterException ignore) {
             assertEquals(404, ignore.getStatusCode());
diff --git a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java
index 5f40514..cd8fa39 100644
--- a/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java
+++ b/twitter4j-core/src/test/java/twitter4j/TwitterTestBase.java
@@ -40,14 +40,14 @@
     protected class TestUserInfo {
         public String screenName;
         public String password;
-        public int id;
+        public long id;
         public String accessToken;
         public String accessTokenSecret;
 
         TestUserInfo(String screenName) {
             this.screenName = p.getProperty(screenName + ".user");
             this.password = p.getProperty(screenName + ".password");
-            this.id = Integer.valueOf(p.getProperty(screenName + ".id"));
+            this.id = Long.valueOf(p.getProperty(screenName + ".id"));
             this.accessToken = p.getProperty(screenName + ".oauth.accessToken");
             this.accessTokenSecret = p.getProperty(screenName + ".oauth.accessTokenSecret");
         }
diff --git a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java
index 07b7ca4..bda5951 100644
--- a/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java
+++ b/twitter4j-core/src/test/java/twitter4j/SiteStreamsTest.java
@@ -56,21 +56,21 @@
             this.wait(200);
         }
         assertEquals("onfriendlist", received.get(0)[0]);
-        assertEquals(6358482, received.get(0)[1]);
+        assertEquals(6358482l, received.get(0)[1]);
         received.clear();
         siteStreams.next(listeners);
         synchronized (this) {
             this.wait(200);
         }
         assertEquals("onfriendlist", received.get(0)[0]);
-        assertEquals(6358481, received.get(0)[1]);
+        assertEquals(6358481l, received.get(0)[1]);
         received.clear();
         siteStreams.next(listeners);
         synchronized (this) {
             this.wait(200);
         }
         assertEquals("onfriendlist", received.get(0)[0]);
-        assertEquals(4933401, received.get(0)[1]);
+        assertEquals(4933401l, received.get(0)[1]);
     }
 
     public void testSiteStream() throws Exception {
