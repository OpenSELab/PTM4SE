diff --git a/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java b/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java
index 53e4162..70a4e3b 100644
--- a/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java
+++ b/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java
@@ -514,7 +514,7 @@
     }
 
     private static void muliSimpleFloat(float[] first, float[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] *= second[i];
         }
     }
@@ -539,7 +539,7 @@
     }
 
     private static void muliSimpleDouble(double[] first, double[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] *= second[i];
         }
     }
@@ -564,7 +564,7 @@
     }
 
     private static void diviSimpleFloat(float[] first, float[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] /= second[i];
         }
     }
@@ -589,7 +589,7 @@
     }
 
     private static void diviSimpleDouble(double[] first, double[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] /= second[i];
         }
     }
diff --git a/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java b/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java
index 53e4162..70a4e3b 100644
--- a/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java
+++ b/nd4j-api/src/main/java/org/nd4j/linalg/util/NDArrayUtil.java
@@ -514,7 +514,7 @@
     }
 
     private static void muliSimpleFloat(float[] first, float[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] *= second[i];
         }
     }
@@ -539,7 +539,7 @@
     }
 
     private static void muliSimpleDouble(double[] first, double[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] *= second[i];
         }
     }
@@ -564,7 +564,7 @@
     }
 
     private static void diviSimpleFloat(float[] first, float[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] /= second[i];
         }
     }
@@ -589,7 +589,7 @@
     }
 
     private static void diviSimpleDouble(double[] first, double[] second, int opLength){
-        for (int i = 0; i < first.length; i++) {
+        for (int i = 0; i < opLength; i++) {
             first[i] /= second[i];
         }
     }
