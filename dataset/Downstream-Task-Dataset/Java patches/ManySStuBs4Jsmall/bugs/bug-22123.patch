diff --git a/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java b/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java
index 79f6bff..5ec79be 100644
--- a/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java
+++ b/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java
@@ -459,7 +459,7 @@
   protected boolean findMatchStartNoBacktracking(int start, boolean matchAllTokens)
   {
     boolean matchAll = true;
-    MatchedStates cStates = getStartStates();
+    MatchedStates<T> cStates = getStartStates();
     // Save cStates for FIND_ALL ....
     curMatchStates = cStates;
     for(int i = start; i < regionEnd; i++){
@@ -702,6 +702,7 @@
     return elements.get(i);
   }
 
+  /** Returns a non-null MatchedStates, which has a non-empty states list inside. */
   private MatchedStates<T> getStartStates()
   {
     return new MatchedStates<T>(this, pattern.root);
diff --git a/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java b/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java
index 79f6bff..5ec79be 100644
--- a/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java
+++ b/src/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java
@@ -459,7 +459,7 @@
   protected boolean findMatchStartNoBacktracking(int start, boolean matchAllTokens)
   {
     boolean matchAll = true;
-    MatchedStates cStates = getStartStates();
+    MatchedStates<T> cStates = getStartStates();
     // Save cStates for FIND_ALL ....
     curMatchStates = cStates;
     for(int i = start; i < regionEnd; i++){
@@ -702,6 +702,7 @@
     return elements.get(i);
   }
 
+  /** Returns a non-null MatchedStates, which has a non-empty states list inside. */
   private MatchedStates<T> getStartStates()
   {
     return new MatchedStates<T>(this, pattern.root);
