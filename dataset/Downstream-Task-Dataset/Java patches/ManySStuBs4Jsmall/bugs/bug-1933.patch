diff --git a/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java b/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java
index 0a6b6d3..a655bf3 100644
--- a/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java
+++ b/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java
@@ -104,16 +104,16 @@
     protected CacheMessage put(BroadcastMessage message, Long now, String uuid) {
         if (!inspect(message)) return null;
 
-        logger.trace("Caching message {} for Broadcaster {}", message.message);
+        logger.trace("Caching message {} for Broadcaster {}", message.message());
 
         readWriteLock.writeLock().lock();
         CacheMessage cacheMessage = null;
         try {
-            boolean hasMessageWithSameId = messagesIds.contains(message.id);
+            boolean hasMessageWithSameId = messagesIds.contains(message.id());
             if (!hasMessageWithSameId) {
-                cacheMessage = new CacheMessage(message.id, now, message.message, uuid);
+                cacheMessage = new CacheMessage(message.id(), now, message.message(), uuid);
                 messages.add(cacheMessage);
-                messagesIds.add(message.id);
+                messagesIds.add(message.id());
             }
         } finally {
             readWriteLock.writeLock().unlock();
diff --git a/modules/cpr/src/main/java/org/atmosphere/cache/DefaultBroadcasterCache.java b/modules/cpr/src/main/java/org/atmosphere/cache/DefaultBroadcasterCache.java
index 4b3e741..b477ba7 100644
--- a/modules/cpr/src/main/java/org/atmosphere/cache/DefaultBroadcasterCache.java
+++ b/modules/cpr/src/main/java/org/atmosphere/cache/DefaultBroadcasterCache.java
@@ -46,7 +46,7 @@
 
     @Override
     public CacheMessage addToCache(String broadcasterId, String uuid, BroadcastMessage message) {
-        logger.trace("Message {} might be lost! Please install a proper BroadcasterCache", message.message);
+        logger.trace("Message {} might be lost! Please install a proper BroadcasterCache", message.message());
         return null;
     }
 
diff --git a/modules/cpr/src/main/java/org/atmosphere/cache/UUIDBroadcasterCache.java b/modules/cpr/src/main/java/org/atmosphere/cache/UUIDBroadcasterCache.java
index 30cec7e..7b42ae4 100644
--- a/modules/cpr/src/main/java/org/atmosphere/cache/UUIDBroadcasterCache.java
+++ b/modules/cpr/src/main/java/org/atmosphere/cache/UUIDBroadcasterCache.java
@@ -140,7 +140,7 @@
 
     @Override
     public CacheMessage addToCache(String broadcasterId, String uuid, BroadcastMessage message) {
-        Object e = message.message;
+        Object e = message.message();
         if (logger.isTraceEnabled()) {
             logger.trace("Adding for AtmosphereResource {} cached messages {}", uuid, e);
             logger.trace("Active clients {}", activeClients());
diff --git a/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java b/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java
index 0a6b6d3..a655bf3 100644
--- a/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java
+++ b/modules/cpr/src/main/java/org/atmosphere/cache/AbstractBroadcasterCache.java
@@ -104,16 +104,16 @@
     protected CacheMessage put(BroadcastMessage message, Long now, String uuid) {
         if (!inspect(message)) return null;
 
-        logger.trace("Caching message {} for Broadcaster {}", message.message);
+        logger.trace("Caching message {} for Broadcaster {}", message.message());
 
         readWriteLock.writeLock().lock();
         CacheMessage cacheMessage = null;
         try {
-            boolean hasMessageWithSameId = messagesIds.contains(message.id);
+            boolean hasMessageWithSameId = messagesIds.contains(message.id());
             if (!hasMessageWithSameId) {
-                cacheMessage = new CacheMessage(message.id, now, message.message, uuid);
+                cacheMessage = new CacheMessage(message.id(), now, message.message(), uuid);
                 messages.add(cacheMessage);
-                messagesIds.add(message.id);
+                messagesIds.add(message.id());
             }
         } finally {
             readWriteLock.writeLock().unlock();
