diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java
index 2b3014d..2d68584 100644
--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java
+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java
@@ -172,7 +172,7 @@
             SchemaIndexProvider provider = providerMap.apply( providerDescriptor );
             InternalIndexState initialState = provider.getInitialState( indexId );
 
-            logger.info( format( "IndexingService.initIndexes: index on %s is %s",
+            logger.info( format( "IndexingService.init: index on %s is %s",
                     descriptor.userDescription( tokenNameLookup ), initialState ) );
 
             boolean constraint = indexRule.isConstraintIndex();
@@ -201,7 +201,7 @@
         indexMapReference.setIndexMap( indexMap );
     }
 
-    // Recovery semantics: This is to be called after initIndexes, and after the database has run recovery.
+    // Recovery semantics: This is to be called after init, and after the database has run recovery.
     @Override
     public void start() throws IOException
     {
diff --git a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/IndexingServiceTest.java b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/IndexingServiceTest.java
index b1243d3..aadf9ae 100644
--- a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/IndexingServiceTest.java
+++ b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/IndexingServiceTest.java
@@ -299,9 +299,9 @@
 
         // then
         logger.assertExactly(
-                info( "IndexingService.initIndexes: index on :LabelOne(propertyOne) is ONLINE" ),
-                info( "IndexingService.initIndexes: index on :LabelOne(propertyTwo) is POPULATING" ),
-                info( "IndexingService.initIndexes: index on :LabelTwo(propertyTwo) is FAILED" )
+                info( "IndexingService.init: index on :LabelOne(propertyOne) is ONLINE" ),
+                info( "IndexingService.init: index on :LabelOne(propertyTwo) is POPULATING" ),
+                info( "IndexingService.init: index on :LabelTwo(propertyTwo) is FAILED" )
         );
     }
 
diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java
index 2b3014d..2d68584 100644
--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java
+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java
@@ -172,7 +172,7 @@
             SchemaIndexProvider provider = providerMap.apply( providerDescriptor );
             InternalIndexState initialState = provider.getInitialState( indexId );
 
-            logger.info( format( "IndexingService.initIndexes: index on %s is %s",
+            logger.info( format( "IndexingService.init: index on %s is %s",
                     descriptor.userDescription( tokenNameLookup ), initialState ) );
 
             boolean constraint = indexRule.isConstraintIndex();
@@ -201,7 +201,7 @@
         indexMapReference.setIndexMap( indexMap );
     }
 
-    // Recovery semantics: This is to be called after initIndexes, and after the database has run recovery.
+    // Recovery semantics: This is to be called after init, and after the database has run recovery.
     @Override
     public void start() throws IOException
     {
