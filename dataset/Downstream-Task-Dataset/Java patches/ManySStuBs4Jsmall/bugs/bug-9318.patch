diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java
index 4ce5a19..bfbae73 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void lineLengthTest() throws IOException, Exception {
+    public void lineLengthTest() throws Exception {
 
         final String[] expected = {
             "5: " + getCheckMessage(LineLengthCheck.class, "maxLineLen", 100, 112),
diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java
index 3061cc9..efb2b50 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java
@@ -21,7 +21,7 @@
     }
 
     @Test
-    public void starImportTest() throws IOException, Exception {
+    public void starImportTest() throws Exception {
 
         final String[] expected = {
             "3: Using the '.*' form of import should be avoided - java.io.*.",
diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java
index 3be581a..ccc1954 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule332nolinewrap/NoLineWrapTest.java
@@ -24,7 +24,7 @@
     }
 
     @Test
-    public void badLineWrapTest() throws IOException, Exception {
+    public void badLineWrapTest() throws Exception {
 
         final String[] expected = {
             "1: " + getCheckMessage(NoLineWrapCheck.class, "no.line.wrap", "package"),
@@ -39,7 +39,7 @@
     }
 
     @Test
-    public void goodLineWrapTest() throws IOException, Exception {
+    public void goodLineWrapTest() throws Exception {
 
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
@@ -51,7 +51,7 @@
     }
 
     @Test
-    public void goodLineLength() throws IOException, Exception {
+    public void goodLineLength() throws Exception {
 
         int maxLineLength = 100;
         final String[] expected = {
diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java
index bad0ebf..b403fad 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java
@@ -32,7 +32,7 @@
     }
 
     @Test
-    public void customImportTest_1() throws IOException, Exception {
+    public void customImportTest_1() throws Exception {
         
         final String[] expected = {
             "4: " + getCheckMessage(clazz, MSG_LEX, "java.awt.Button.ABORT", "java.io.File.createTempFile"),
@@ -56,7 +56,7 @@
     }
 
     @Test
-    public void customImportTest_2() throws IOException, Exception {
+    public void customImportTest_2() throws Exception {
         
         final String[] expected = {
             "4: " + getCheckMessage(clazz, MSG_LEX, "java.awt.Button.ABORT", "java.io.File.createTempFile"),
@@ -77,7 +77,7 @@
     }
 
     @Test
-    public void customImportTest_3() throws IOException, Exception {
+    public void customImportTest_3() throws Exception {
         
         final String[] expected = {
                 "4: " + getCheckMessage(clazz, MSG_LEX, "java.awt.Button.ABORT", "java.io.File.createTempFile"),
@@ -96,7 +96,7 @@
         verify(checkConfig, filePath, expected, warnList);
     }
     @Test
-    public void validTest() throws IOException, Exception {
+    public void validTest() throws Exception {
         
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
         
diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java
index 3b4e6ff..8995d22 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule341onetoplevel/OneTopLevelClassTest.java
@@ -23,7 +23,7 @@
     }
 
     @Test
-    public void badTest() throws IOException, Exception {
+    public void badTest() throws Exception {
         
         Class<OneTopLevelClassCheck> clazz = OneTopLevelClassCheck.class;
         String messageKey = "one.top.level.class";
@@ -45,7 +45,7 @@
     }
 
     @Test
-    public void goodTest() throws IOException, Exception {
+    public void goodTest() throws Exception {
         
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
         
@@ -57,7 +57,7 @@
     }
     
     @Test
-    public void bad2Test() throws IOException, Exception {
+    public void bad2Test() throws Exception {
     	
     	Class<OneTopLevelClassCheck> clazz = OneTopLevelClassCheck.class;
         String messageKey = "one.top.level.class";
@@ -74,7 +74,7 @@
     }
     
     @Test
-    public void bad3Test() throws IOException, Exception {
+    public void bad3Test() throws Exception {
         
     	Class<OneTopLevelClassCheck> clazz = OneTopLevelClassCheck.class;
         String messageKey = "one.top.level.class";
diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java
index 245123b..bf9a6b1 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void overloadMethodsTest() throws IOException, Exception {
+    public void overloadMethodsTest() throws Exception {
         
         Class<OverloadMethodsDeclarationOrderCheck> clazz = OverloadMethodsDeclarationOrderCheck.class;
         String messageKey = "overload.methods.declaration";
diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3sourcefile/EmptyLineSeparatorTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3sourcefile/EmptyLineSeparatorTest.java
index 44b4bee..7e797f7 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3sourcefile/EmptyLineSeparatorTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3sourcefile/EmptyLineSeparatorTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void emptyLineSeparatorTest() throws IOException, Exception {
+    public void emptyLineSeparatorTest() throws Exception {
         
         Class<EmptyLineSeparatorCheck> clazz = EmptyLineSeparatorCheck.class;
         String messageKey = "empty.line.separator";
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java
index 37285aa..db9d0a0 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule412nonemptyblocks/LeftCurlyRightCurlyTest.java
@@ -30,7 +30,7 @@
     }
 
     @Test
-    public void leftCurlyBracesTest() throws IOException, Exception {
+    public void leftCurlyBracesTest() throws Exception {
 
         final String[] expected = {
             "4:1: " + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, "{", 1),
@@ -50,7 +50,7 @@
     }
     
     @Test
-    public void leftCurlyAnnotationsTest() throws IOException, Exception {
+    public void leftCurlyAnnotationsTest() throws Exception {
 
         final String[] expected = {
             "10:1: " + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, "{", 1),
@@ -68,7 +68,7 @@
     }
     
     @Test
-    public void leftCurlyMethodsTest() throws IOException, Exception {
+    public void leftCurlyMethodsTest() throws Exception {
 
         final String[] expected = {
             "4:1: " + getCheckMessage(LeftCurlyCheck.class, MSG_KEY_LINE_PREVIOUS, "{", 1),
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule461verticalwhitespace/EmptyLineSeparatorTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule461verticalwhitespace/EmptyLineSeparatorTest.java
index 44bc8de..19650c7 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule461verticalwhitespace/EmptyLineSeparatorTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule461verticalwhitespace/EmptyLineSeparatorTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void emptyLineSeparatorTest() throws IOException, Exception {
+    public void emptyLineSeparatorTest() throws Exception {
         
         Class<EmptyLineSeparatorCheck> clazz = EmptyLineSeparatorCheck.class;
         String messageKey = "empty.line.separator";
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java
index e783d9b..725834f 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule462horizontalwhitespace/WhitespaceAroundTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void whitespaceAroundBasicTest() throws IOException, Exception {
+    public void whitespaceAroundBasicTest() throws Exception {
         
         Configuration checkConfig = builder.getCheckConfig("WhitespaceAround");
         String msgPreceded = "ws.notPreceded";
@@ -58,7 +58,7 @@
     }
     
     @Test
-    public void whitespaceAroundGenericsTest() throws IOException, Exception {
+    public void whitespaceAroundGenericsTest() throws Exception {
         
         String msgPreceded = "ws.preceded";
         String msgFollowed = "ws.followed";
@@ -89,7 +89,7 @@
         verify(checkConfig, filePath, expected, warnList);
     }
     @Test
-    public void whitespaceAroundEmptyTypesCyclesTest() throws IOException, Exception {
+    public void whitespaceAroundEmptyTypesCyclesTest() throws Exception {
         
         final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;
 
@@ -101,8 +101,7 @@
     }
     
     @Test
-    public void genericWhitespaceTest() throws IOException, Exception
-    {
+    public void genericWhitespaceTest() throws Exception {
         String msgPreceded = "ws.preceded";
         String msgFollowed = "ws.followed";
         String msgNotPreceded = "ws.notPreceded";
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariablepreline/MultipleVariableDeclarationsTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariablepreline/MultipleVariableDeclarationsTest.java
index 63ac548..dc0a584 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariablepreline/MultipleVariableDeclarationsTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4821onevariablepreline/MultipleVariableDeclarationsTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void multipleVariableDeclarationsTest() throws IOException, Exception {
+    public void multipleVariableDeclarationsTest() throws Exception {
         
         String msgComma = getCheckMessage(MultipleVariableDeclarationsCheck.class, "multiple.variable.declarations.comma");
         String msg = getCheckMessage(MultipleVariableDeclarationsCheck.class, "multiple.variable.declarations");
diff --git a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java
index daedfc7..8ca1823 100644
--- a/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter4formatting/rule4843defaultcasepresent/MissingSwitchDefaultTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void missingSwitchDefaultTest() throws IOException, Exception {
+    public void missingSwitchDefaultTest() throws Exception {
         
         String msg = getCheckMessage(MissingSwitchDefaultCheck.class, "missing.switch.default");
 
diff --git a/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java b/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java
index e3e5628..971d9e7 100644
--- a/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule62donotignoreexceptions/EmptyBlockTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void emptyBlockTestCatch() throws IOException, Exception {
+    public void emptyBlockTestCatch() throws Exception {
         
         final String[] expected = {
             "29:17: " + getCheckMessage(EmptyBlockCheck.class, "block.empty", "finally"),
diff --git a/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java b/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java
index b916eb6..1ef93a7 100644
--- a/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void noFinalizerBasicTest() throws IOException, Exception {
+    public void noFinalizerBasicTest() throws Exception {
         
         String msg = getCheckMessage(NoFinalizerCheck.class, "avoid.finalizer.method");
 
@@ -38,7 +38,7 @@
     }
     
     @Test
-    public void noFinalizerExtendedTest() throws IOException, Exception {
+    public void noFinalizerExtendedTest() throws Exception {
         
         String msg = getCheckMessage(NoFinalizerCheck.class, "avoid.finalizer.method");
 
diff --git a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java
index 4ce5a19..bfbae73 100644
--- a/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java
+++ b/src/it/java/com/google/checkstyle/test/chapter3filestructure/rule32packagestate/LineLengthTest.java
@@ -22,7 +22,7 @@
     }
 
     @Test
-    public void lineLengthTest() throws IOException, Exception {
+    public void lineLengthTest() throws Exception {
 
         final String[] expected = {
             "5: " + getCheckMessage(LineLengthCheck.class, "maxLineLen", 100, 112),
