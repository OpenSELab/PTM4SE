diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java
index 98ffb7d..824059b 100644
--- a/gdx/src/com/badlogic/gdx/utils/Array.java
+++ b/gdx/src/com/badlogic/gdx/utils/Array.java
@@ -89,7 +89,7 @@
 	 *           memory copy. */
 	public Array (boolean ordered, T[] array, int start, int count) {
 		this(ordered, array.length, (Class)array.getClass().getComponentType());
-		size = array.length;
+		size = count;
 		System.arraycopy(array, 0, items, 0, size);
 	}
 
@@ -393,6 +393,8 @@
 		return items[MathUtils.random(0, size - 1)];
 	}
 
+	/** Returns the items as an array. Note the array is typed, so the {@link #Array(Class)} constructor must have been used.
+	 * Otherwise use {@link #toArray(Class)} to specify the array type. */
 	public T[] toArray () {
 		return (T[])toArray(items.getClass().getComponentType());
 	}
diff --git a/gdx/src/com/badlogic/gdx/utils/Array.java b/gdx/src/com/badlogic/gdx/utils/Array.java
index 98ffb7d..824059b 100644
--- a/gdx/src/com/badlogic/gdx/utils/Array.java
+++ b/gdx/src/com/badlogic/gdx/utils/Array.java
@@ -89,7 +89,7 @@
 	 *           memory copy. */
 	public Array (boolean ordered, T[] array, int start, int count) {
 		this(ordered, array.length, (Class)array.getClass().getComponentType());
-		size = array.length;
+		size = count;
 		System.arraycopy(array, 0, items, 0, size);
 	}
 
@@ -393,6 +393,8 @@
 		return items[MathUtils.random(0, size - 1)];
 	}
 
+	/** Returns the items as an array. Note the array is typed, so the {@link #Array(Class)} constructor must have been used.
+	 * Otherwise use {@link #toArray(Class)} to specify the array type. */
 	public T[] toArray () {
 		return (T[])toArray(items.getClass().getComponentType());
 	}
