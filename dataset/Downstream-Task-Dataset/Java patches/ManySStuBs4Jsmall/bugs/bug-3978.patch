diff --git a/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java b/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java
index bc2568f..2bf2e03 100755
--- a/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java
+++ b/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java
@@ -965,7 +965,7 @@
 						if ( debug ) System.out.println("FALLING off rule "+
 														getRuleName(config.state.ruleIndex));
 						closure_(config, configs, closureBusy, collectPredicates, greedy,
-								 loopsSimulateTailRecursion, depth - 1);
+								 loopsSimulateTailRecursion, depth);
 						continue;
 					}
 					ATNState invokingState = atn.states.get(ctx.invokingState);
diff --git a/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java b/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java
index bc2568f..2bf2e03 100755
--- a/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java
+++ b/runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java
@@ -965,7 +965,7 @@
 						if ( debug ) System.out.println("FALLING off rule "+
 														getRuleName(config.state.ruleIndex));
 						closure_(config, configs, closureBusy, collectPredicates, greedy,
-								 loopsSimulateTailRecursion, depth - 1);
+								 loopsSimulateTailRecursion, depth);
 						continue;
 					}
 					ATNState invokingState = atn.states.get(ctx.invokingState);
