diff --git a/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java b/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java
index ab12bab..c1e1130 100644
--- a/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java
+++ b/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java
@@ -234,7 +234,7 @@
     return findNonOverlapping(list, 0, list.size());
   }
 
-  public final static Comparator<Match> MATCH_LENGTH_ENDPOINTS_COMPARATOR = Interval.lengthEndpointsComparator();
+  public final static Comparator<Match> MATCH_LENGTH_ENDPOINTS_COMPARATOR = Interval.<Match>lengthEndpointsComparator();
 
   /**
    * Given a sequence to search through (e.g. piece of text would be a sequence of words),
diff --git a/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java b/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java
index ab12bab..c1e1130 100644
--- a/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java
+++ b/src/edu/stanford/nlp/ling/tokensregex/matcher/TrieMapMatcher.java
@@ -234,7 +234,7 @@
     return findNonOverlapping(list, 0, list.size());
   }
 
-  public final static Comparator<Match> MATCH_LENGTH_ENDPOINTS_COMPARATOR = Interval.lengthEndpointsComparator();
+  public final static Comparator<Match> MATCH_LENGTH_ENDPOINTS_COMPARATOR = Interval.<Match>lengthEndpointsComparator();
 
   /**
    * Given a sequence to search through (e.g. piece of text would be a sequence of words),
