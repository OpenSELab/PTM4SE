diff --git a/src/main/java/io/vertx/core/Future.java b/src/main/java/io/vertx/core/Future.java
index edd1f1a..62b7d52 100644
--- a/src/main/java/io/vertx/core/Future.java
+++ b/src/main/java/io/vertx/core/Future.java
@@ -312,7 +312,7 @@
    * @param mapper A function which takes the exception of a failure and returns a new future.
    * @return A recovered future
    */
-  default Future<T> recover(Function<? super Throwable, Future<T>> mapper) {
+  default Future<T> recover(Function<Throwable, Future<T>> mapper) {
     Future<T> ret = Future.future();
     setHandler(ar -> {
       if (ar.succeeded()) {
diff --git a/src/main/java/io/vertx/core/Future.java b/src/main/java/io/vertx/core/Future.java
index edd1f1a..62b7d52 100644
--- a/src/main/java/io/vertx/core/Future.java
+++ b/src/main/java/io/vertx/core/Future.java
@@ -312,7 +312,7 @@
    * @param mapper A function which takes the exception of a failure and returns a new future.
    * @return A recovered future
    */
-  default Future<T> recover(Function<? super Throwable, Future<T>> mapper) {
+  default Future<T> recover(Function<Throwable, Future<T>> mapper) {
     Future<T> ret = Future.future();
     setHandler(ar -> {
       if (ar.succeeded()) {
