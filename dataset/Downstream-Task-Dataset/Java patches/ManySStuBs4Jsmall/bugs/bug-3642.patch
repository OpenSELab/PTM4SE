diff --git a/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java b/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java
index e4466e7..29e2f75 100644
--- a/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java
+++ b/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java
@@ -75,7 +75,7 @@
     private void shutdown() {
         fn.postRun();
         fn.shutdown();
-        LOG.info("Succefully shutdown");
+        LOG.info("Successfully shutdown");
     }
 
     @Override
diff --git a/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/supervisor/SyncProcessEvent.java b/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/supervisor/SyncProcessEvent.java
index 277cc2c..6516c59 100644
--- a/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/supervisor/SyncProcessEvent.java
+++ b/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/supervisor/SyncProcessEvent.java
@@ -213,7 +213,7 @@
             try {
                 long lastModifytime = StormConfig.get_supervisor_topology_Bianrymodify_time(conf, topologyId);
                 if ((currTime - lastModifytime) / 1000 < (JStormUtils.MIN_1 * 2)) {
-                    LOG.debug("less 2 minite ,so removed " + topologyId);
+                    LOG.debug("less 2 miniute ,so removed " + topologyId);
                     needRemoveTopologies.add(topologyId);
                 }
             } catch (Exception e) {
diff --git a/jstorm-core/src/main/java/com/alibaba/jstorm/task/comm/TaskSendTargets.java b/jstorm-core/src/main/java/com/alibaba/jstorm/task/comm/TaskSendTargets.java
index 6a42a27..59f3316 100644
--- a/jstorm-core/src/main/java/com/alibaba/jstorm/task/comm/TaskSendTargets.java
+++ b/jstorm-core/src/main/java/com/alibaba/jstorm/task/comm/TaskSendTargets.java
@@ -66,7 +66,7 @@
 
 
         taskId = topologyContext.getThisTaskId();
-        debugIdStr = " Emit from " + componentId + ":" + taskId + " ";
+        debugIdStr = " emit from " + componentId + ":" + taskId + " ";
     }
 
     // direct send tuple to special task
@@ -104,7 +104,7 @@
         if (componentCrouping == null) {
             // if the target component's parallelism is 0, don't need send to
             // them
-            LOG.debug("Failed to get Grouper of " + stream + " in " + debugIdStr);
+            LOG.debug("Failed to get Grouper of " + stream + " when " + debugIdStr);
             return out_tasks;
         }
 
diff --git a/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java b/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java
index e4466e7..29e2f75 100644
--- a/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java
+++ b/jstorm-core/src/main/java/com/alibaba/jstorm/callback/AsyncLoopRunnable.java
@@ -75,7 +75,7 @@
     private void shutdown() {
         fn.postRun();
         fn.shutdown();
-        LOG.info("Succefully shutdown");
+        LOG.info("Successfully shutdown");
     }
 
     @Override
