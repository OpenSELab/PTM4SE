diff --git a/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java b/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java
index bdbdc99..2938c05 100644
--- a/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java
+++ b/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java
@@ -287,7 +287,7 @@
             friends = json.getJSONArray("friends");
             long[] friendIds = new long[friends.length()];
             for (int i = 0; i < friendIds.length; ++i) {
-                friendIds[i] = friends.getLong(i);
+                friendIds[i] = Long.parseLong(friends.getString(i));
             }
             return friendIds;
         } catch (JSONException e) {
diff --git a/twitter4j-core/src/main/java/twitter4j/auth/AccessToken.java b/twitter4j-core/src/main/java/twitter4j/auth/AccessToken.java
index 0046e75..2c8c51e 100644
--- a/twitter4j-core/src/main/java/twitter4j/auth/AccessToken.java
+++ b/twitter4j-core/src/main/java/twitter4j/auth/AccessToken.java
@@ -38,13 +38,13 @@
         super(str);
         screenName = getParameter("screen_name");
         String sUserId = getParameter("user_id");
-        if (sUserId != null) userId = Integer.parseInt(sUserId);
+        if (sUserId != null) userId = Long.parseLong(sUserId);
     }
 
     public AccessToken(String token, String tokenSecret) {
         super(token, tokenSecret);
         String sUserId = token.substring(0, token.indexOf("-"));
-        if (sUserId != null) userId = Integer.parseInt(sUserId);
+        if (sUserId != null) userId = Long.parseLong(sUserId);
     }
 
     /**
diff --git a/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java b/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java
index bdbdc99..2938c05 100644
--- a/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java
+++ b/twitter4j-core/src/main/java/twitter4j/AbstractStreamImplementation.java
@@ -287,7 +287,7 @@
             friends = json.getJSONArray("friends");
             long[] friendIds = new long[friends.length()];
             for (int i = 0; i < friendIds.length; ++i) {
-                friendIds[i] = friends.getLong(i);
+                friendIds[i] = Long.parseLong(friends.getString(i));
             }
             return friendIds;
         } catch (JSONException e) {
