diff --git a/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java b/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java
index 25cb141..f410ccb 100644
--- a/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java
+++ b/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java
@@ -25,14 +25,14 @@
   {
   }
 
-  public IndexSizeExceededException(String message)
+  public IndexSizeExceededException(String formatText, Object... arguments)
   {
-    super(message);
+    super(String.format(formatText, arguments));
   }
 
-  public IndexSizeExceededException(String message, Throwable cause)
+  public IndexSizeExceededException(Throwable cause, String formatText, Object... arguments)
   {
-    super(message, cause);
+    super(String.format(formatText, arguments), cause);
   }
 
   public IndexSizeExceededException(Throwable cause)
diff --git a/processing/src/main/java/io/druid/segment/incremental/OffheapIncrementalIndex.java b/processing/src/main/java/io/druid/segment/incremental/OffheapIncrementalIndex.java
index dffdd2d..a7c850b 100644
--- a/processing/src/main/java/io/druid/segment/incremental/OffheapIncrementalIndex.java
+++ b/processing/src/main/java/io/druid/segment/incremental/OffheapIncrementalIndex.java
@@ -187,7 +187,7 @@
     synchronized (this) {
       if (!facts.containsKey(key)) {
         if (!canAppendRow(false)) {
-          throw new IndexSizeExceededException(getOutOfRowsReason());
+          throw new IndexSizeExceededException("%s", getOutOfRowsReason());
         }
       }
       rowOffset = totalAggSize * numEntries.get();
diff --git a/processing/src/main/java/io/druid/segment/incremental/OnheapIncrementalIndex.java b/processing/src/main/java/io/druid/segment/incremental/OnheapIncrementalIndex.java
index cbc034c..23e1471 100644
--- a/processing/src/main/java/io/druid/segment/incremental/OnheapIncrementalIndex.java
+++ b/processing/src/main/java/io/druid/segment/incremental/OnheapIncrementalIndex.java
@@ -151,7 +151,7 @@
 
       // Last ditch sanity checks
       if (numEntries.get() >= maxRowCount && !facts.containsKey(key)) {
-        throw new IndexSizeExceededException("Maximum number of rows reached");
+        throw new IndexSizeExceededException("Maximum number of rows [%d] reached", maxRowCount);
       }
       final Integer prev = facts.putIfAbsent(key, rowIndex);
       if (null == prev) {
diff --git a/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java b/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java
index 25cb141..f410ccb 100644
--- a/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java
+++ b/processing/src/main/java/io/druid/segment/incremental/IndexSizeExceededException.java
@@ -25,14 +25,14 @@
   {
   }
 
-  public IndexSizeExceededException(String message)
+  public IndexSizeExceededException(String formatText, Object... arguments)
   {
-    super(message);
+    super(String.format(formatText, arguments));
   }
 
-  public IndexSizeExceededException(String message, Throwable cause)
+  public IndexSizeExceededException(Throwable cause, String formatText, Object... arguments)
   {
-    super(message, cause);
+    super(String.format(formatText, arguments), cause);
   }
 
   public IndexSizeExceededException(Throwable cause)
