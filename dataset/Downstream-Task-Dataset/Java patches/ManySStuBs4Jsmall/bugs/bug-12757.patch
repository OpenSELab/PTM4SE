diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java b/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java
index 022124f..cd5f30c 100644
--- a/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java
+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java
@@ -64,7 +64,7 @@
         extends TestAnnotationEngine
 {
     @ScalarFunction("single_implementation_parametric_scalar")
-    @Description("Simple scalar with single implemenatation based on class")
+    @Description("Simple scalar with single implementation based on class")
     public static class SingleImplementationScalarFunction
     {
         @SqlType(DOUBLE)
@@ -91,7 +91,7 @@
         assertEquals(scalar.getSignature(), expectedSignature);
         assertTrue(scalar.isDeterministic());
         assertFalse(scalar.isHidden());
-        assertEquals(scalar.getDescription(), "Simple scalar with single implemenatation based on class");
+        assertEquals(scalar.getDescription(), "Simple scalar with single implementation based on class");
 
         assertImplementationCount(scalar, 1, 0, 0);
 
@@ -229,7 +229,7 @@
     public static class StaticMethodScalarFunction
     {
         @ScalarFunction("static_method_scalar")
-        @Description("Simple scalar with single implemenatation based on method")
+        @Description("Simple scalar with single implementation based on method")
         @SqlType(DOUBLE)
         public static double fun(@SqlType(DOUBLE) double v)
         {
@@ -254,7 +254,7 @@
         assertEquals(scalar.getSignature(), expectedSignature);
         assertTrue(scalar.isDeterministic());
         assertFalse(scalar.isHidden());
-        assertEquals(scalar.getDescription(), "Simple scalar with single implemenatation based on method");
+        assertEquals(scalar.getDescription(), "Simple scalar with single implementation based on method");
     }
 
     public static class MultiScalarFunction
diff --git a/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java b/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java
index 022124f..cd5f30c 100644
--- a/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java
+++ b/presto-main/src/test/java/com/facebook/presto/operator/TestAnnotationEngineForScalars.java
@@ -64,7 +64,7 @@
         extends TestAnnotationEngine
 {
     @ScalarFunction("single_implementation_parametric_scalar")
-    @Description("Simple scalar with single implemenatation based on class")
+    @Description("Simple scalar with single implementation based on class")
     public static class SingleImplementationScalarFunction
     {
         @SqlType(DOUBLE)
@@ -91,7 +91,7 @@
         assertEquals(scalar.getSignature(), expectedSignature);
         assertTrue(scalar.isDeterministic());
         assertFalse(scalar.isHidden());
-        assertEquals(scalar.getDescription(), "Simple scalar with single implemenatation based on class");
+        assertEquals(scalar.getDescription(), "Simple scalar with single implementation based on class");
 
         assertImplementationCount(scalar, 1, 0, 0);
 
@@ -229,7 +229,7 @@
     public static class StaticMethodScalarFunction
     {
         @ScalarFunction("static_method_scalar")
-        @Description("Simple scalar with single implemenatation based on method")
+        @Description("Simple scalar with single implementation based on method")
         @SqlType(DOUBLE)
         public static double fun(@SqlType(DOUBLE) double v)
         {
@@ -254,7 +254,7 @@
         assertEquals(scalar.getSignature(), expectedSignature);
         assertTrue(scalar.isDeterministic());
         assertFalse(scalar.isHidden());
-        assertEquals(scalar.getDescription(), "Simple scalar with single implemenatation based on method");
+        assertEquals(scalar.getDescription(), "Simple scalar with single implementation based on method");
     }
 
     public static class MultiScalarFunction
