diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java
index 4d809dc..1d3bd6b 100644
--- a/src/com/google/javascript/jscomp/Compiler.java
+++ b/src/com/google/javascript/jscomp/Compiler.java
@@ -975,8 +975,7 @@
     if (input == null) {
       return;
     }
-    Preconditions.checkState(input.isExtern(), "Not an extern input: "
-        + input.getName());
+    Preconditions.checkState(input.isExtern(), "Not an extern input: %s", input.getName());
     inputsById.remove(id);
     externs.remove(input);
     Node root = input.getAstRoot(this);
@@ -1001,9 +1000,7 @@
   /** Add a source input dynamically. Intended for incremental compilation. */
   void addIncrementalSourceAst(JsAst ast) {
     InputId id = ast.getInputId();
-    Preconditions.checkState(
-        getInput(id) == null,
-        "Duplicate input " + id.getIdName());
+    Preconditions.checkState(getInput(id) == null, "Duplicate input %s", id.getIdName());
     inputsById.put(id, new CompilerInput(ast));
   }
 
@@ -1018,9 +1015,7 @@
    */
   boolean replaceIncrementalSourceAst(JsAst ast) {
     CompilerInput oldInput = getInput(ast.getInputId());
-    Preconditions.checkNotNull(
-        oldInput,
-        "No input to replace: " + ast.getInputId().getIdName());
+    Preconditions.checkNotNull(oldInput, "No input to replace: %s", ast.getInputId().getIdName());
     Node newRoot = ast.getAstRoot(this);
     if (newRoot == null) {
       return false;
