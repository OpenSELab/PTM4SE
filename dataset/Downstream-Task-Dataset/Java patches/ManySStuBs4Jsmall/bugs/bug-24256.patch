diff --git a/twitter4j-async/src/main/java/twitter4j/api/ListsResourcesAsync.java b/twitter4j-async/src/main/java/twitter4j/api/ListsResourcesAsync.java
index d3721e9..b8c1fcc 100644
--- a/twitter4j-async/src/main/java/twitter4j/api/ListsResourcesAsync.java
+++ b/twitter4j-async/src/main/java/twitter4j/api/ListsResourcesAsync.java
@@ -53,7 +53,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/get/lists/statuses">GET lists/statuses | Twitter Developers</a>
      * @since Twitter4J 2.2.3
      */
-    void getUserListStatuses(int listId, Paging paging);
+    void getUserListStatuses(long listId, Paging paging);
 
     /**
      * Show tweet timeline for members of the specified list.
@@ -76,12 +76,12 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/members/destroy">POST lists/members/destroy | Twitter Developers</a>
      * @since Twitter4J 2.1.0
      */
-    void destroyUserListMember(int listId, long userId);
+    void destroyUserListMember(long listId, long userId);
 
     /**
      * @deprecated use {@link #destroyUserListMember(int, long)} instead
      */
-    void deleteUserListMember(int listId, long userId);
+    void deleteUserListMember(long listId, long userId);
 
     /**
      * Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list.
@@ -165,7 +165,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/get/lists/subscribers">GET lists/subscribers | Twitter Developers</a>
      * @since Twitter4J 2.1.1
      */
-    void getUserListSubscribers(int listId, long cursor);
+    void getUserListSubscribers(long listId, long cursor);
 
     /**
      * Returns the subscribers of the specified list.
@@ -187,7 +187,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/subscribers/create">POST lists/subscribers/create | Twitter Developers</a>
      * @since Twitter4J 2.2.3
      */
-    void createUserListSubscription(int listId);
+    void createUserListSubscription(long listId);
 
     /**
      * Make the authenticated user follow the specified list.
@@ -210,7 +210,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/get/lists/subscribers/show">GET lists/subscribers/show | Twitter Developers</a>
      * @since Twitter4J 2.2.3
      */
-    void showUserListSubscription(int listId, long userId);
+    void showUserListSubscription(long listId, long userId);
 
     /**
      * Check if the specified user is a subscriber of the specified list.
@@ -233,7 +233,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/subscribers/destroy">POST lists/subscribers/destroy | Twitter Developers</a>
      * @since Twitter4J 2.2.3
      */
-    void destroyUserListSubscription(int listId);
+    void destroyUserListSubscription(long listId);
 
     /**
      * Unsubscribes the authenticated user form the specified list.
@@ -255,12 +255,12 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/members/create_all">POST lists/members/create_all | Twitter Developers</a>
      * @since Twitter4J 2.1.7
      */
-    void createUserListMembers(int listId, long[] userIds);
+    void createUserListMembers(long listId, long[] userIds);
 
     /**
      * @deprecated use {@link #createUserListMembers(int, long[])} instead
      */
-    void addUserListMembers(int listId, long[] userIds);
+    void addUserListMembers(long listId, long[] userIds);
 
     /**
      * Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method.
@@ -288,12 +288,12 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/members/create_all">POST lists/members/create_all | Twitter Developers</a>
      * @since Twitter4J 2.1.7
      */
-    void createUserListMembers(int listId, String[] screenNames);
+    void createUserListMembers(long listId, String[] screenNames);
 
     /**
      * @deprecated use {@link #createUserListMembers(int, String[])} instead
      */
-    void addUserListMembers(int listId, String[] screenNames);
+    void addUserListMembers(long listId, String[] screenNames);
 
     /**
      * Adds multiple members to a list, by specifying a comma-separated list of member ids or screen names. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members, and you are limited to adding up to 100 members to a list at a time with this method.
@@ -321,7 +321,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/get/lists/members/show">GET lists/members/show | Twitter Developers</a>
      * @since Twitter4J 2.2.3
      */
-    void showUserListMembership(int listId, long userId);
+    void showUserListMembership(long listId, long userId);
 
     /**
      * Check if a user is a member of the specified list.<br>
@@ -345,7 +345,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/get/lists/members">GET lists/members | Twitter Developers</a>
      * @since Twitter4J 2.2.3
      */
-    void getUserListMembers(int listId, long cursor);
+    void getUserListMembers(long listId, long cursor);
 
     /**
      * Returns the members of the specified list.
@@ -368,12 +368,12 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/members/create">POST lists/members/create | Twitter Developers</a>
      * @since Twitter4J 2.1.1
      */
-    void createUserListMember(int listId, long userId);
+    void createUserListMember(long listId, long userId);
 
     /**
      * @deprecated use {@link #createUserListMember(int, long)} instead
      */
-    void addUserListMember(int listId, long userId);
+    void addUserListMember(long listId, long userId);
 
     /**
      * Adds a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members.
@@ -400,7 +400,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/destroy">POST lists/destroy | Twitter Developers</a>
      * @since Twitter4J 2.1.1
      */
-    void destroyUserList(int listId);
+    void destroyUserList(long listId);
 
     /**
      * Deletes the specified list. Must be owned by the authenticated user.
@@ -424,7 +424,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/post/lists/update ">POST lists/update | Twitter Developers</a>
      * @since Twitter4J 2.1.1
      */
-    void updateUserList(int listId, String newListName, boolean isPublicList, String newDescription);
+    void updateUserList(long listId, String newListName, boolean isPublicList, String newDescription);
 
     /**
      * Updates the specified list.
@@ -460,7 +460,7 @@
      * @see <a href="https://dev.twitter.com/docs/api/1.1/get/lists/show">https://dev.twitter.com/docs/api/1.1/get/lists/show | Twitter Developers</a>
      * @since Twitter4J 2.2.3
      */
-    void showUserList(int listId);
+    void showUserList(long listId);
 
 
     /**
