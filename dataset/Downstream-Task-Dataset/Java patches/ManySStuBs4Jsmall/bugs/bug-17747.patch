diff --git a/src/main/java/org/apache/ibatis/mapping/ResultMap.java b/src/main/java/org/apache/ibatis/mapping/ResultMap.java
index baac033..4120489 100644
--- a/src/main/java/org/apache/ibatis/mapping/ResultMap.java
+++ b/src/main/java/org/apache/ibatis/mapping/ResultMap.java
@@ -127,7 +127,8 @@
       if (!constructorArgNames.isEmpty()) {
         final List<String> actualArgNames = argNamesOfMatchingConstructor(constructorArgNames);
         if (actualArgNames == null) {
-          throw new BuilderException("Failed to find a constructor in '"
+          throw new BuilderException("Error in result map '" + resultMap.id
+              + "'. Failed to find a constructor in '"
               + resultMap.getType().getName() + "' by arg names " + constructorArgNames
               + ". There might be more info in debug log.");
         }
@@ -171,7 +172,8 @@
         Class<?> specifiedType = resultMap.constructorResultMappings.get(i).getJavaType();
         if (!actualType.equals(specifiedType)) {
           if (log.isDebugEnabled()) {
-            log.debug("Found a constructor with arg names " + constructorArgNames
+            log.debug("While building result map '" + resultMap.id
+                + "', found a constructor with arg names " + constructorArgNames
                 + ", but the type of '" + constructorArgNames.get(i)
                 + "' did not match. Specified: [" + specifiedType.getName() + "] Declared: ["
                 + actualType.getName() + "]");
diff --git a/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java b/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java
index 0aac5ee..af4d9b5 100644
--- a/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java
+++ b/src/test/java/org/apache/ibatis/submitted/named_constructor_args/InvalidNamedConstructorArgsTest.java
@@ -72,8 +72,11 @@
   @Test
   public void noMatchingConstructorArgName() {
     ex.expect(BuilderException.class);
-    ex.expectMessage(startsWith("Failed to find a constructor in "
-        + "'org.apache.ibatis.submitted.named_constructor_args.User' by arg names [noSuchConstructorArg]."));
+    ex.expectMessage(allOf(
+        containsString(
+            "'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$NoMatchingConstructorMapper.select-void'"),
+        containsString("'org.apache.ibatis.submitted.named_constructor_args.User'"),
+        containsString("[noSuchConstructorArg]")));
 
     Configuration configuration = sqlSessionFactory.getConfiguration();
     configuration.addMapper(NoMatchingConstructorMapper.class);
@@ -92,9 +95,11 @@
   @Test
   public void wrongJavaType() {
     ex.expect(BuilderException.class);
-    ex.expectMessage(startsWith("Failed to find a constructor in "
-        + "'org.apache.ibatis.submitted.named_constructor_args.User' by arg names [id]."));
-
+    ex.expectMessage(allOf(
+        containsString(
+            "'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$ConstructorWithWrongJavaType.select-void'"),
+        containsString("'org.apache.ibatis.submitted.named_constructor_args.User'"),
+        containsString("[id]")));
     Configuration configuration = sqlSessionFactory.getConfiguration();
     configuration.addMapper(ConstructorWithWrongJavaType.class);
   }
@@ -114,8 +119,11 @@
   @Test
   public void missingRequiredJavaType() {
     ex.expect(BuilderException.class);
-    ex.expectMessage(startsWith("Failed to find a constructor in "
-        + "'org.apache.ibatis.submitted.named_constructor_args.User' by arg names [id]."));
+    ex.expectMessage(allOf(
+        containsString(
+            "'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$ConstructorMissingRequiresJavaType.select-void'"),
+        containsString("'org.apache.ibatis.submitted.named_constructor_args.User'"),
+        containsString("[id]")));
 
     Configuration configuration = sqlSessionFactory.getConfiguration();
     configuration.addMapper(ConstructorMissingRequiresJavaType.class);
diff --git a/src/main/java/org/apache/ibatis/mapping/ResultMap.java b/src/main/java/org/apache/ibatis/mapping/ResultMap.java
index baac033..4120489 100644
--- a/src/main/java/org/apache/ibatis/mapping/ResultMap.java
+++ b/src/main/java/org/apache/ibatis/mapping/ResultMap.java
@@ -127,7 +127,8 @@
       if (!constructorArgNames.isEmpty()) {
         final List<String> actualArgNames = argNamesOfMatchingConstructor(constructorArgNames);
         if (actualArgNames == null) {
-          throw new BuilderException("Failed to find a constructor in '"
+          throw new BuilderException("Error in result map '" + resultMap.id
+              + "'. Failed to find a constructor in '"
               + resultMap.getType().getName() + "' by arg names " + constructorArgNames
               + ". There might be more info in debug log.");
         }
@@ -171,7 +172,8 @@
         Class<?> specifiedType = resultMap.constructorResultMappings.get(i).getJavaType();
         if (!actualType.equals(specifiedType)) {
           if (log.isDebugEnabled()) {
-            log.debug("Found a constructor with arg names " + constructorArgNames
+            log.debug("While building result map '" + resultMap.id
+                + "', found a constructor with arg names " + constructorArgNames
                 + ", but the type of '" + constructorArgNames.get(i)
                 + "' did not match. Specified: [" + specifiedType.getName() + "] Declared: ["
                 + actualType.getName() + "]");
