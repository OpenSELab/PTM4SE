diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
index 4913be8..128df01 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
@@ -58,7 +58,7 @@
 
     if (arguments[0].getCategory() != Category.PRIMITIVE) {
       throw new UDFArgumentException(
-          "LOWER only takes primitive types, got " + argumentOI.getTypeName());
+          "LOWER only takes primitive types, got " + arguments[0].getTypeName());
     }
     argumentOI = (PrimitiveObjectInspector) arguments[0];
 
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java
index b263e46..25a6e04 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFUpper.java
@@ -58,7 +58,7 @@
 
     if (arguments[0].getCategory() != Category.PRIMITIVE) {
       throw new UDFArgumentException(
-          "UPPER only takes primitive types, got " + argumentOI.getTypeName());
+          "UPPER only takes primitive types, got " + arguments[0].getTypeName());
     }
     argumentOI = (PrimitiveObjectInspector) arguments[0];
 
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
index 4913be8..128df01 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFLower.java
@@ -58,7 +58,7 @@
 
     if (arguments[0].getCategory() != Category.PRIMITIVE) {
       throw new UDFArgumentException(
-          "LOWER only takes primitive types, got " + argumentOI.getTypeName());
+          "LOWER only takes primitive types, got " + arguments[0].getTypeName());
     }
     argumentOI = (PrimitiveObjectInspector) arguments[0];
 
