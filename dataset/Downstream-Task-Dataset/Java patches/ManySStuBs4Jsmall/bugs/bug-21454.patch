diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java
index a80546a..48a3f3b 100644
--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java
+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java
@@ -95,7 +95,7 @@
 
 	@Configuration
 	@ConditionalOnBean(DataSource.class)
-	@ConditionalOnProperty(prefix = "health.db", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.db", name = "enabled", matchIfMissing = true)
 	public static class DataSourcesHealthIndicatorConfiguration {
 
 		@Autowired
@@ -142,7 +142,7 @@
 
 	@Configuration
 	@ConditionalOnBean(MongoTemplate.class)
-	@ConditionalOnProperty(prefix = "health.mongo", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.mongo", name = "enabled", matchIfMissing = true)
 	public static class MongoHealthIndicatorConfiguration {
 
 		@Autowired
@@ -171,7 +171,7 @@
 
 	@Configuration
 	@ConditionalOnBean(RedisConnectionFactory.class)
-	@ConditionalOnProperty(prefix = "health.redis", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.redis", name = "enabled", matchIfMissing = true)
 	public static class RedisHealthIndicatorConfiguration {
 
 		@Autowired
@@ -201,7 +201,7 @@
 
 	@Configuration
 	@ConditionalOnBean(RabbitTemplate.class)
-	@ConditionalOnProperty(prefix = "health.rabbit", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.rabbit", name = "enabled", matchIfMissing = true)
 	public static class RabbitHealthIndicatorConfiguration {
 
 		@Autowired
@@ -231,7 +231,7 @@
 
 	@Configuration
 	@ConditionalOnBean(SolrServer.class)
-	@ConditionalOnProperty(prefix = "health.solr", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.solr", name = "enabled", matchIfMissing = true)
 	public static class SolrHealthIndicatorConfiguration {
 
 		@Autowired
@@ -259,7 +259,7 @@
 	}
 
 	@Configuration
-	@ConditionalOnProperty(prefix = "health.diskspace", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.diskspace", name = "enabled", matchIfMissing = true)
 	public static class DiskSpaceHealthIndicatorConfiguration {
 
 		@Bean
diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java
index 6eff89c..31e7351 100644
--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java
+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationProperties.java
@@ -26,7 +26,7 @@
  * @author Christian Dupuis
  * @since 1.2.0
  */
-@ConfigurationProperties("health.status")
+@ConfigurationProperties("management.health.status")
 public class HealthIndicatorAutoConfigurationProperties {
 
 	private List<String> order = null;
diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/DiskSpaceHealthIndicatorProperties.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/DiskSpaceHealthIndicatorProperties.java
index 2e057ef..514c7bb 100644
--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/DiskSpaceHealthIndicatorProperties.java
+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/health/DiskSpaceHealthIndicatorProperties.java
@@ -27,7 +27,7 @@
  * @author Andy Wilkinson
  * @since 1.2.0
  */
-@ConfigurationProperties("health.diskspace")
+@ConfigurationProperties("management.health.diskspace")
 public class DiskSpaceHealthIndicatorProperties {
 
 	private static final int MEGABYTES = 1024 * 1024;
diff --git a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java
index 35b5deb..2a99a72 100644
--- a/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java
+++ b/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfigurationTests.java
@@ -78,7 +78,7 @@
 		this.context = new AnnotationConfigApplicationContext();
 		this.context.register(HealthIndicatorAutoConfiguration.class);
 		EnvironmentTestUtils.addEnvironment(this.context,
-				"health.diskspace.enabled:false");
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -93,7 +93,7 @@
 		this.context.register(RedisAutoConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
 		EnvironmentTestUtils.addEnvironment(this.context,
-				"health.diskspace.enabled:false");
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -107,8 +107,8 @@
 		this.context = new AnnotationConfigApplicationContext();
 		this.context.register(RedisAutoConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
-		EnvironmentTestUtils.addEnvironment(this.context, "health.redis.enabled:false",
-				"health.diskspace.enabled:false");
+		EnvironmentTestUtils.addEnvironment(this.context, "management.health.redis.enabled:false",
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -123,7 +123,7 @@
 		this.context.register(MongoAutoConfiguration.class,
 				MongoDataAutoConfiguration.class, HealthIndicatorAutoConfiguration.class);
 		EnvironmentTestUtils.addEnvironment(this.context,
-				"health.diskspace.enabled:false");
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -137,8 +137,8 @@
 		this.context = new AnnotationConfigApplicationContext();
 		this.context.register(MongoAutoConfiguration.class,
 				MongoDataAutoConfiguration.class, HealthIndicatorAutoConfiguration.class);
-		EnvironmentTestUtils.addEnvironment(this.context, "health.mongo.enabled:false",
-				"health.diskspace.enabled:false");
+		EnvironmentTestUtils.addEnvironment(this.context, "management.health.mongo.enabled:false",
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -165,7 +165,7 @@
 		this.context.register(EmbeddedDataSourceConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
 		EnvironmentTestUtils.addEnvironment(this.context,
-				"health.diskspace.enabled:false");
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -183,7 +183,7 @@
 				HealthIndicatorAutoConfiguration.class);
 		EnvironmentTestUtils.addEnvironment(this.context,
 				"spring.datasource.validation-query:SELECT from FOOBAR",
-				"health.diskspace.enabled:false");
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -199,8 +199,8 @@
 		this.context = new AnnotationConfigApplicationContext();
 		this.context.register(EmbeddedDataSourceConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
-		EnvironmentTestUtils.addEnvironment(this.context, "health.db.enabled:false",
-				"health.diskspace.enabled:false");
+		EnvironmentTestUtils.addEnvironment(this.context, "management.health.db.enabled:false",
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -215,7 +215,7 @@
 		this.context.register(RabbitAutoConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
 		EnvironmentTestUtils.addEnvironment(this.context,
-				"health.diskspace.enabled:false");
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -229,8 +229,8 @@
 		this.context = new AnnotationConfigApplicationContext();
 		this.context.register(RabbitAutoConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
-		EnvironmentTestUtils.addEnvironment(this.context, "health.rabbit.enabled:false",
-				"health.diskspace.enabled:false");
+		EnvironmentTestUtils.addEnvironment(this.context, "management.health.rabbit.enabled:false",
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -245,7 +245,7 @@
 		this.context.register(SolrAutoConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
 		EnvironmentTestUtils.addEnvironment(this.context,
-				"health.diskspace.enabled:false");
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
@@ -259,8 +259,8 @@
 		this.context = new AnnotationConfigApplicationContext();
 		this.context.register(SolrAutoConfiguration.class,
 				HealthIndicatorAutoConfiguration.class);
-		EnvironmentTestUtils.addEnvironment(this.context, "health.solr.enabled:false",
-				"health.diskspace.enabled:false");
+		EnvironmentTestUtils.addEnvironment(this.context, "management.health.solr.enabled:false",
+				"management.health.diskspace.enabled:false");
 		this.context.refresh();
 		Map<String, HealthIndicator> beans = this.context
 				.getBeansOfType(HealthIndicator.class);
diff --git a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java
index a80546a..48a3f3b 100644
--- a/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java
+++ b/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/HealthIndicatorAutoConfiguration.java
@@ -95,7 +95,7 @@
 
 	@Configuration
 	@ConditionalOnBean(DataSource.class)
-	@ConditionalOnProperty(prefix = "health.db", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.db", name = "enabled", matchIfMissing = true)
 	public static class DataSourcesHealthIndicatorConfiguration {
 
 		@Autowired
@@ -142,7 +142,7 @@
 
 	@Configuration
 	@ConditionalOnBean(MongoTemplate.class)
-	@ConditionalOnProperty(prefix = "health.mongo", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.mongo", name = "enabled", matchIfMissing = true)
 	public static class MongoHealthIndicatorConfiguration {
 
 		@Autowired
@@ -171,7 +171,7 @@
 
 	@Configuration
 	@ConditionalOnBean(RedisConnectionFactory.class)
-	@ConditionalOnProperty(prefix = "health.redis", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.redis", name = "enabled", matchIfMissing = true)
 	public static class RedisHealthIndicatorConfiguration {
 
 		@Autowired
@@ -201,7 +201,7 @@
 
 	@Configuration
 	@ConditionalOnBean(RabbitTemplate.class)
-	@ConditionalOnProperty(prefix = "health.rabbit", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.rabbit", name = "enabled", matchIfMissing = true)
 	public static class RabbitHealthIndicatorConfiguration {
 
 		@Autowired
@@ -231,7 +231,7 @@
 
 	@Configuration
 	@ConditionalOnBean(SolrServer.class)
-	@ConditionalOnProperty(prefix = "health.solr", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.solr", name = "enabled", matchIfMissing = true)
 	public static class SolrHealthIndicatorConfiguration {
 
 		@Autowired
@@ -259,7 +259,7 @@
 	}
 
 	@Configuration
-	@ConditionalOnProperty(prefix = "health.diskspace", name = "enabled", matchIfMissing = true)
+	@ConditionalOnProperty(prefix = "management.health.diskspace", name = "enabled", matchIfMissing = true)
 	public static class DiskSpaceHealthIndicatorConfiguration {
 
 		@Bean
