diff --git a/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java b/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java
index 7639e22..1d61e95 100644
--- a/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java
+++ b/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java
@@ -54,7 +54,7 @@
         @Override
         public void emitBatch(final TransactionAttempt tx, final Object coordinatorMeta,
                 final TransactionalOutputCollector collector) {
-            int partitions = (int) coordinatorMeta;
+            int partitions = (Integer) coordinatorMeta;
             for(int i=_index; i < partitions; i+=_numTasks) {
                 if(!_partitionStates.containsKey(i)) {
                     _partitionStates.put(i, new RotatingTransactionalState(_state, "" + i));
diff --git a/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java b/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java
index 7639e22..1d61e95 100644
--- a/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java
+++ b/src/jvm/backtype/storm/transactional/partitioned/PartitionedTransactionalSpoutExecutor.java
@@ -54,7 +54,7 @@
         @Override
         public void emitBatch(final TransactionAttempt tx, final Object coordinatorMeta,
                 final TransactionalOutputCollector collector) {
-            int partitions = (int) coordinatorMeta;
+            int partitions = (Integer) coordinatorMeta;
             for(int i=_index; i < partitions; i+=_numTasks) {
                 if(!_partitionStates.containsKey(i)) {
                     _partitionStates.put(i, new RotatingTransactionalState(_state, "" + i));
