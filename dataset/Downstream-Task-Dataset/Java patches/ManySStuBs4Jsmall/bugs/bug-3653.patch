diff --git a/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java b/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java
index ac6b7a9..b08e02e 100644
--- a/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java
+++ b/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java
@@ -241,7 +241,7 @@
 
     @Override
     public void run() {
-        while (!isShutdown.get()) {
+        while (isShutdown != null && !isShutdown.get()) {
             if (localMode) {
                 return;
             }
@@ -738,7 +738,7 @@
     class RefreshTopologiesThread extends RunnableCallback {
         @Override
         public void run() {
-            if (!isShutdown.get()) {
+            if (isShutdown != null && !isShutdown.get()) {
                 pushEvent(new Refresh());
             }
         }
@@ -761,7 +761,7 @@
 
         @Override
         public void run() {
-            while (!isShutdown.get()) {
+            while (isShutdown != null && !isShutdown.get()) {
                 try {
                     if (metricUploader != null && nimbusData.isLeader()) {
                         final int idx = getFirstPendingUploadIndex();
@@ -804,7 +804,7 @@
 
         @Override
         public void run() {
-            while (!isShutdown.get()) {
+            while (isShutdown != null && !isShutdown.get()) {
                 long start = System.currentTimeMillis();
                 try {
                     // if metricUploader is not fully initialized, return directly
diff --git a/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java b/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java
index ac6b7a9..b08e02e 100644
--- a/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java
+++ b/jstorm-core/src/main/java/com/alibaba/jstorm/daemon/nimbus/TopologyMetricsRunnable.java
@@ -241,7 +241,7 @@
 
     @Override
     public void run() {
-        while (!isShutdown.get()) {
+        while (isShutdown != null && !isShutdown.get()) {
             if (localMode) {
                 return;
             }
@@ -738,7 +738,7 @@
     class RefreshTopologiesThread extends RunnableCallback {
         @Override
         public void run() {
-            if (!isShutdown.get()) {
+            if (isShutdown != null && !isShutdown.get()) {
                 pushEvent(new Refresh());
             }
         }
@@ -761,7 +761,7 @@
 
         @Override
         public void run() {
-            while (!isShutdown.get()) {
+            while (isShutdown != null && !isShutdown.get()) {
                 try {
                     if (metricUploader != null && nimbusData.isLeader()) {
                         final int idx = getFirstPendingUploadIndex();
@@ -804,7 +804,7 @@
 
         @Override
         public void run() {
-            while (!isShutdown.get()) {
+            while (isShutdown != null && !isShutdown.get()) {
                 long start = System.currentTimeMillis();
                 try {
                     // if metricUploader is not fully initialized, return directly
