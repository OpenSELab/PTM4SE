diff --git a/bundles/binding/org.openhab.binding.tcp/src/main/java/org/openhab/binding/tcp/protocol/internal/UDPBinding.java b/bundles/binding/org.openhab.binding.tcp/src/main/java/org/openhab/binding/tcp/protocol/internal/UDPBinding.java
index 9826ca3..66e2e8d 100644
--- a/bundles/binding/org.openhab.binding.tcp/src/main/java/org/openhab/binding/tcp/protocol/internal/UDPBinding.java
+++ b/bundles/binding/org.openhab.binding.tcp/src/main/java/org/openhab/binding/tcp/protocol/internal/UDPBinding.java
@@ -185,7 +185,7 @@
                 timeOut = Integer.parseInt((timeOutString));
             } else {
                 logger.info(
-                        "The maximum time out for blocking write operations will be set to the default vaulue of {}",
+                        "The maximum time out for blocking write operations will be set to the default value of {}",
                         timeOut);
             }
 
@@ -193,7 +193,7 @@
             if (StringUtils.isNotBlank(blockingString)) {
                 blocking = Boolean.parseBoolean((blockingString));
             } else {
-                logger.info("The blocking nature of read/write operations will be set to the default vaulue of {}",
+                logger.info("The blocking nature of read/write operations will be set to the default value of {}",
                         blocking);
             }
 
@@ -205,7 +205,7 @@
                     preAmble = preambleString;
                 }
             } else {
-                logger.info("The preamble for all write operations will be set to the default vaulue of {}", preAmble);
+                logger.info("The preamble for all write operations will be set to the default value of {}", preAmble);
             }
 
             String postambleString = (String) config.get("postamble");
@@ -216,7 +216,7 @@
                     postAmble = postambleString;
                 }
             } else {
-                logger.info("The postamble for all write operations will be set to the default vaulue of {}",
+                logger.info("The postamble for all write operations will be set to the default value of {}",
                         postAmble);
             }
 
@@ -224,7 +224,7 @@
             if (StringUtils.isNotBlank(updatewithresponseString)) {
                 updateWithResponse = Boolean.parseBoolean((updatewithresponseString));
             } else {
-                logger.info("Updating states with returned values will be set to the default vaulue of {}",
+                logger.info("Updating states with returned values will be set to the default value of {}",
                         updateWithResponse);
             }
 
@@ -232,7 +232,7 @@
             if (StringUtils.isNotBlank(charsetString)) {
                 charset = charsetString;
             } else {
-                logger.info("The characterset will be set to the default vaulue of {}", charset);
+                logger.info("The characterset will be set to the default value of {}", charset);
             }
 
         }
