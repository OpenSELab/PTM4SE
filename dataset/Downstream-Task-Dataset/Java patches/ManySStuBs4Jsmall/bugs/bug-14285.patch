diff --git a/test/com/google/javascript/jscomp/NewTypeInferenceTest.java b/test/com/google/javascript/jscomp/NewTypeInferenceTest.java
index 08dd06d..27d199a 100644
--- a/test/com/google/javascript/jscomp/NewTypeInferenceTest.java
+++ b/test/com/google/javascript/jscomp/NewTypeInferenceTest.java
@@ -6815,7 +6815,7 @@
         TypeCheck.INEXISTENT_PROPERTY);
   }
 
-  public void testLooseFunctionSummaryDoesntCrash() {
+  public void testUnannotatedFunctionSummaryDoesntCrash() {
     checkNoWarnings(
         "/** @interface */\n" +
         "var IThenable = function() {};\n" +
@@ -6828,7 +6828,7 @@
         " */\n" +
         "Promise.prototype.then = function(onFulfilled) {};",
         "var /** !Promise */ p;\n" +
-        "function f(loose) {\n" +
+        "function f(unused) {\n" +
         "  function g(){ return 5; }\n" +
         "  p.then(g);\n" +
         "}");
@@ -6846,7 +6846,7 @@
         " */\n" +
         "Promise.prototype.then = function(onFulfilled) {};",
         "var /** !Promise */ p;\n" +
-        "function f(loose) {\n" +
+        "function f(unused) {\n" +
         "  function g(){ return 5; }\n" +
         "  var /** null */ n = p.then(g);\n" +
         "}",
diff --git a/test/com/google/javascript/jscomp/NewTypeInferenceTest.java b/test/com/google/javascript/jscomp/NewTypeInferenceTest.java
index 08dd06d..27d199a 100644
--- a/test/com/google/javascript/jscomp/NewTypeInferenceTest.java
+++ b/test/com/google/javascript/jscomp/NewTypeInferenceTest.java
@@ -6815,7 +6815,7 @@
         TypeCheck.INEXISTENT_PROPERTY);
   }
 
-  public void testLooseFunctionSummaryDoesntCrash() {
+  public void testUnannotatedFunctionSummaryDoesntCrash() {
     checkNoWarnings(
         "/** @interface */\n" +
         "var IThenable = function() {};\n" +
@@ -6828,7 +6828,7 @@
         " */\n" +
         "Promise.prototype.then = function(onFulfilled) {};",
         "var /** !Promise */ p;\n" +
-        "function f(loose) {\n" +
+        "function f(unused) {\n" +
         "  function g(){ return 5; }\n" +
         "  p.then(g);\n" +
         "}");
@@ -6846,7 +6846,7 @@
         " */\n" +
         "Promise.prototype.then = function(onFulfilled) {};",
         "var /** !Promise */ p;\n" +
-        "function f(loose) {\n" +
+        "function f(unused) {\n" +
         "  function g(){ return 5; }\n" +
         "  var /** null */ n = p.then(g);\n" +
         "}",
