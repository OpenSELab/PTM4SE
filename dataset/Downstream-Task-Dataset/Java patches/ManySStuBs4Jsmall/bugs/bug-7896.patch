diff --git a/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java b/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java
index dbe1dc8..bed4d0a 100644
--- a/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java
+++ b/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java
@@ -199,7 +199,7 @@
 
   private void nextBufferToWrite() {
     if (currentWriteBufferIndex == (writeBuffers.size() - 1)) {
-      if ((1 + writeBuffers.size()) * wbSize > maxSize) {
+      if ((1 + writeBuffers.size()) * ((long)wbSize) > maxSize) {
         // We could verify precisely at write time, but just do approximate at allocation time.
         throw new RuntimeException("Too much memory used by write buffers");
       }
@@ -283,11 +283,11 @@
   }
 
   public long getWritePoint() {
-    return (currentWriteBufferIndex * wbSize) + currentWriteOffset;
+    return (currentWriteBufferIndex * (long)wbSize) + currentWriteOffset;
   }
 
   public long getReadPoint() {
-    return (currentReadBufferIndex * wbSize) + currentReadOffset;
+    return (currentReadBufferIndex * (long)wbSize) + currentReadOffset;
   }
 
   public void writeVLong(long value) {
diff --git a/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java b/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java
index dbe1dc8..bed4d0a 100644
--- a/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java
+++ b/serde/src/java/org/apache/hadoop/hive/serde2/WriteBuffers.java
@@ -199,7 +199,7 @@
 
   private void nextBufferToWrite() {
     if (currentWriteBufferIndex == (writeBuffers.size() - 1)) {
-      if ((1 + writeBuffers.size()) * wbSize > maxSize) {
+      if ((1 + writeBuffers.size()) * ((long)wbSize) > maxSize) {
         // We could verify precisely at write time, but just do approximate at allocation time.
         throw new RuntimeException("Too much memory used by write buffers");
       }
@@ -283,11 +283,11 @@
   }
 
   public long getWritePoint() {
-    return (currentWriteBufferIndex * wbSize) + currentWriteOffset;
+    return (currentWriteBufferIndex * (long)wbSize) + currentWriteOffset;
   }
 
   public long getReadPoint() {
-    return (currentReadBufferIndex * wbSize) + currentReadOffset;
+    return (currentReadBufferIndex * (long)wbSize) + currentReadOffset;
   }
 
   public void writeVLong(long value) {
