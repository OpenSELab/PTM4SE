diff --git a/tool/test/org/antlr/v4/test/TestBasicSemanticErrors.java b/tool/test/org/antlr/v4/test/TestBasicSemanticErrors.java
index 2dfbf27..e894bf5 100644
--- a/tool/test/org/antlr/v4/test/TestBasicSemanticErrors.java
+++ b/tool/test/org/antlr/v4/test/TestBasicSemanticErrors.java
@@ -54,17 +54,17 @@
         "b : ( options { ick=bar; greedy=true; } : ID )+ ;\n" +
         "c : ID<blue> ID<x=y> ;",
         // YIELDS
-		"warning(83): U.g4:2:10: illegal option foo\n" +
-		"warning(83): U.g4:2:19: illegal option k\n" +
+		"warning(83): U.g4:2:10: illegal option 'foo'\n" +
+		"warning(83): U.g4:2:19: illegal option 'k'\n" +
 		"error(60): U.g4:5:8: token names must start with an uppercase letter: f\n" +
-		"warning(83): U.g4:9:10: illegal option x\n" +
+		"warning(83): U.g4:9:10: illegal option 'x'\n" +
 		"error(54): U.g4:9:0: repeated grammar prequel spec (option, token, or import); please merge\n" +
 		"error(54): U.g4:8:0: repeated grammar prequel spec (option, token, or import); please merge\n" +
-		"warning(83): U.g4:12:10: illegal option blech\n" +
-		"warning(83): U.g4:12:21: illegal option greedy\n" +
-		"warning(83): U.g4:15:16: illegal option ick\n" +
-		"warning(83): U.g4:15:25: illegal option greedy\n" +
-		"warning(83): U.g4:16:16: illegal option x\n",
+		"warning(83): U.g4:12:10: illegal option 'blech'\n" +
+		"warning(83): U.g4:12:21: illegal option 'greedy'\n" +
+		"warning(83): U.g4:15:16: illegal option 'ick'\n" +
+		"warning(83): U.g4:15:25: illegal option 'greedy'\n" +
+		"warning(83): U.g4:16:16: illegal option 'x'\n",
     };
 
 	@Test public void testU() { super.testErrors(U, false); }
@@ -82,7 +82,7 @@
 			"";
 
 		String expected =
-			"error(130): T.g4:2:5: label op assigned to a block which is not a set\n";
+			"error(130): T.g4:2:5: label 'op' assigned to a block which is not a set\n";
 
 		testErrors(new String[] { grammar, expected }, false);
 	}
@@ -97,16 +97,16 @@
 			"expr : '=';\n";
 
 		String expected =
-			"error(" + ErrorType.ARG_CONFLICTS_WITH_RULE.code + "): T.g4:2:7: parameter expr conflicts with rule with same name\n" +
-			"error(" + ErrorType.RETVAL_CONFLICTS_WITH_RULE.code + "): T.g4:2:26: return value expr conflicts with rule with same name\n" +
-			"error(" + ErrorType.LOCAL_CONFLICTS_WITH_RULE.code + "): T.g4:3:12: local expr conflicts with rule with same name\n" +
-			"error(" + ErrorType.RETVAL_CONFLICTS_WITH_ARG.code + "): T.g4:2:26: return value expr conflicts with parameter with same name\n" +
-			"error(" + ErrorType.LOCAL_CONFLICTS_WITH_ARG.code + "): T.g4:3:12: local expr conflicts with parameter with same name\n" +
-			"error(" + ErrorType.LOCAL_CONFLICTS_WITH_RETVAL.code + "): T.g4:3:12: local expr conflicts with return value with same name\n" +
-			"error(" + ErrorType.LABEL_CONFLICTS_WITH_RULE.code + "): T.g4:4:4: label expr conflicts with rule with same name\n" +
-			"error(" + ErrorType.LABEL_CONFLICTS_WITH_ARG.code + "): T.g4:4:4: label expr conflicts with parameter with same name\n" +
-			"error(" + ErrorType.LABEL_CONFLICTS_WITH_RETVAL.code + "): T.g4:4:4: label expr conflicts with return value with same name\n" +
-			"error(" + ErrorType.LABEL_CONFLICTS_WITH_LOCAL.code + "): T.g4:4:4: label expr conflicts with local with same name\n";
+			"error(" + ErrorType.ARG_CONFLICTS_WITH_RULE.code + "): T.g4:2:7: parameter 'expr' conflicts with rule with same name\n" +
+			"error(" + ErrorType.RETVAL_CONFLICTS_WITH_RULE.code + "): T.g4:2:26: return value 'expr' conflicts with rule with same name\n" +
+			"error(" + ErrorType.LOCAL_CONFLICTS_WITH_RULE.code + "): T.g4:3:12: local 'expr' conflicts with rule with same name\n" +
+			"error(" + ErrorType.RETVAL_CONFLICTS_WITH_ARG.code + "): T.g4:2:26: return value 'expr' conflicts with parameter with same name\n" +
+			"error(" + ErrorType.LOCAL_CONFLICTS_WITH_ARG.code + "): T.g4:3:12: local 'expr' conflicts with parameter with same name\n" +
+			"error(" + ErrorType.LOCAL_CONFLICTS_WITH_RETVAL.code + "): T.g4:3:12: local 'expr' conflicts with return value with same name\n" +
+			"error(" + ErrorType.LABEL_CONFLICTS_WITH_RULE.code + "): T.g4:4:4: label 'expr' conflicts with rule with same name\n" +
+			"error(" + ErrorType.LABEL_CONFLICTS_WITH_ARG.code + "): T.g4:4:4: label 'expr' conflicts with parameter with same name\n" +
+			"error(" + ErrorType.LABEL_CONFLICTS_WITH_RETVAL.code + "): T.g4:4:4: label 'expr' conflicts with return value with same name\n" +
+			"error(" + ErrorType.LABEL_CONFLICTS_WITH_LOCAL.code + "): T.g4:4:4: label 'expr' conflicts with local with same name\n";
 		ST grammarST = new ST(grammarTemplate);
 		grammarST.add("args", "int expr");
 		grammarST.add("retvals", "int expr");
