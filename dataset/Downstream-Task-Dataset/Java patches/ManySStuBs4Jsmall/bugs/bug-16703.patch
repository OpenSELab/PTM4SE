diff --git a/gdx/src/com/badlogic/gdx/utils/Pool.java b/gdx/src/com/badlogic/gdx/utils/Pool.java
index 6beb600..1ececac 100644
--- a/gdx/src/com/badlogic/gdx/utils/Pool.java
+++ b/gdx/src/com/badlogic/gdx/utils/Pool.java
@@ -71,7 +71,7 @@
 	/** Puts the specified objects in the pool. Null objects within the array are silently ignored.
 	 * @see #free(Object) */
 	public void freeAll (Array<T> objects) {
-		if (objects == null) throw new IllegalArgumentException("object cannot be null.");
+		if (objects == null) throw new IllegalArgumentException("objects cannot be null.");
 		Array<T> freeObjects = this.freeObjects;
 		int max = this.max;
 		for (int i = 0; i < objects.size; i++) {
diff --git a/gdx/src/com/badlogic/gdx/utils/Pool.java b/gdx/src/com/badlogic/gdx/utils/Pool.java
index 6beb600..1ececac 100644
--- a/gdx/src/com/badlogic/gdx/utils/Pool.java
+++ b/gdx/src/com/badlogic/gdx/utils/Pool.java
@@ -71,7 +71,7 @@
 	/** Puts the specified objects in the pool. Null objects within the array are silently ignored.
 	 * @see #free(Object) */
 	public void freeAll (Array<T> objects) {
-		if (objects == null) throw new IllegalArgumentException("object cannot be null.");
+		if (objects == null) throw new IllegalArgumentException("objects cannot be null.");
 		Array<T> freeObjects = this.freeObjects;
 		int max = this.max;
 		for (int i = 0; i < objects.size; i++) {
