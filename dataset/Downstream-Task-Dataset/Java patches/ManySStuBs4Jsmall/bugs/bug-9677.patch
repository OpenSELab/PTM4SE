diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java
index f170675..34f08a6 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java
@@ -111,7 +111,7 @@
      **/
     public void reportCppComment(int startLineNo, int startColNo) {
         final String line = line(startLineNo - 1);
-        final String[] txt = new String[] {line.substring(startColNo)};
+        final String[] txt = {line.substring(startColNo)};
         final Comment comment = new Comment(txt, startColNo, startLineNo,
                 line.length() - 1);
         cppComments.put(startLineNo, comment);
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java
index 90e0ec1..11c1cbf 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java
@@ -45,7 +45,7 @@
     /**
      * Children checked by parent handlers.
      */
-    private static final int[] CHECKED_CHILDREN = new int[] {
+    private static final int[] CHECKED_CHILDREN = {
         TokenTypes.VARIABLE_DEF,
         TokenTypes.EXPR,
         TokenTypes.OBJBLOCK,
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java
index b307678..a59199d 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CaseHandler.java
@@ -31,7 +31,7 @@
     /**
      * The child elements of a case expression.
      */
-    private static final int[] CASE_CHILDREN = new int[] {
+    private static final int[] CASE_CHILDREN = {
         TokenTypes.LITERAL_CASE,
         TokenTypes.LITERAL_DEFAULT,
     };
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
index 2f77e8e..f7fa276 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LabelHandler.java
@@ -31,7 +31,7 @@
     /**
      * The types of expressions that are children of a label.
      */
-    private static final int[] LABEL_CHILDREN = new int[] {
+    private static final int[] LABEL_CHILDREN = {
         TokenTypes.IDENT,
     };
 
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java
index 4ed56d9..4dc01da 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java
@@ -46,7 +46,7 @@
     /**
      * An array of tokens for interface modifiers.
      */
-    private static final int[] TOKENS_FOR_INTERFACE_MODIFIERS = new int[] {
+    private static final int[] TOKENS_FOR_INTERFACE_MODIFIERS = {
         TokenTypes.LITERAL_STATIC,
         TokenTypes.ABSTRACT,
     };
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java
index 45d9180..524a249 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java
@@ -94,7 +94,7 @@
         }
         else {
             if (!isFollowedByWhitespace(ast, line)) {
-                final Object[] message = new Object[]{ast.getText()};
+                final Object[] message = {ast.getText()};
                 log(ast.getLineNo(),
                     ast.getColumnNo() + ast.getText().length(),
                     WS_NOT_FOLLOWED,
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java b/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java
index d8556ea..b26781a 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeModel.java
@@ -34,7 +34,7 @@
  * @author Lars KÃ¼hne
  */
 public class ParseTreeModel extends AbstractTreeTableModel {
-    private static final String[] COLUMN_NAMES = new String[]{
+    private static final String[] COLUMN_NAMES = {
         "Tree", "Type", "Line", "Column", "Text"
     };
 
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java
index f170675..34f08a6 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java
@@ -111,7 +111,7 @@
      **/
     public void reportCppComment(int startLineNo, int startColNo) {
         final String line = line(startLineNo - 1);
-        final String[] txt = new String[] {line.substring(startColNo)};
+        final String[] txt = {line.substring(startColNo)};
         final Comment comment = new Comment(txt, startColNo, startLineNo,
                 line.length() - 1);
         cppComments.put(startLineNo, comment);
