diff --git a/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java b/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java
index e032596..1c28bc2 100644
--- a/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java
+++ b/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java
@@ -111,7 +111,7 @@
 
   @Test
   public void shouldSelectCountOfPosts() throws Exception {
-    Integer count = (Integer) manager.selectOne("domain.blog.mappers.BlogMapper.selectCountOfPosts");
+    Integer count = manager.selectOne("domain.blog.mappers.BlogMapper.selectCountOfPosts");
     assertEquals(5, count.intValue());
   }
 
@@ -124,7 +124,7 @@
 
   @Test
   public void shouldSelectOneAuthor() throws Exception {
-    Author author = (Author) manager.selectOne(
+    Author author = manager.selectOne(
         "domain.blog.mappers.AuthorMapper.selectAuthor", new Author(101));
     assertEquals(101, author.getId());
     assertEquals(Section.NEWS, author.getFavouriteSection());
@@ -140,7 +140,7 @@
 
   @Test
   public void shouldSelectOneImmutableAuthor() throws Exception {
-    ImmutableAuthor author = (ImmutableAuthor) manager.selectOne(
+    ImmutableAuthor author = manager.selectOne(
         "domain.blog.mappers.AuthorMapper.selectImmutableAuthor", new Author(101));
     assertEquals(101, author.getId());
     assertEquals(Section.NEWS, author.getFavouriteSection());
@@ -148,7 +148,7 @@
 
   @Test
   public void shouldSelectOneAuthorWithInlineParams() throws Exception {
-    Author author = (Author) manager.selectOne(
+    Author author = manager.selectOne(
         "domain.blog.mappers.AuthorMapper.selectAuthorWithInlineParams", new Author(101));
     assertEquals(101, author.getId());
   }
@@ -157,7 +157,7 @@
   public void shouldInsertAuthor() throws Exception {
     Author expected = new Author(500, "cbegin", "******", "cbegin@somewhere.com", "Something...", null);
     manager.insert("domain.blog.mappers.AuthorMapper.insertAuthor", expected);
-    Author actual = (Author) manager.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", new Author(500));
+    Author actual = manager.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", new Author(500));
     assertNotNull(actual);
     assertEquals(expected.getId(), actual.getId());
     assertEquals(expected.getUsername(), actual.getUsername());
@@ -182,7 +182,7 @@
 
   @Test
   public void shouldSelectBlogWithPostsAndAuthorUsingSubSelects() throws Exception {
-    Blog blog = (Blog) manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogWithPostsUsingSubSelect", 1);
+    Blog blog = manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogWithPostsUsingSubSelect", 1);
     assertEquals("Jim Business", blog.getTitle());
     assertEquals(2, blog.getPosts().size());
     assertEquals("Corn nuts", blog.getPosts().get(0).getSubject());
@@ -192,7 +192,7 @@
 
   @Test
   public void shouldSelectBlogWithPostsAndAuthorUsingJoin() throws Exception {
-    Blog blog = (Blog) manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
+    Blog blog = manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
     assertEquals("Jim Business", blog.getTitle());
 
     final Author author = blog.getAuthor();
@@ -222,7 +222,7 @@
 
   @Test
   public void shouldSelectNestedBlogWithPostsAndAuthorUsingJoin() throws Exception {
-    Blog blog = (Blog) manager.selectOne("domain.blog.mappers.NestedBlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
+    Blog blog = manager.selectOne("domain.blog.mappers.NestedBlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
     assertEquals("Jim Business", blog.getTitle());
 
     final Author author = blog.getAuthor();
diff --git a/src/test/java/org/apache/ibatis/session/SqlSessionTest.java b/src/test/java/org/apache/ibatis/session/SqlSessionTest.java
index c0920c7..40efb41 100644
--- a/src/test/java/org/apache/ibatis/session/SqlSessionTest.java
+++ b/src/test/java/org/apache/ibatis/session/SqlSessionTest.java
@@ -156,7 +156,7 @@
   public void shouldSelectCountOfPosts() throws Exception {
     SqlSession session = sqlMapper.openSession();
     try {
-      Integer count = (Integer) session.selectOne("domain.blog.mappers.BlogMapper.selectCountOfPosts");
+      Integer count = session.selectOne("domain.blog.mappers.BlogMapper.selectCountOfPosts");
       assertEquals(5, count.intValue());
     } finally {
       session.close();
@@ -179,7 +179,7 @@
   public void shouldSelectOneAuthor() throws Exception {
     SqlSession session = sqlMapper.openSession();
     try {
-      Author author = (Author) session.selectOne(
+      Author author = session.selectOne(
           "domain.blog.mappers.AuthorMapper.selectAuthor", new Author(101));
       assertEquals(101, author.getId());
       assertEquals(Section.NEWS, author.getFavouriteSection());
@@ -205,7 +205,7 @@
   public void shouldSelectOneImmutableAuthor() throws Exception {
     SqlSession session = sqlMapper.openSession();
     try {
-      ImmutableAuthor author = (ImmutableAuthor) session.selectOne(
+      ImmutableAuthor author = session.selectOne(
           "domain.blog.mappers.AuthorMapper.selectImmutableAuthor", new Author(101));
       assertEquals(101, author.getId());
       assertEquals(Section.NEWS, author.getFavouriteSection());
@@ -218,7 +218,7 @@
   public void shouldSelectOneAuthorWithInlineParams() throws Exception {
     SqlSession session = sqlMapper.openSession();
     try {
-      Author author = (Author) session.selectOne(
+      Author author = session.selectOne(
           "domain.blog.mappers.AuthorMapper.selectAuthorWithInlineParams", new Author(101));
       assertEquals(101, author.getId());
     } finally {
@@ -232,7 +232,7 @@
     try {
       Author expected = new Author(500, "cbegin", "******", "cbegin@somewhere.com", "Something...", null);
       session.insert("domain.blog.mappers.AuthorMapper.insertAuthor", expected);
-      Author actual = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", new Author(500));
+      Author actual = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", new Author(500));
       assertNotNull(actual);
       assertEquals(expected.getId(), actual.getId());
       assertEquals(expected.getUsername(), actual.getUsername());
@@ -250,18 +250,18 @@
     Author original;
     Author updated;
     try {
-      original = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      original = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       original.setEmail("new@email.com");
       session.update("domain.blog.mappers.AuthorMapper.updateAuthor", original);
 
-      updated = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      updated = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       assertEquals(original.getEmail(), updated.getEmail());
     } finally {
       session.close();
     }
     try {
       session = sqlMapper.openSession();
-      updated = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      updated = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       assertEquals("jim@ibatis.apache.org", updated.getEmail());
     } finally {
       session.close();
@@ -274,11 +274,11 @@
     Author original;
     Author updated;
     try {
-      original = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      original = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       original.setEmail("new@email.com");
       session.update("domain.blog.mappers.AuthorMapper.updateAuthor", original);
 
-      updated = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      updated = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       assertEquals(original.getEmail(), updated.getEmail());
       session.commit();
     } finally {
@@ -286,7 +286,7 @@
     }
     try {
       session = sqlMapper.openSession();
-      updated = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      updated = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       assertEquals(original.getEmail(), updated.getEmail());
     } finally {
       session.close();
@@ -299,12 +299,12 @@
     Author original;
     Author updated;
     try {
-      original = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      original = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       original.setEmail("new@email.com");
       original.setBio(null);
       session.update("domain.blog.mappers.AuthorMapper.updateAuthorIfNecessary", original);
 
-      updated = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      updated = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       assertEquals(original.getEmail(), updated.getEmail());
       session.commit();
     } finally {
@@ -312,7 +312,7 @@
     }
     try {
       session = sqlMapper.openSession();
-      updated = (Author) session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
+      updated = session.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", 101);
       assertEquals(original.getEmail(), updated.getEmail());
     } finally {
       session.close();
@@ -345,7 +345,7 @@
   public void shouldSelectBlogWithPostsAndAuthorUsingSubSelects() throws Exception {
     SqlSession session = sqlMapper.openSession();
     try {
-      Blog blog = (Blog) session.selectOne("domain.blog.mappers.BlogMapper.selectBlogWithPostsUsingSubSelect", 1);
+      Blog blog = session.selectOne("domain.blog.mappers.BlogMapper.selectBlogWithPostsUsingSubSelect", 1);
       assertEquals("Jim Business", blog.getTitle());
       assertEquals(2, blog.getPosts().size());
       assertEquals("Corn nuts", blog.getPosts().get(0).getSubject());
@@ -360,7 +360,7 @@
   public void shouldSelectBlogWithPostsAndAuthorUsingJoin() throws Exception {
     SqlSession session = sqlMapper.openSession();
     try {
-      Blog blog = (Blog) session.selectOne("domain.blog.mappers.BlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
+      Blog blog = session.selectOne("domain.blog.mappers.BlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
       assertEquals("Jim Business", blog.getTitle());
 
       final Author author = blog.getAuthor();
@@ -395,7 +395,7 @@
   public void shouldSelectNestedBlogWithPostsAndAuthorUsingJoin() throws Exception {
     SqlSession session = sqlMapper.openSession();
     try {
-      Blog blog = (Blog) session.selectOne("domain.blog.mappers.NestedBlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
+      Blog blog = session.selectOne("domain.blog.mappers.NestedBlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
       assertEquals("Jim Business", blog.getTitle());
 
       final Author author = blog.getAuthor();
diff --git a/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java b/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java
index e032596..1c28bc2 100644
--- a/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java
+++ b/src/test/java/org/apache/ibatis/session/SqlSessionManagerTest.java
@@ -111,7 +111,7 @@
 
   @Test
   public void shouldSelectCountOfPosts() throws Exception {
-    Integer count = (Integer) manager.selectOne("domain.blog.mappers.BlogMapper.selectCountOfPosts");
+    Integer count = manager.selectOne("domain.blog.mappers.BlogMapper.selectCountOfPosts");
     assertEquals(5, count.intValue());
   }
 
@@ -124,7 +124,7 @@
 
   @Test
   public void shouldSelectOneAuthor() throws Exception {
-    Author author = (Author) manager.selectOne(
+    Author author = manager.selectOne(
         "domain.blog.mappers.AuthorMapper.selectAuthor", new Author(101));
     assertEquals(101, author.getId());
     assertEquals(Section.NEWS, author.getFavouriteSection());
@@ -140,7 +140,7 @@
 
   @Test
   public void shouldSelectOneImmutableAuthor() throws Exception {
-    ImmutableAuthor author = (ImmutableAuthor) manager.selectOne(
+    ImmutableAuthor author = manager.selectOne(
         "domain.blog.mappers.AuthorMapper.selectImmutableAuthor", new Author(101));
     assertEquals(101, author.getId());
     assertEquals(Section.NEWS, author.getFavouriteSection());
@@ -148,7 +148,7 @@
 
   @Test
   public void shouldSelectOneAuthorWithInlineParams() throws Exception {
-    Author author = (Author) manager.selectOne(
+    Author author = manager.selectOne(
         "domain.blog.mappers.AuthorMapper.selectAuthorWithInlineParams", new Author(101));
     assertEquals(101, author.getId());
   }
@@ -157,7 +157,7 @@
   public void shouldInsertAuthor() throws Exception {
     Author expected = new Author(500, "cbegin", "******", "cbegin@somewhere.com", "Something...", null);
     manager.insert("domain.blog.mappers.AuthorMapper.insertAuthor", expected);
-    Author actual = (Author) manager.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", new Author(500));
+    Author actual = manager.selectOne("domain.blog.mappers.AuthorMapper.selectAuthor", new Author(500));
     assertNotNull(actual);
     assertEquals(expected.getId(), actual.getId());
     assertEquals(expected.getUsername(), actual.getUsername());
@@ -182,7 +182,7 @@
 
   @Test
   public void shouldSelectBlogWithPostsAndAuthorUsingSubSelects() throws Exception {
-    Blog blog = (Blog) manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogWithPostsUsingSubSelect", 1);
+    Blog blog = manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogWithPostsUsingSubSelect", 1);
     assertEquals("Jim Business", blog.getTitle());
     assertEquals(2, blog.getPosts().size());
     assertEquals("Corn nuts", blog.getPosts().get(0).getSubject());
@@ -192,7 +192,7 @@
 
   @Test
   public void shouldSelectBlogWithPostsAndAuthorUsingJoin() throws Exception {
-    Blog blog = (Blog) manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
+    Blog blog = manager.selectOne("domain.blog.mappers.BlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
     assertEquals("Jim Business", blog.getTitle());
 
     final Author author = blog.getAuthor();
@@ -222,7 +222,7 @@
 
   @Test
   public void shouldSelectNestedBlogWithPostsAndAuthorUsingJoin() throws Exception {
-    Blog blog = (Blog) manager.selectOne("domain.blog.mappers.NestedBlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
+    Blog blog = manager.selectOne("domain.blog.mappers.NestedBlogMapper.selectBlogJoinedWithPostsAndAuthor", 1);
     assertEquals("Jim Business", blog.getTitle());
 
     final Author author = blog.getAuthor();
