diff --git a/src/com/google/javascript/jscomp/newtypes/JSType.java b/src/com/google/javascript/jscomp/newtypes/JSType.java
index 076c47b..bbc2f51 100644
--- a/src/com/google/javascript/jscomp/newtypes/JSType.java
+++ b/src/com/google/javascript/jscomp/newtypes/JSType.java
@@ -84,9 +84,9 @@
       this.objs = objs;
     }
     Preconditions.checkState(this.isValidType(),
-        "Cannot create type with bits <<<%s>>>, " +
+        "Cannot create type with bits <<<%X>>>, " +
         "objs <<<%s>>>, and typeVar <<<%s>>>",
-        Integer.toHexString(mask), objs, typeVar);
+        mask, objs, typeVar);
   }
 
   private JSType(int mask) {
diff --git a/src/com/google/javascript/jscomp/newtypes/JSType.java b/src/com/google/javascript/jscomp/newtypes/JSType.java
index 076c47b..bbc2f51 100644
--- a/src/com/google/javascript/jscomp/newtypes/JSType.java
+++ b/src/com/google/javascript/jscomp/newtypes/JSType.java
@@ -84,9 +84,9 @@
       this.objs = objs;
     }
     Preconditions.checkState(this.isValidType(),
-        "Cannot create type with bits <<<%s>>>, " +
+        "Cannot create type with bits <<<%X>>>, " +
         "objs <<<%s>>>, and typeVar <<<%s>>>",
-        Integer.toHexString(mask), objs, typeVar);
+        mask, objs, typeVar);
   }
 
   private JSType(int mask) {
