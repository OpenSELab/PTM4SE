diff --git a/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java b/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java
index 6ac916c..d1f8bb6 100644
--- a/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java
+++ b/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java
@@ -140,7 +140,7 @@
 
     @Override
     public ByteBuf duplicate() {
-        ByteBuf duplicate = new SlicedByteBuf(buffer, adjustment, length);
+        ByteBuf duplicate = buffer.slice(adjustment, length);
         duplicate.setIndex(readerIndex(), writerIndex());
         return duplicate;
     }
@@ -157,7 +157,8 @@
         if (length == 0) {
             return Unpooled.EMPTY_BUFFER;
         }
-        return new SlicedByteBuf(buffer, index + adjustment, length);
+        return buffer.slice(index + adjustment, length);
+        //new SlicedByteBuf(buffer, index + adjustment, length);
     }
 
     @Override
diff --git a/buffer/src/main/java/io/netty/buffer/SwappedByteBuf.java b/buffer/src/main/java/io/netty/buffer/SwappedByteBuf.java
index 9874e63..4539c9b 100644
--- a/buffer/src/main/java/io/netty/buffer/SwappedByteBuf.java
+++ b/buffer/src/main/java/io/netty/buffer/SwappedByteBuf.java
@@ -59,7 +59,7 @@
 
     @Override
     public ByteBuf unwrap() {
-        return buf;
+        return buf.unwrap();
     }
 
     @Override
diff --git a/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java b/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java
index 6ac916c..d1f8bb6 100644
--- a/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java
+++ b/buffer/src/main/java/io/netty/buffer/SlicedByteBuf.java
@@ -140,7 +140,7 @@
 
     @Override
     public ByteBuf duplicate() {
-        ByteBuf duplicate = new SlicedByteBuf(buffer, adjustment, length);
+        ByteBuf duplicate = buffer.slice(adjustment, length);
         duplicate.setIndex(readerIndex(), writerIndex());
         return duplicate;
     }
@@ -157,7 +157,8 @@
         if (length == 0) {
             return Unpooled.EMPTY_BUFFER;
         }
-        return new SlicedByteBuf(buffer, index + adjustment, length);
+        return buffer.slice(index + adjustment, length);
+        //new SlicedByteBuf(buffer, index + adjustment, length);
     }
 
     @Override
