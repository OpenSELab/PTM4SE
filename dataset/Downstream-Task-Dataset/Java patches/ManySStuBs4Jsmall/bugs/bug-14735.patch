diff --git a/guava/src/com/google/common/math/LongMath.java b/guava/src/com/google/common/math/LongMath.java
index 1ae5fb3..0305411 100644
--- a/guava/src/com/google/common/math/LongMath.java
+++ b/guava/src/com/google/common/math/LongMath.java
@@ -66,7 +66,7 @@
   @Beta
   public static long ceilingPowerOfTwo(long x) {
     checkPositive("x", x);
-    if (x > (1L << (Long.SIZE - 2))) {
+    if (x > MAX_SIGNED_POWER_OF_TWO) {
       throw new ArithmeticException("ceilingPowerOfTwo(" + x + ") is not representable as a long");
     }
     return 1L << -Long.numberOfLeadingZeros(x - 1);
diff --git a/guava/src/com/google/common/math/LongMath.java b/guava/src/com/google/common/math/LongMath.java
index 1ae5fb3..0305411 100644
--- a/guava/src/com/google/common/math/LongMath.java
+++ b/guava/src/com/google/common/math/LongMath.java
@@ -66,7 +66,7 @@
   @Beta
   public static long ceilingPowerOfTwo(long x) {
     checkPositive("x", x);
-    if (x > (1L << (Long.SIZE - 2))) {
+    if (x > MAX_SIGNED_POWER_OF_TWO) {
       throw new ArithmeticException("ceilingPowerOfTwo(" + x + ") is not representable as a long");
     }
     return 1L << -Long.numberOfLeadingZeros(x - 1);
