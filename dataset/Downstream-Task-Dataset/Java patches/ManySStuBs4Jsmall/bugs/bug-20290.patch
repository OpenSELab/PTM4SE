diff --git a/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java b/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java
index f78c51a..eb34ea8 100644
--- a/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java
+++ b/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java
@@ -73,7 +73,7 @@
 		name = name.trim();
 		ConceptMapType duplicate = Context.getConceptService().getConceptMapTypeByName(name);
 		if (duplicate != null) {
-			if (!OpenmrsUtil.nullSafeEquals(duplicate.getId(), conceptMapType.getId())) {
+			if (!OpenmrsUtil.nullSafeEquals(duplicate.getUuid(), conceptMapType.getUuid())) {
 				errors.rejectValue("name", "ConceptMapType.duplicate.name", "Duplicate concept map type name: " + name);
 			}
 		}
diff --git a/api/src/main/java/org/openmrs/validator/ConceptValidator.java b/api/src/main/java/org/openmrs/validator/ConceptValidator.java
index 8aa2da4..4002573 100644
--- a/api/src/main/java/org/openmrs/validator/ConceptValidator.java
+++ b/api/src/main/java/org/openmrs/validator/ConceptValidator.java
@@ -177,8 +177,8 @@
 									continue;
 								
 								//skip same
-								if (conceptToValidate.getConceptId() != null
-								        && conceptToValidate.getConceptId().equals(concept.getConceptId()))
+								if (conceptToValidate.getUuid() != null
+								        && conceptToValidate.getUuid().equals(concept.getUuid()))
 									continue;
 								
 								//should be a unique name amongst all preferred and fully specified names in its locale system wide
diff --git a/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java b/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java
index fa91205..9bb6eb4 100644
--- a/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java
+++ b/api/src/main/java/org/openmrs/validator/PatientProgramValidator.java
@@ -140,7 +140,7 @@
 					if (OpenmrsUtil.compareWithNullAsLatest(patientState.getEndDate(), patientState.getStartDate()) < 0) {
 						errors.rejectValue("states", "PatientState.error.endDateCannotBeBeforeStartDate");
 						return;
-					} else if (statesAndStartDates.contains(patientState.getState().getId() + ""
+					} else if (statesAndStartDates.contains(patientState.getState().getUuid() + ""
 					        + patientState.getStartDate())) {
 						// we already have a patient state with the same work flow state and start date
 						errors.rejectValue("states", "PatientState.error.duplicatePatientStates");
@@ -185,7 +185,7 @@
 						}
 					}
 					
-					statesAndStartDates.add(patientState.getState().getId() + "" + patientState.getStartDate());
+					statesAndStartDates.add(patientState.getState().getUuid() + "" + patientState.getStartDate());
 				}
 			}
 		}
diff --git a/api/src/main/java/org/openmrs/validator/ProgramValidator.java b/api/src/main/java/org/openmrs/validator/ProgramValidator.java
index 7a551fa..5d1b9b2 100644
--- a/api/src/main/java/org/openmrs/validator/ProgramValidator.java
+++ b/api/src/main/java/org/openmrs/validator/ProgramValidator.java
@@ -63,7 +63,7 @@
 			ValidationUtils.rejectIfEmptyOrWhitespace(errors, "description", "error.description.required");
 			List<Program> programs = Context.getProgramWorkflowService().getAllPrograms(false);
 			for (Program program : programs) {
-				if (program.getName().equals(p.getName()) && !program.getProgramId().equals(p.getProgramId())) {
+				if (program.getName().equals(p.getName()) && !program.getUuid().equals(p.getUuid())) {
 					errors.rejectValue("name", "general.error.nameAlreadyInUse");
 					break;
 				} else {
diff --git a/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java b/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java
index f78c51a..eb34ea8 100644
--- a/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java
+++ b/api/src/main/java/org/openmrs/validator/ConceptMapTypeValidator.java
@@ -73,7 +73,7 @@
 		name = name.trim();
 		ConceptMapType duplicate = Context.getConceptService().getConceptMapTypeByName(name);
 		if (duplicate != null) {
-			if (!OpenmrsUtil.nullSafeEquals(duplicate.getId(), conceptMapType.getId())) {
+			if (!OpenmrsUtil.nullSafeEquals(duplicate.getUuid(), conceptMapType.getUuid())) {
 				errors.rejectValue("name", "ConceptMapType.duplicate.name", "Duplicate concept map type name: " + name);
 			}
 		}
