diff --git a/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java b/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java
index 8941be4..8b7fefb 100644
--- a/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java
+++ b/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java
@@ -173,7 +173,7 @@
         ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Never)).size());
     Assert.assertTrue(fsMaster.getFileId(new AlluxioURI("/xyz")) != IdUtils.INVALID_FILE_ID);
     FileInfo fsMasterInfo = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/xyz")));
-    Assert.assertEquals(status, new URIStatus(fsMasterInfo));
+    Assert.assertEquals(status, new URIStatus(fsMasterInfo.setUfsId(status.getUfsId())));
     registry.stop();
   }
 
@@ -315,7 +315,8 @@
         ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Never)).size());
     long fileId = fsMaster.getFileId(new AlluxioURI("/xyz"));
     Assert.assertTrue(fileId != IdUtils.INVALID_FILE_ID);
-    Assert.assertEquals(status, new URIStatus(fsMaster.getFileInfo(fileId)));
+    Assert.assertEquals(
+        status, new URIStatus(fsMaster.getFileInfo(fileId).setUfsId(status.getUfsId())));
     registry.stop();
   }
 
@@ -354,15 +355,15 @@
     FileSystemMaster fsMaster = registry.get(FileSystemMaster.class);
 
     FileInfo info = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/myFolder")));
-    Assert.assertEquals(directory, new URIStatus(info));
+    Assert.assertEquals(directory, new URIStatus(info.setUfsId(directory.getUfsId())));
     Assert.assertTrue(info.isPinned());
 
     info = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/myFolder/file0")));
-    Assert.assertEquals(file0, new URIStatus(info));
+    Assert.assertEquals(file0, new URIStatus(info.setUfsId(file0.getUfsId())));
     Assert.assertFalse(info.isPinned());
 
     info = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/myFolder/file1")));
-    Assert.assertEquals(file1, new URIStatus(info));
+    Assert.assertEquals(file1, new URIStatus(info.setUfsId(file1.getUfsId())));
     Assert.assertTrue(info.isPinned());
 
     registry.stop();
@@ -391,7 +392,8 @@
         ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Never)).size());
     long fileId = fsMaster.getFileId(new AlluxioURI("/xyz"));
     Assert.assertTrue(fileId != IdUtils.INVALID_FILE_ID);
-    Assert.assertEquals(status, new URIStatus(fsMaster.getFileInfo(fileId)));
+    Assert.assertEquals(
+        status, new URIStatus(fsMaster.getFileInfo(fileId).setUfsId(status.getUfsId())));
     registry.stop();
   }
 
@@ -431,7 +433,7 @@
       Assert.assertEquals(
           directoryStatus.getValue(),
           new URIStatus(fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI(directoryStatus
-              .getKey())))));
+              .getKey()))).setUfsId(directoryStatus.getValue().getUfsId())));
     }
     registry.stop();
   }
@@ -597,7 +599,7 @@
     FileSystemMaster fsMaster = registry.get(FileSystemMaster.class);
     AuthenticatedClientUser.set(user);
     FileInfo info = fsMaster.getFileInfo(new AlluxioURI("/file"));
-    Assert.assertEquals(status, new URIStatus(info));
+    Assert.assertEquals(status, new URIStatus(info.setUfsId(status.getUfsId())));
     registry.stop();
   }
 
diff --git a/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java b/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java
index 8941be4..8b7fefb 100644
--- a/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java
+++ b/tests/src/test/java/alluxio/master/journal/ufs/UfsJournalIntegrationTest.java
@@ -173,7 +173,7 @@
         ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Never)).size());
     Assert.assertTrue(fsMaster.getFileId(new AlluxioURI("/xyz")) != IdUtils.INVALID_FILE_ID);
     FileInfo fsMasterInfo = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/xyz")));
-    Assert.assertEquals(status, new URIStatus(fsMasterInfo));
+    Assert.assertEquals(status, new URIStatus(fsMasterInfo.setUfsId(status.getUfsId())));
     registry.stop();
   }
 
@@ -315,7 +315,8 @@
         ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Never)).size());
     long fileId = fsMaster.getFileId(new AlluxioURI("/xyz"));
     Assert.assertTrue(fileId != IdUtils.INVALID_FILE_ID);
-    Assert.assertEquals(status, new URIStatus(fsMaster.getFileInfo(fileId)));
+    Assert.assertEquals(
+        status, new URIStatus(fsMaster.getFileInfo(fileId).setUfsId(status.getUfsId())));
     registry.stop();
   }
 
@@ -354,15 +355,15 @@
     FileSystemMaster fsMaster = registry.get(FileSystemMaster.class);
 
     FileInfo info = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/myFolder")));
-    Assert.assertEquals(directory, new URIStatus(info));
+    Assert.assertEquals(directory, new URIStatus(info.setUfsId(directory.getUfsId())));
     Assert.assertTrue(info.isPinned());
 
     info = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/myFolder/file0")));
-    Assert.assertEquals(file0, new URIStatus(info));
+    Assert.assertEquals(file0, new URIStatus(info.setUfsId(file0.getUfsId())));
     Assert.assertFalse(info.isPinned());
 
     info = fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI("/myFolder/file1")));
-    Assert.assertEquals(file1, new URIStatus(info));
+    Assert.assertEquals(file1, new URIStatus(info.setUfsId(file1.getUfsId())));
     Assert.assertTrue(info.isPinned());
 
     registry.stop();
@@ -391,7 +392,8 @@
         ListStatusOptions.defaults().setLoadMetadataType(LoadMetadataType.Never)).size());
     long fileId = fsMaster.getFileId(new AlluxioURI("/xyz"));
     Assert.assertTrue(fileId != IdUtils.INVALID_FILE_ID);
-    Assert.assertEquals(status, new URIStatus(fsMaster.getFileInfo(fileId)));
+    Assert.assertEquals(
+        status, new URIStatus(fsMaster.getFileInfo(fileId).setUfsId(status.getUfsId())));
     registry.stop();
   }
 
@@ -431,7 +433,7 @@
       Assert.assertEquals(
           directoryStatus.getValue(),
           new URIStatus(fsMaster.getFileInfo(fsMaster.getFileId(new AlluxioURI(directoryStatus
-              .getKey())))));
+              .getKey()))).setUfsId(directoryStatus.getValue().getUfsId())));
     }
     registry.stop();
   }
@@ -597,7 +599,7 @@
     FileSystemMaster fsMaster = registry.get(FileSystemMaster.class);
     AuthenticatedClientUser.set(user);
     FileInfo info = fsMaster.getFileInfo(new AlluxioURI("/file"));
-    Assert.assertEquals(status, new URIStatus(info));
+    Assert.assertEquals(status, new URIStatus(info.setUfsId(status.getUfsId())));
     registry.stop();
   }
 
