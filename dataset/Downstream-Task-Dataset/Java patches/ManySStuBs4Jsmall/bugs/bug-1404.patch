diff --git a/common/src/main/java/tachyon/worker/DataServerMessage.java b/common/src/main/java/tachyon/worker/DataServerMessage.java
index 502a7b8..d469656 100644
--- a/common/src/main/java/tachyon/worker/DataServerMessage.java
+++ b/common/src/main/java/tachyon/worker/DataServerMessage.java
@@ -75,7 +75,7 @@
    */
   public static DataServerMessage createBlockRequestMessage(long blockId, long offset, long len) {
     DataServerMessage ret = new DataServerMessage(true, DATA_SERVER_REQUEST_MESSAGE);
-    ret.mRPCMessageType = RPCMessage.Type.RPC_BLOCK_REQUEST.getId();
+    ret.mRPCMessageType = RPCMessage.Type.RPC_BLOCK_REQUEST;
 
     ret.mHeader = ByteBuffer.allocate(HEADER_LENGTH);
     ret.mBlockId = blockId;
@@ -119,7 +119,7 @@
   public static DataServerMessage createBlockResponseMessage(boolean toSend, long blockId,
       long offset, long len, ByteBuffer data) {
     DataServerMessage ret = new DataServerMessage(toSend, DATA_SERVER_RESPONSE_MESSAGE);
-    ret.mRPCMessageType = RPCMessage.Type.RPC_BLOCK_RESPONSE.getId();
+    ret.mRPCMessageType = RPCMessage.Type.RPC_BLOCK_RESPONSE;
 
     if (toSend) {
       if (data != null) {
@@ -164,9 +164,10 @@
 
   private ByteBuffer mData = null;
 
-  // This is the new message type. This will replace the old type when the client is converted
-  // to Netty.
-  private int mRPCMessageType;
+  // This is the new message type. For now, DataServerMessage must manually send this type on the
+  // network. When the client is converted to to use Netty, this DataServerMessage class will be
+  // removed.
+  private RPCMessage.Type mRPCMessageType;
 
   /**
    * New a DataServerMessage. Notice that it's not ready.
@@ -214,7 +215,7 @@
     } else {
       mHeader.putLong(HEADER_LENGTH + mLength); // frame length
     }
-    mHeader.putInt(mRPCMessageType); // RPC message type
+    mHeader.putInt(mRPCMessageType.getId()); // RPC message type
 
     mHeader.putShort(mMessageType);
     mHeader.putLong(mBlockId);
