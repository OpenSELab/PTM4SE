diff --git a/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java b/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java
index 152804d..f13595c 100644
--- a/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java
+++ b/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java
@@ -61,12 +61,14 @@
         return false;
     }
 
-    private HazelcastSerialClassRunner getSerialClassRunner(Class<?> testClass, Object[] parameters, String testName)
+    // needs to be protected for Hazelcast Enterprise HazelcastParametersRunnerFactory
+    protected HazelcastSerialClassRunner getSerialClassRunner(Class<?> testClass, Object[] parameters, String testName)
             throws InitializationError {
         return new HazelcastSerialClassRunner(testClass, parameters, testName);
     }
 
-    private HazelcastParallelClassRunner getParallelClassRunner(Class<?> testClass, Object[] parameters, String testName)
+    // needs to be protected for Hazelcast Enterprise HazelcastParametersRunnerFactory
+    protected HazelcastParallelClassRunner getParallelClassRunner(Class<?> testClass, Object[] parameters, String testName)
             throws InitializationError {
         return new HazelcastParallelClassRunner(testClass, parameters, testName);
     }
diff --git a/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java b/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java
index 152804d..f13595c 100644
--- a/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java
+++ b/hazelcast/src/test/java/com/hazelcast/test/HazelcastParametersRunnerFactory.java
@@ -61,12 +61,14 @@
         return false;
     }
 
-    private HazelcastSerialClassRunner getSerialClassRunner(Class<?> testClass, Object[] parameters, String testName)
+    // needs to be protected for Hazelcast Enterprise HazelcastParametersRunnerFactory
+    protected HazelcastSerialClassRunner getSerialClassRunner(Class<?> testClass, Object[] parameters, String testName)
             throws InitializationError {
         return new HazelcastSerialClassRunner(testClass, parameters, testName);
     }
 
-    private HazelcastParallelClassRunner getParallelClassRunner(Class<?> testClass, Object[] parameters, String testName)
+    // needs to be protected for Hazelcast Enterprise HazelcastParametersRunnerFactory
+    protected HazelcastParallelClassRunner getParallelClassRunner(Class<?> testClass, Object[] parameters, String testName)
             throws InitializationError {
         return new HazelcastParallelClassRunner(testClass, parameters, testName);
     }
