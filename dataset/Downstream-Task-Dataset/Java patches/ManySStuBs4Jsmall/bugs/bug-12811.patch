diff --git a/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java b/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java
index 1de055a..f2326e3 100644
--- a/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java
+++ b/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java
@@ -82,7 +82,7 @@
     }
 
     private class Visitor
-            extends PlanVisitor<Void, PlanNodeCost>
+            extends PlanVisitor<PlanNodeCost, Void>
     {
         private final Session session;
         private final Map<PlanNodeId, PlanNodeCost> costs;
diff --git a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/PhasedExecutionSchedule.java b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/PhasedExecutionSchedule.java
index ebc6334..3750de9 100644
--- a/presto-main/src/main/java/com/facebook/presto/execution/scheduler/PhasedExecutionSchedule.java
+++ b/presto-main/src/main/java/com/facebook/presto/execution/scheduler/PhasedExecutionSchedule.java
@@ -169,7 +169,7 @@
     }
 
     private static class Visitor
-            extends PlanVisitor<PlanFragmentId, Set<PlanFragmentId>>
+            extends PlanVisitor<Set<PlanFragmentId>, PlanFragmentId>
     {
         private final Map<PlanFragmentId, PlanFragment> fragments;
         private final DirectedGraph<PlanFragmentId, DefaultEdge> graph;
diff --git a/presto-main/src/main/java/com/facebook/presto/operator/project/PageFieldsToInputParametersRewriter.java b/presto-main/src/main/java/com/facebook/presto/operator/project/PageFieldsToInputParametersRewriter.java
index 9d109ef..8b7da04 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/project/PageFieldsToInputParametersRewriter.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/project/PageFieldsToInputParametersRewriter.java
@@ -47,7 +47,7 @@
     }
 
     private static class Visitor
-            implements RowExpressionVisitor<Void, RowExpression>
+            implements RowExpressionVisitor<RowExpression, Void>
     {
         private final Map<Integer, Integer> fieldToParameter = new HashMap<>();
         private final List<Integer> inputChannels = new ArrayList<>();
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/BytecodeExpressionVisitor.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/BytecodeExpressionVisitor.java
index 1297197..94b7d65 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/BytecodeExpressionVisitor.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/BytecodeExpressionVisitor.java
@@ -46,18 +46,18 @@
 import static com.google.common.base.Preconditions.checkState;
 
 public class BytecodeExpressionVisitor
-        implements RowExpressionVisitor<Scope, BytecodeNode>
+        implements RowExpressionVisitor<BytecodeNode, Scope>
 {
     private final CallSiteBinder callSiteBinder;
     private final CachedInstanceBinder cachedInstanceBinder;
-    private final RowExpressionVisitor<Scope, BytecodeNode> fieldReferenceCompiler;
+    private final RowExpressionVisitor<BytecodeNode, Scope> fieldReferenceCompiler;
     private final FunctionRegistry registry;
     private final PreGeneratedExpressions preGeneratedExpressions;
 
     public BytecodeExpressionVisitor(
             CallSiteBinder callSiteBinder,
             CachedInstanceBinder cachedInstanceBinder,
-            RowExpressionVisitor<Scope, BytecodeNode> fieldReferenceCompiler,
+            RowExpressionVisitor<BytecodeNode, Scope> fieldReferenceCompiler,
             FunctionRegistry registry,
             PreGeneratedExpressions preGeneratedExpressions)
     {
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/CursorProcessorCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/CursorProcessorCompiler.java
index 1bb0827..38dcd7c 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/CursorProcessorCompiler.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/CursorProcessorCompiler.java
@@ -336,9 +336,9 @@
                 .ret();
     }
 
-    private static RowExpressionVisitor<Scope, BytecodeNode> fieldReferenceCompiler(Variable cursorVariable)
+    private static RowExpressionVisitor<BytecodeNode, Scope> fieldReferenceCompiler(Variable cursorVariable)
     {
-        return new RowExpressionVisitor<Scope, BytecodeNode>()
+        return new RowExpressionVisitor<BytecodeNode, Scope>()
         {
             @Override
             public BytecodeNode visitInputReference(InputReferenceExpression node, Scope scope)
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/InputReferenceCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/InputReferenceCompiler.java
index 8ee458b..6abab87 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/InputReferenceCompiler.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/InputReferenceCompiler.java
@@ -34,7 +34,7 @@
 import static java.util.Objects.requireNonNull;
 
 class InputReferenceCompiler
-        implements RowExpressionVisitor<Scope, BytecodeNode>
+        implements RowExpressionVisitor<BytecodeNode, Scope>
 {
     private final BiFunction<Scope, Integer, BytecodeExpression> blockResolver;
     private final BiFunction<Scope, Integer, BytecodeExpression> positionResolver;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinFilterFunctionCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinFilterFunctionCompiler.java
index 8c4545e..f5250fd 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinFilterFunctionCompiler.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/JoinFilterFunctionCompiler.java
@@ -318,7 +318,7 @@
         }
     }
 
-    private static RowExpressionVisitor<Scope, BytecodeNode> fieldReferenceCompiler(
+    private static RowExpressionVisitor<BytecodeNode, Scope> fieldReferenceCompiler(
             final CallSiteBinder callSiteBinder,
             final Variable leftPosition,
             final Variable leftBlocks,
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaAndTryExpressionExtractor.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaAndTryExpressionExtractor.java
index 0bf1ea3..a8437a1 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaAndTryExpressionExtractor.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaAndTryExpressionExtractor.java
@@ -44,7 +44,7 @@
     }
 
     private static class Visitor
-            implements RowExpressionVisitor<Context, Void>
+            implements RowExpressionVisitor<Void, Context>
     {
         private final ImmutableList.Builder<RowExpression> lambdaAndTryExpressions = ImmutableList.builder();
 
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java
index 42f7d92..5282fb4 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/LambdaBytecodeGenerator.java
@@ -143,9 +143,9 @@
         return new LambdaExpressionField(staticField, instanceField);
     }
 
-    private static RowExpressionVisitor<Scope, BytecodeNode> variableReferenceCompiler(Map<String, ParameterAndType> parameterMap)
+    private static RowExpressionVisitor<BytecodeNode, Scope> variableReferenceCompiler(Map<String, ParameterAndType> parameterMap)
     {
-        return new RowExpressionVisitor<Scope, BytecodeNode>()
+        return new RowExpressionVisitor<BytecodeNode, Scope>()
         {
             @Override
             public BytecodeNode visitInputReference(InputReferenceExpression node, Scope scope)
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java b/presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java
index e8a83de..b960962 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/gen/PageFunctionCompiler.java
@@ -580,7 +580,7 @@
         return parameters.build();
     }
 
-    private static RowExpressionVisitor<Scope, BytecodeNode> fieldReferenceCompiler(CallSiteBinder callSiteBinder)
+    private static RowExpressionVisitor<BytecodeNode, Scope> fieldReferenceCompiler(CallSiteBinder callSiteBinder)
     {
         return new InputReferenceCompiler(
                 (scope, field) -> scope.getVariable("block_" + field),
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/DistributedExecutionPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/DistributedExecutionPlanner.java
index f63c125..36bb5c4 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/DistributedExecutionPlanner.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/DistributedExecutionPlanner.java
@@ -117,7 +117,7 @@
     }
 
     private final class Visitor
-            extends PlanVisitor<Void, Map<PlanNodeId, SplitSource>>
+            extends PlanVisitor<Map<PlanNodeId, SplitSource>, Void>
     {
         private final Session session;
         private final List<SplitSource> splitSources = new ArrayList<>();
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/EffectivePredicateExtractor.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/EffectivePredicateExtractor.java
index bb91cc8..871d88f 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/EffectivePredicateExtractor.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/EffectivePredicateExtractor.java
@@ -67,7 +67,7 @@
  * Note: non-deterministic predicates can not be pulled up (so they will be ignored)
  */
 public class EffectivePredicateExtractor
-        extends PlanVisitor<Void, Expression>
+        extends PlanVisitor<Expression, Void>
 {
     public static Expression extract(PlanNode node, Map<Symbol, Type> symbolTypes)
     {
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/FragmentTableScanCounter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/FragmentTableScanCounter.java
index 9bbaf69..f6bf994 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/FragmentTableScanCounter.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/FragmentTableScanCounter.java
@@ -49,7 +49,7 @@
     }
 
     private static class Visitor
-            extends PlanVisitor<Void, Integer>
+            extends PlanVisitor<Integer, Void>
     {
         @Override
         public Integer visitTableScan(TableScanNode node, Void context)
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/LocalExecutionPlanner.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/LocalExecutionPlanner.java
index 6d5bb62..4923e94 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/LocalExecutionPlanner.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/LocalExecutionPlanner.java
@@ -574,7 +574,7 @@
     }
 
     private class Visitor
-            extends PlanVisitor<LocalExecutionPlanContext, PhysicalOperation>
+            extends PlanVisitor<PhysicalOperation, LocalExecutionPlanContext>
     {
         private final Session session;
 
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragmenter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragmenter.java
index 98c809b..62afb0c 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragmenter.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/PlanFragmenter.java
@@ -363,7 +363,7 @@
     }
 
     private static class SchedulingOrderVisitor
-            extends PlanVisitor<Consumer<PlanNodeId>, Void>
+            extends PlanVisitor<Void, Consumer<PlanNodeId>>
     {
         public List<PlanNodeId> getSchedulingOrder(PlanNode node)
         {
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/SimplePlanVisitor.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/SimplePlanVisitor.java
index 0ef3252..2838354 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/SimplePlanVisitor.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/SimplePlanVisitor.java
@@ -17,7 +17,7 @@
 import com.facebook.presto.sql.planner.plan.PlanVisitor;
 
 public class SimplePlanVisitor<C>
-        extends PlanVisitor<C, Void>
+        extends PlanVisitor<Void, C>
 {
     @Override
     protected Void visitPlan(PlanNode node, C context)
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/GroupReference.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/GroupReference.java
index e07502c..79a8ca7 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/GroupReference.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/GroupReference.java
@@ -48,7 +48,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitGroupReference(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java
index 8d00c58..d887fe5 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddExchanges.java
@@ -181,7 +181,7 @@
     }
 
     private class Rewriter
-            extends PlanVisitor<Context, PlanWithProperties>
+            extends PlanVisitor<PlanWithProperties, Context>
     {
         private final PlanNodeIdAllocator idAllocator;
         private final SymbolAllocator symbolAllocator;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java
index e8f5d63..7dc8e3e 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/AddLocalExchanges.java
@@ -104,7 +104,7 @@
     }
 
     private class Rewriter
-            extends PlanVisitor<StreamPreferredProperties, PlanWithProperties>
+            extends PlanVisitor<PlanWithProperties, StreamPreferredProperties>
     {
         private final PlanNodeIdAllocator idAllocator;
         private final Session session;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/DistinctOutputQueryUtil.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/DistinctOutputQueryUtil.java
index 98324d2..41c1bef 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/DistinctOutputQueryUtil.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/DistinctOutputQueryUtil.java
@@ -46,7 +46,7 @@
     }
 
     private static final class IsDistinctPlanVisitor
-            extends PlanVisitor<Void, Boolean>
+            extends PlanVisitor<Boolean, Void>
     {
         /*
         With the iterative optimizer, plan nodes are replaced with
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ExpressionEquivalence.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ExpressionEquivalence.java
index c699db0..f0cb82d 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ExpressionEquivalence.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ExpressionEquivalence.java
@@ -113,7 +113,7 @@
     }
 
     private static class CanonicalizationVisitor
-            implements RowExpressionVisitor<Void, RowExpression>
+            implements RowExpressionVisitor<RowExpression, Void>
     {
         @Override
         public RowExpression visitCall(CallExpression call, Void context)
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java
index 9653610..04ab22e 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/HashGenerationOptimizer.java
@@ -112,7 +112,7 @@
     }
 
     private static class Rewriter
-            extends PlanVisitor<HashComputationSet, PlanWithProperties>
+            extends PlanVisitor<PlanWithProperties, HashComputationSet>
     {
         private final PlanNodeIdAllocator idAllocator;
         private final SymbolAllocator symbolAllocator;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/IndexJoinOptimizer.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/IndexJoinOptimizer.java
index ddaf878..ad0951b 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/IndexJoinOptimizer.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/IndexJoinOptimizer.java
@@ -469,7 +469,7 @@
         }
 
         private static class Visitor
-                extends PlanVisitor<Set<Symbol>, Map<Symbol, Symbol>>
+                extends PlanVisitor<Map<Symbol, Symbol>, Set<Symbol>>
         {
             @Override
             protected Map<Symbol, Symbol> visitPlan(PlanNode node, Set<Symbol> lookupSymbols)
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java
index f8e9787..288a2fd 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/PropertyDerivations.java
@@ -135,7 +135,7 @@
     }
 
     private static class Visitor
-            extends PlanVisitor<List<ActualProperties>, ActualProperties>
+            extends PlanVisitor<ActualProperties, List<ActualProperties>>
     {
         private final Metadata metadata;
         private final Session session;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ScalarQueryUtil.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ScalarQueryUtil.java
index 08395bf..3bb23f3 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ScalarQueryUtil.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/ScalarQueryUtil.java
@@ -46,7 +46,7 @@
     }
 
     private static final class IsScalarPlanVisitor
-            extends PlanVisitor<Void, Boolean>
+            extends PlanVisitor<Boolean, Void>
     {
         private final Optional<Lookup> lookup;
 
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/StreamPropertyDerivations.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/StreamPropertyDerivations.java
index 8db0841..d509cf4 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/StreamPropertyDerivations.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/StreamPropertyDerivations.java
@@ -135,7 +135,7 @@
     }
 
     private static class Visitor
-            extends PlanVisitor<List<StreamProperties>, StreamProperties>
+            extends PlanVisitor<StreamProperties, List<StreamProperties>>
     {
         private final Metadata metadata;
         private final Session session;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/joins/JoinGraph.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/joins/JoinGraph.java
index 4f8e810..c1f9416 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/joins/JoinGraph.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/optimizations/joins/JoinGraph.java
@@ -217,7 +217,7 @@
     }
 
     private static class Builder
-            extends PlanVisitor<Context, JoinGraph>
+            extends PlanVisitor<JoinGraph, Context>
     {
         // TODO When com.facebook.presto.sql.planner.optimizations.EliminateCrossJoins is removed, remove 'shallow' flag
         private final boolean shallow;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AggregationNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AggregationNode.java
index b20072d..80ca3e8 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AggregationNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AggregationNode.java
@@ -273,7 +273,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitAggregation(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ApplyNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ApplyNode.java
index 65a3b39..d1368c5 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ApplyNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ApplyNode.java
@@ -140,7 +140,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitApply(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AssignUniqueId.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AssignUniqueId.java
index a81b462..38bc7e1 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AssignUniqueId.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/AssignUniqueId.java
@@ -69,7 +69,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitAssignUniqueId(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DeleteNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DeleteNode.java
index 347a1c5..6ef6a18 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DeleteNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DeleteNode.java
@@ -83,7 +83,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitDelete(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DistinctLimitNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DistinctLimitNode.java
index 1a2920d..d29c5c4 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DistinctLimitNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/DistinctLimitNode.java
@@ -102,7 +102,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitDistinctLimit(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/EnforceSingleRowNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/EnforceSingleRowNode.java
index 3f13733..d17e5c8 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/EnforceSingleRowNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/EnforceSingleRowNode.java
@@ -60,7 +60,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitEnforceSingleRow(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExceptNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExceptNode.java
index b849fe1..962a422 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExceptNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExceptNode.java
@@ -35,7 +35,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitExcept(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java
index 52a6744..0ce2865 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExchangeNode.java
@@ -190,7 +190,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitExchange(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExplainAnalyzeNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExplainAnalyzeNode.java
index 5911112..5d5da31 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExplainAnalyzeNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ExplainAnalyzeNode.java
@@ -68,7 +68,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitExplainAnalyze(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/FilterNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/FilterNode.java
index 969f7f6..b1773f1 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/FilterNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/FilterNode.java
@@ -67,7 +67,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitFilter(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/GroupIdNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/GroupIdNode.java
index e7af74e..b90058b 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/GroupIdNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/GroupIdNode.java
@@ -117,7 +117,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitGroupId(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexJoinNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexJoinNode.java
index 956216d..b20d8e2 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexJoinNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexJoinNode.java
@@ -126,7 +126,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitIndexJoin(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexSourceNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexSourceNode.java
index 4fd03bd..e1c7eed 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexSourceNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IndexSourceNode.java
@@ -119,7 +119,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitIndexSource(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IntersectNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IntersectNode.java
index 408cd41..a9ee23f 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IntersectNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/IntersectNode.java
@@ -37,7 +37,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitIntersect(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/JoinNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/JoinNode.java
index b879b9e..96080a2 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/JoinNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/JoinNode.java
@@ -207,7 +207,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitJoin(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/LimitNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/LimitNode.java
index 22e9446..feb87a8 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/LimitNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/LimitNode.java
@@ -82,7 +82,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitLimit(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MarkDistinctNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MarkDistinctNode.java
index 66a8d49..1dbfc97 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MarkDistinctNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MarkDistinctNode.java
@@ -90,7 +90,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitMarkDistinct(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MetadataDeleteNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MetadataDeleteNode.java
index ecdb712..9c86052 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MetadataDeleteNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/MetadataDeleteNode.java
@@ -79,7 +79,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitMetadataDelete(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/OutputNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/OutputNode.java
index 8eb08dd..fc368cc 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/OutputNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/OutputNode.java
@@ -77,7 +77,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitOutput(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanNode.java
index 22a1201..0ee1008 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanNode.java
@@ -83,7 +83,7 @@
 
     public abstract PlanNode replaceChildren(List<PlanNode> newChildren);
 
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitPlan(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanRewriter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanRewriter.java
index 353e597..4668542 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanRewriter.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanRewriter.java
@@ -23,7 +23,7 @@
 import static java.util.Objects.requireNonNull;
 
 public abstract class PlanRewriter<C, P>
-        extends PlanVisitor<PlanRewriter.RewriteContext<C, P>, PlanRewriter.Result<P>>
+        extends PlanVisitor<PlanRewriter.Result<P>, PlanRewriter.RewriteContext<C, P>>
 {
     public static <C, P> Result<P> rewriteWith(PlanRewriter<C, P> rewriter, PlanNode node)
     {
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanVisitor.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanVisitor.java
index c82e751..236414e 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanVisitor.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/PlanVisitor.java
@@ -15,7 +15,7 @@
 
 import com.facebook.presto.sql.planner.iterative.GroupReference;
 
-public abstract class PlanVisitor<C, R>
+public abstract class PlanVisitor<R, C>
 {
     protected abstract R visitPlan(PlanNode node, C context);
 
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ProjectNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ProjectNode.java
index 2da31a9..9d3d763 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ProjectNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ProjectNode.java
@@ -87,7 +87,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitProject(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RemoteSourceNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RemoteSourceNode.java
index 97751f0..b4048a6 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RemoteSourceNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RemoteSourceNode.java
@@ -71,7 +71,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitRemoteSource(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RowNumberNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RowNumberNode.java
index 754c52d..f720d17 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RowNumberNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/RowNumberNode.java
@@ -104,7 +104,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitRowNumber(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SampleNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SampleNode.java
index 2e7b126..b113212 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SampleNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SampleNode.java
@@ -101,7 +101,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitSample(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SemiJoinNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SemiJoinNode.java
index 70e68d7..36cdc9a 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SemiJoinNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SemiJoinNode.java
@@ -134,7 +134,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitSemiJoin(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SimplePlanRewriter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SimplePlanRewriter.java
index 1f01b4c..8ee1972 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SimplePlanRewriter.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SimplePlanRewriter.java
@@ -20,7 +20,7 @@
 import static com.google.common.collect.ImmutableList.toImmutableList;
 
 public abstract class SimplePlanRewriter<C>
-        extends PlanVisitor<SimplePlanRewriter.RewriteContext<C>, PlanNode>
+        extends PlanVisitor<PlanNode, SimplePlanRewriter.RewriteContext<C>>
 {
     public static <C> PlanNode rewriteWith(SimplePlanRewriter<C> rewriter, PlanNode node)
     {
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SortNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SortNode.java
index 62b63e5..db7ba03 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SortNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/SortNode.java
@@ -83,7 +83,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitSort(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableFinishNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableFinishNode.java
index 3eee686..86d4bb2 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableFinishNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableFinishNode.java
@@ -76,7 +76,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitTableFinish(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableScanNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableScanNode.java
index 387711f..95d0f08 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableScanNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableScanNode.java
@@ -130,7 +130,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitTableScan(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableWriterNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableWriterNode.java
index d3cb313..83c1c2f 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableWriterNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TableWriterNode.java
@@ -115,7 +115,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitTableWriter(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNNode.java
index 07b0e87..b83d0f6 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNNode.java
@@ -114,7 +114,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitTopN(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNRowNumberNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNRowNumberNode.java
index 9f3bfeb..bc672ca 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNRowNumberNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/TopNRowNumberNode.java
@@ -135,7 +135,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitTopNRowNumber(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnionNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnionNode.java
index d04a9cc..ba4e9c4 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnionNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnionNode.java
@@ -37,7 +37,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitUnion(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnnestNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnnestNode.java
index afe7686..ed1f6e9 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnnestNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/UnnestNode.java
@@ -101,7 +101,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitUnnest(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ValuesNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ValuesNode.java
index 6c3cb64..7977579 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ValuesNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/ValuesNode.java
@@ -67,7 +67,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitValues(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/WindowNode.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/WindowNode.java
index e22dadd..137a4e6 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/WindowNode.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/plan/WindowNode.java
@@ -154,7 +154,7 @@
     }
 
     @Override
-    public <C, R> R accept(PlanVisitor<C, R> visitor, C context)
+    public <R, C> R accept(PlanVisitor<R, C> visitor, C context)
     {
         return visitor.visitWindow(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java
index 1d04e90..5347134 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/planPrinter/PlanPrinter.java
@@ -448,7 +448,7 @@
     }
 
     private class Visitor
-            extends PlanVisitor<Integer, Void>
+            extends PlanVisitor<Void, Integer>
     {
         private final Map<Symbol, Type> types;
         private final Map<PlanNodeId, PlanNodeCost> costs;
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/ValidateDependenciesChecker.java b/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/ValidateDependenciesChecker.java
index 64b4525..0f3bf16 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/ValidateDependenciesChecker.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/planner/sanity/ValidateDependenciesChecker.java
@@ -90,7 +90,7 @@
     }
 
     private static class Visitor
-            extends PlanVisitor<Set<Symbol>, Void>
+            extends PlanVisitor<Void, Set<Symbol>>
     {
         @Override
         protected Void visitPlan(PlanNode node, Set<Symbol> boundSymbols)
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/CallExpression.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/CallExpression.java
index 5d6307d..8bc0f27 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/CallExpression.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/CallExpression.java
@@ -83,7 +83,7 @@
     }
 
     @Override
-    public <C, R> R accept(RowExpressionVisitor<C, R> visitor, C context)
+    public <R, C> R accept(RowExpressionVisitor<R, C> visitor, C context)
     {
         return visitor.visitCall(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/ConstantExpression.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/ConstantExpression.java
index 7c6eed8..eceed74 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/ConstantExpression.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/ConstantExpression.java
@@ -70,7 +70,7 @@
     }
 
     @Override
-    public <C, R> R accept(RowExpressionVisitor<C, R> visitor, C context)
+    public <R, C> R accept(RowExpressionVisitor<R, C> visitor, C context)
     {
         return visitor.visitConstant(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/DeterminismEvaluator.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/DeterminismEvaluator.java
index 203720d..e1f9534 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/DeterminismEvaluator.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/DeterminismEvaluator.java
@@ -33,7 +33,7 @@
     }
 
     private static class Visitor
-            implements RowExpressionVisitor<Void, Boolean>
+            implements RowExpressionVisitor<Boolean, Void>
     {
         private final FunctionRegistry registry;
 
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/InputReferenceExpression.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/InputReferenceExpression.java
index bdfe350..f6e09ea 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/InputReferenceExpression.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/InputReferenceExpression.java
@@ -60,7 +60,7 @@
     }
 
     @Override
-    public <C, R> R accept(RowExpressionVisitor<C, R> visitor, C context)
+    public <R, C> R accept(RowExpressionVisitor<R, C> visitor, C context)
     {
         return visitor.visitInputReference(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/LambdaDefinitionExpression.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/LambdaDefinitionExpression.java
index 7a1ecf1..39b2439 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/LambdaDefinitionExpression.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/LambdaDefinitionExpression.java
@@ -88,7 +88,7 @@
     }
 
     @Override
-    public <C, R> R accept(RowExpressionVisitor<C, R> visitor, C context)
+    public <R, C> R accept(RowExpressionVisitor<R, C> visitor, C context)
     {
         return visitor.visitLambda(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpression.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpression.java
index 4a03a9e..8d0e5a7 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpression.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpression.java
@@ -27,5 +27,5 @@
     @Override
     public abstract String toString();
 
-    public abstract <C, R> R accept(RowExpressionVisitor<C, R> visitor, C context);
+    public abstract <R, C> R accept(RowExpressionVisitor<R, C> visitor, C context);
 }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpressionVisitor.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpressionVisitor.java
index 91edb55..c1b9eee 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpressionVisitor.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/RowExpressionVisitor.java
@@ -13,7 +13,7 @@
  */
 package com.facebook.presto.sql.relational;
 
-public interface RowExpressionVisitor<C, R>
+public interface RowExpressionVisitor<R, C>
 {
     R visitCall(CallExpression call, C context);
     R visitInputReference(InputReferenceExpression reference, C context);
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java
index 5b18f9d..08bacbf 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/SqlToRowExpressionTranslator.java
@@ -420,7 +420,7 @@
         }
 
         private static class ChangeTypeVisitor
-                implements RowExpressionVisitor<Void, RowExpression>
+                implements RowExpressionVisitor<RowExpression, Void>
         {
             private final Type targetType;
 
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/VariableReferenceExpression.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/VariableReferenceExpression.java
index 5178790..46ed7a1 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/VariableReferenceExpression.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/VariableReferenceExpression.java
@@ -55,7 +55,7 @@
     }
 
     @Override
-    public <C, R> R accept(RowExpressionVisitor<C, R> visitor, C context)
+    public <R, C> R accept(RowExpressionVisitor<R, C> visitor, C context)
     {
         return visitor.visitVariableReference(this, context);
     }
diff --git a/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java b/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java
index 9e79c71..a2e4f4e 100644
--- a/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java
+++ b/presto-main/src/main/java/com/facebook/presto/sql/relational/optimizer/ExpressionOptimizer.java
@@ -72,7 +72,7 @@
     }
 
     private class Visitor
-            implements RowExpressionVisitor<Void, RowExpression>
+            implements RowExpressionVisitor<RowExpression, Void>
     {
         @Override
         public RowExpression visitInputReference(InputReferenceExpression reference, Void context)
diff --git a/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/PlanMatchingVisitor.java b/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/PlanMatchingVisitor.java
index 89a3f15..42f5dc6 100644
--- a/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/PlanMatchingVisitor.java
+++ b/presto-main/src/test/java/com/facebook/presto/sql/planner/assertions/PlanMatchingVisitor.java
@@ -36,7 +36,7 @@
 import static java.util.Objects.requireNonNull;
 
 final class PlanMatchingVisitor
-        extends PlanVisitor<PlanMatchPattern, MatchResult>
+        extends PlanVisitor<MatchResult, PlanMatchPattern>
 {
     private final Metadata metadata;
     private final Session session;
diff --git a/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java b/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java
index 1de055a..f2326e3 100644
--- a/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java
+++ b/presto-main/src/main/java/com/facebook/presto/cost/CoefficientBasedCostCalculator.java
@@ -82,7 +82,7 @@
     }
 
     private class Visitor
-            extends PlanVisitor<Void, PlanNodeCost>
+            extends PlanVisitor<PlanNodeCost, Void>
     {
         private final Session session;
         private final Map<PlanNodeId, PlanNodeCost> costs;
