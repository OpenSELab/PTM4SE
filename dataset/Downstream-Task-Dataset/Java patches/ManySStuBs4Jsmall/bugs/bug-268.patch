diff --git a/core/common/src/main/java/alluxio/exception/PreconditionMessage.java b/core/common/src/main/java/alluxio/exception/PreconditionMessage.java
index f4bbc5c..3953db3 100644
--- a/core/common/src/main/java/alluxio/exception/PreconditionMessage.java
+++ b/core/common/src/main/java/alluxio/exception/PreconditionMessage.java
@@ -44,7 +44,7 @@
   ERR_TIER_QUOTA_BLANK("Tier capacity configuration should not be blank"),
   ERR_UFS_MANAGER_OPERATION_INVALID_SESSION("Attempted to %s ufs file with invalid session id."),
   ERR_UFS_MANAGER_FAILED_TO_REMOVE_AGENT(
-      "Failed to remove agent %d from ufs manager's internal state."),
+      "Failed to remove agent %s from ufs manager's internal state."),
   ERR_UNEXPECTED_EOF("Reached EOF unexpectedly."),
   ERR_WRITE_BUFFER_NULL("Cannot write a null input buffer"),
   ERR_ZK_ADDRESS_NOT_SET("Cannot get leader address from zookeeper; %s is not set"),
@@ -56,9 +56,9 @@
       "Inconsistent Zookeeper configuration; %s should be set if and only if %s is true"),
   INODE_TREE_UNINITIALIZED_IS_ROOT_ID("Cannot call isRootId() before initializeRoot()"),
   INVALID_PROPERTY("Invalid property: %s"),
-  INVALID_USER_FILE_BUFFER_BYTES("Invalid value of %s: %d"),
+  INVALID_USER_FILE_BUFFER_BYTES("Invalid value of %s: %s"),
   NOT_ENOUGH_BYTES_READ(
-      "Not enough bytes have been read [bytesRead: %d, bytesToRead: %d] from the UFS file: %s."),
+      "Not enough bytes have been read [bytesRead: %s, bytesToRead: %s] from the UFS file: %s."),
   PERMISSION_GROUP_IS_NULL("Group cannot be null when constructing Permission"),
   PERMISSION_MODE_IS_NULL("Mode cannot be null when constructing Permission"),
   PERMISSION_OWNER_IS_NULL("Owner cannot be null when constructing Permission"),
diff --git a/core/server/worker/src/main/java/alluxio/worker/block/AsyncCacheRequestManager.java b/core/server/worker/src/main/java/alluxio/worker/block/AsyncCacheRequestManager.java
index 5a4a036..47ce56b 100644
--- a/core/server/worker/src/main/java/alluxio/worker/block/AsyncCacheRequestManager.java
+++ b/core/server/worker/src/main/java/alluxio/worker/block/AsyncCacheRequestManager.java
@@ -107,7 +107,7 @@
           }
           LOG.debug("Result of async caching block {}: {}", blockId, result);
         } catch (Exception e) {
-          LOG.warn("Failed to complete async cache request {} from UFS", request, e.getMessage());
+          LOG.warn("Async cache request failed.\n{}\nError: {}", request, e);
         } finally {
           if (result) {
             ASYNC_CACHE_SUCCEEDED_BLOCKS.inc();
@@ -121,7 +121,7 @@
       // RuntimeExceptions (e.g. RejectedExecutionException) may be thrown in extreme cases when the
       // netty thread pool is drained due to highly concurrent caching workloads. In these cases,
       // return as async caching is at best effort.
-      LOG.warn("Failed to submit async cache request {}: {}", request, e.getMessage());
+      LOG.warn("Failed to submit async cache request.\n{}\nError: {}", request, e);
       ASYNC_CACHE_FAILED_BLOCKS.inc();
       mPendingRequests.remove(blockId);
     }
@@ -161,14 +161,13 @@
       }
     } catch (AlluxioException | IOException e) {
       // This is only best effort
-      LOG.warn("Failed to async cache block {} from UFS on copying the block: {}", blockId,
-          e.getMessage());
+      LOG.warn("Failed to async cache block {} from UFS on copying the block: {}", blockId, e);
       return false;
     } finally {
       try {
         mBlockWorker.closeUfsBlock(Sessions.ASYNC_CACHE_SESSION_ID, blockId);
       } catch (AlluxioException | IOException ee) {
-        LOG.warn("Failed to close UFS block {}: {}", blockId, ee.getMessage());
+        LOG.warn("Failed to close UFS block {}: {}", blockId, ee);
         return false;
       }
     }
diff --git a/core/common/src/main/java/alluxio/exception/PreconditionMessage.java b/core/common/src/main/java/alluxio/exception/PreconditionMessage.java
index f4bbc5c..3953db3 100644
--- a/core/common/src/main/java/alluxio/exception/PreconditionMessage.java
+++ b/core/common/src/main/java/alluxio/exception/PreconditionMessage.java
@@ -44,7 +44,7 @@
   ERR_TIER_QUOTA_BLANK("Tier capacity configuration should not be blank"),
   ERR_UFS_MANAGER_OPERATION_INVALID_SESSION("Attempted to %s ufs file with invalid session id."),
   ERR_UFS_MANAGER_FAILED_TO_REMOVE_AGENT(
-      "Failed to remove agent %d from ufs manager's internal state."),
+      "Failed to remove agent %s from ufs manager's internal state."),
   ERR_UNEXPECTED_EOF("Reached EOF unexpectedly."),
   ERR_WRITE_BUFFER_NULL("Cannot write a null input buffer"),
   ERR_ZK_ADDRESS_NOT_SET("Cannot get leader address from zookeeper; %s is not set"),
@@ -56,9 +56,9 @@
       "Inconsistent Zookeeper configuration; %s should be set if and only if %s is true"),
   INODE_TREE_UNINITIALIZED_IS_ROOT_ID("Cannot call isRootId() before initializeRoot()"),
   INVALID_PROPERTY("Invalid property: %s"),
-  INVALID_USER_FILE_BUFFER_BYTES("Invalid value of %s: %d"),
+  INVALID_USER_FILE_BUFFER_BYTES("Invalid value of %s: %s"),
   NOT_ENOUGH_BYTES_READ(
-      "Not enough bytes have been read [bytesRead: %d, bytesToRead: %d] from the UFS file: %s."),
+      "Not enough bytes have been read [bytesRead: %s, bytesToRead: %s] from the UFS file: %s."),
   PERMISSION_GROUP_IS_NULL("Group cannot be null when constructing Permission"),
   PERMISSION_MODE_IS_NULL("Mode cannot be null when constructing Permission"),
   PERMISSION_OWNER_IS_NULL("Owner cannot be null when constructing Permission"),
