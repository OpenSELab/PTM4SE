diff --git a/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java b/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java
index c95a96a..cabe933 100644
--- a/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java
+++ b/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java
@@ -168,7 +168,7 @@
                                 + "MATCH person-[:belongs_to*]->group RETURN person.name, group.name",
                         "Bridget", "Admin", "Technichian", "User", "3 rows" ) );
                 add( new TestData(
-                        "Match",
+                        "Where",
                         "SELECT * FROM `Person` WHERE `Person`.age > 35 AND `Person`.hair = 'blonde'".replace(
                                 "`", identifierQuoteString ),
                         "START person=node:Person('name: *') WHERE person.age > 35 AND person.hair = 'blonde' RETURN person",
diff --git a/community/embedded-examples/src/test/java/org/neo4j/examples/CypherSqlTest.java b/community/embedded-examples/src/test/java/org/neo4j/examples/CypherSqlTest.java
index 32176eb..398a2bb 100644
--- a/community/embedded-examples/src/test/java/org/neo4j/examples/CypherSqlTest.java
+++ b/community/embedded-examples/src/test/java/org/neo4j/examples/CypherSqlTest.java
@@ -90,8 +90,8 @@
      * The `MATCH` clause is analogous to the `JOIN` in SQL. A normal a->b relationship is an 
      * inner join between nodes a and b -- both sides have to have at least one match, or nothing is returned.
      * 
-     * A simple example, where we find all nodes that are connected to the node representing
-     * the person "Anakin", through an incoming relationship.
+     * We'll start with a simple example, where we find all email addresses that are connected to
+     * the person ``Anakin''. This is an ordinary one-to-many relationship.
      * 
      * .SQL Query
      * @@Match-sql-query
@@ -168,14 +168,14 @@
      * Not all predicates have an equivalent in the other language, but the concept is the same.
      * 
      * .SQL Query
-     * @@Match-sql-query
+     * @@Where-sql-query
      * 
-     * @@Match-sql-result
+     * @@Where-sql-result
      * 
      * .Cypher Query
-     * @@Match-cypher-query
+     * @@Where-cypher-query
      * 
-     * @@Match-cypher-result
+     * @@Where-cypher-result
      * 
      * == Return ==
      * This is SQL's `SELECT`. 
diff --git a/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java b/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java
index c95a96a..cabe933 100644
--- a/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java
+++ b/community/embedded-examples/src/main/java/org/neo4j/examples/CypherSql.java
@@ -168,7 +168,7 @@
                                 + "MATCH person-[:belongs_to*]->group RETURN person.name, group.name",
                         "Bridget", "Admin", "Technichian", "User", "3 rows" ) );
                 add( new TestData(
-                        "Match",
+                        "Where",
                         "SELECT * FROM `Person` WHERE `Person`.age > 35 AND `Person`.hair = 'blonde'".replace(
                                 "`", identifierQuoteString ),
                         "START person=node:Person('name: *') WHERE person.age > 35 AND person.hair = 'blonde' RETURN person",
