diff --git a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java
index 6477da3..c7608e6 100755
--- a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java
+++ b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java
@@ -2892,7 +2892,7 @@
             throw new IllegalStateException("Cannot evaluate a model with > 1 output arrays from a DataSetIterator");
         }
 
-        if (!iterator.hasNext())
+        if (iterator.resetSupported() && !iterator.hasNext())
             iterator.reset();
 
         DataSetIterator iter = iterator.asyncSupported() ? new AsyncDataSetIterator(iterator, 2, true) : iterator;
@@ -2950,7 +2950,7 @@
             throw new IllegalStateException("Cannot evaluate a model using this method with > 1 output arrays");
         }
 
-        if (!iterator.hasNext())
+        if (iterator.resetSupported() && !iterator.hasNext())
             iterator.reset();
 
         MultiDataSetIterator iter =
diff --git a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java
index 6477da3..c7608e6 100755
--- a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java
+++ b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/graph/ComputationGraph.java
@@ -2892,7 +2892,7 @@
             throw new IllegalStateException("Cannot evaluate a model with > 1 output arrays from a DataSetIterator");
         }
 
-        if (!iterator.hasNext())
+        if (iterator.resetSupported() && !iterator.hasNext())
             iterator.reset();
 
         DataSetIterator iter = iterator.asyncSupported() ? new AsyncDataSetIterator(iterator, 2, true) : iterator;
@@ -2950,7 +2950,7 @@
             throw new IllegalStateException("Cannot evaluate a model using this method with > 1 output arrays");
         }
 
-        if (!iterator.hasNext())
+        if (iterator.resetSupported() && !iterator.hasNext())
             iterator.reset();
 
         MultiDataSetIterator iter =
