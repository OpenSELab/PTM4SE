diff --git a/src/main/java/org/junit/Assert.java b/src/main/java/org/junit/Assert.java
index af242b4..91799f0 100755
--- a/src/main/java/org/junit/Assert.java
+++ b/src/main/java/org/junit/Assert.java
@@ -997,7 +997,7 @@
                 return retVal;
             } else {
                 String mismatchMessage = format("unexpected exception type thrown;",
-                        expectedThrowable.getSimpleName(), actualThrown.getClass().getSimpleName());
+                        expectedThrowable.getName(), actualThrown.getClass().getName());
 
                 // The AssertionError(String, Throwable) ctor is only available on JDK7.
                 AssertionError assertionError = new AssertionError(mismatchMessage);
diff --git a/src/test/java/org/junit/rules/VerifierRuleTest.java b/src/test/java/org/junit/rules/VerifierRuleTest.java
index 1344fe9..e7cd3ec 100644
--- a/src/test/java/org/junit/rules/VerifierRuleTest.java
+++ b/src/test/java/org/junit/rules/VerifierRuleTest.java
@@ -162,7 +162,7 @@
     public void usedErrorCollectorCheckThrowsClassMismatchShouldFail() {
         PrintableResult testResult = testResult(UsesErrorCollectorCheckThrowsClassMismatch.class);
         assertThat(testResult, hasFailureContaining(
-            "expected:<IllegalArgumentException> but was:<NullPointerException>"));
+            "expected:<java.lang.IllegalArgumentException> but was:<java.lang.NullPointerException>"));
     }
 
     public static class UsesErrorCollectorCheckThrowsNothingThrown {
diff --git a/src/test/java/org/junit/tests/assertion/AssertionTest.java b/src/test/java/org/junit/tests/assertion/AssertionTest.java
index fabda13..a2e487a 100755
--- a/src/test/java/org/junit/tests/assertion/AssertionTest.java
+++ b/src/test/java/org/junit/tests/assertion/AssertionTest.java
@@ -849,7 +849,7 @@
         try {
             expectThrows(IOException.class, throwingRunnable(npe));
         } catch (AssertionError error) {
-            assertEquals("unexpected exception type thrown; expected:<IOException> but was:<NullPointerException>",
+            assertEquals("unexpected exception type thrown; expected:<java.io.IOException> but was:<java.lang.NullPointerException>",
                     error.getMessage());
             assertSame(npe, error.getCause());
             return;
diff --git a/src/main/java/org/junit/Assert.java b/src/main/java/org/junit/Assert.java
index af242b4..91799f0 100755
--- a/src/main/java/org/junit/Assert.java
+++ b/src/main/java/org/junit/Assert.java
@@ -997,7 +997,7 @@
                 return retVal;
             } else {
                 String mismatchMessage = format("unexpected exception type thrown;",
-                        expectedThrowable.getSimpleName(), actualThrown.getClass().getSimpleName());
+                        expectedThrowable.getName(), actualThrown.getClass().getName());
 
                 // The AssertionError(String, Throwable) ctor is only available on JDK7.
                 AssertionError assertionError = new AssertionError(mismatchMessage);
