diff --git a/src/edu/stanford/nlp/pipeline/ParserAnnotator.java b/src/edu/stanford/nlp/pipeline/ParserAnnotator.java
index 0d95195..7ed6fe0 100644
--- a/src/edu/stanford/nlp/pipeline/ParserAnnotator.java
+++ b/src/edu/stanford/nlp/pipeline/ParserAnnotator.java
@@ -209,7 +209,9 @@
   @Override
   protected void doOneSentence(Annotation annotation, CoreMap sentence) {
     // If "noSquash" is set, don't re-annotate sentences which already have a tree annotation
-    if (noSquash && sentence.get(TreeCoreAnnotations.TreeAnnotation.class) != null) {
+    if (noSquash &&
+        sentence.get(TreeCoreAnnotations.TreeAnnotation.class) != null &&
+        !"X".equalsIgnoreCase(sentence.get(TreeCoreAnnotations.TreeAnnotation.class).label().value())) {
       return;
     }
 
diff --git a/src/edu/stanford/nlp/pipeline/ParserAnnotator.java b/src/edu/stanford/nlp/pipeline/ParserAnnotator.java
index 0d95195..7ed6fe0 100644
--- a/src/edu/stanford/nlp/pipeline/ParserAnnotator.java
+++ b/src/edu/stanford/nlp/pipeline/ParserAnnotator.java
@@ -209,7 +209,9 @@
   @Override
   protected void doOneSentence(Annotation annotation, CoreMap sentence) {
     // If "noSquash" is set, don't re-annotate sentences which already have a tree annotation
-    if (noSquash && sentence.get(TreeCoreAnnotations.TreeAnnotation.class) != null) {
+    if (noSquash &&
+        sentence.get(TreeCoreAnnotations.TreeAnnotation.class) != null &&
+        !"X".equalsIgnoreCase(sentence.get(TreeCoreAnnotations.TreeAnnotation.class).label().value())) {
       return;
     }
 
