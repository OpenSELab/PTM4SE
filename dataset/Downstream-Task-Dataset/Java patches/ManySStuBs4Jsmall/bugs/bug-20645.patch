diff --git a/src/api/org/openmrs/propertyeditor/LocationEditor.java b/src/api/org/openmrs/propertyeditor/LocationEditor.java
index 209f90b..a522884 100644
--- a/src/api/org/openmrs/propertyeditor/LocationEditor.java
+++ b/src/api/org/openmrs/propertyeditor/LocationEditor.java
@@ -48,7 +48,7 @@
 	public String getAsText() {
 		Location t = (Location) getValue();
 		if (t == null && Context.isAuthenticated()) {
-			return Context.getAuthenticatedUser().getUserProperty(OpenmrsConstants.USER_PROPERTY_DEFAULT_LOCATION);
+			return null; //return Context.getAuthenticatedUser().getUserProperty(OpenmrsConstants.USER_PROPERTY_DEFAULT_LOCATION);
 		}
 		else {
 			return t.getLocationId().toString();
diff --git a/src/web/org/openmrs/web/controller/encounter/EncounterFormController.java b/src/web/org/openmrs/web/controller/encounter/EncounterFormController.java
index a80c32b..6669852 100644
--- a/src/web/org/openmrs/web/controller/encounter/EncounterFormController.java
+++ b/src/web/org/openmrs/web/controller/encounter/EncounterFormController.java
@@ -214,7 +214,7 @@
 			map.put("forms", Context.getFormService().getForms());
 			// loop over the encounter's observations to find the edited obs
 			String reason = "";
-			for (Obs o : encounter.getObsAtTopLevel(false)) {
+			for (Obs o : encounter.getObsAtTopLevel(true)) {
 				// only the voided obs have been edited
 				if (o.isVoided()){
 					// assumes format of: ".* (new obsId: \d*)"
diff --git a/src/api/org/openmrs/propertyeditor/LocationEditor.java b/src/api/org/openmrs/propertyeditor/LocationEditor.java
index 209f90b..a522884 100644
--- a/src/api/org/openmrs/propertyeditor/LocationEditor.java
+++ b/src/api/org/openmrs/propertyeditor/LocationEditor.java
@@ -48,7 +48,7 @@
 	public String getAsText() {
 		Location t = (Location) getValue();
 		if (t == null && Context.isAuthenticated()) {
-			return Context.getAuthenticatedUser().getUserProperty(OpenmrsConstants.USER_PROPERTY_DEFAULT_LOCATION);
+			return null; //return Context.getAuthenticatedUser().getUserProperty(OpenmrsConstants.USER_PROPERTY_DEFAULT_LOCATION);
 		}
 		else {
 			return t.getLocationId().toString();
