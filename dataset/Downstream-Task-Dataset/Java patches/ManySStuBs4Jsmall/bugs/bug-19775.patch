diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveHailCommandClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveHailCommandClass.java
index c4a2817..8cfa746 100644
--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveHailCommandClass.java
+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveHailCommandClass.java
@@ -58,12 +58,13 @@
 	public void handleApplicationCommandRequest(SerialMessage serialMessage, 
 			int offset, int endpoint) {
 		logger.trace("Handle Message Manufacture Specific Request");
-		logger.debug(String.format("Received Hail command for Node ID = %d", this.getNode().getNodeId()));
+		logger.debug("NODE {}: Received Hail command (v{})", this.getNode().getNodeId(), this.getVersion());
 		int command = serialMessage.getMessagePayloadByte(offset);
 		switch (command) {
 			case HAIL:
 				logger.trace("Process Hail command");				
-				logger.debug(String.format("Request an update of the dynamic values for node id %d", this.getNode().getNodeId()));
+				
+				logger.debug("NODE {}: Request an update of the dynamic values", this.getNode().getNodeId());
 				
 				// We only rerequest dynamic values for nodes that are completely initialized.
 				if (this.getNode().getNodeStage() != NodeStage.DONE)
@@ -73,7 +74,8 @@
 				
 				break;
 			default:
-			logger.warn(String.format("Unsupported Command 0x%02X for command class %s (0x%02X).", 
+			logger.warn(String.format("NODE %d: Unsupported Command 0x%02X for command class %s (0x%02X).",
+					this.getNode().getNodeId(),
 					command, 
 					this.getCommandClass().getLabel(),
 					this.getCommandClass().getKey()));
