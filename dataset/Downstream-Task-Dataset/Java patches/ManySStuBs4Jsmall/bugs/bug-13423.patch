diff --git a/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java b/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
index d39a902..e3bd230 100644
--- a/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
+++ b/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
@@ -213,9 +213,9 @@
             double xDist = n2x - n1x;
             double yDist = n2y - n1y;
             double dist = Math.sqrt(xDist * xDist + yDist * yDist);
-            boolean sphereCollision = dist < radiusScale * ((n1.size() / 2f) + (n2.size() / 2f));
+            boolean sphereCollision = dist < radiusScale * (n1.size() + n2.size());
             if (sphereCollision) {
-                double f = 0.1 * (n1.size() / 2f) / dist;
+                double f = 0.1 * n1.size() / dist;
                 if (dist > 0) {
                     n2Data.dx = (float) (n2Data.dx + xDist / dist * f);
                     n2Data.dy = (float) (n2Data.dy + yDist / dist * f);
@@ -357,7 +357,7 @@
 //            float w = node.getTextData().getWidth();
 //            float h = node.getTextData().getHeight();
             float w = 0f, h = 0f;
-            float radius = node.size() / 2f;
+            float radius = node.size();
 
             // Get the rectangle occupied by the node (size + label)
             float nxmin = Math.min(x - w / 2, x - radius);
diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/initializer/Modeler.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/initializer/Modeler.java
index c3b99f8..f8df19e 100644
--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/initializer/Modeler.java
+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/api/initializer/Modeler.java
@@ -81,6 +81,6 @@
                 + Math.pow((double) object.getNode().z() - cameraLocation[2], 2d));
         object.setCameraDistance((float) distance);
 
-        return (float) distance - (object.getNode().size() / 2f);
+        return (float) distance - object.getNode().size();
     }
 }
diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModel.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModel.java
index 119e042..c0b06ac 100644
--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModel.java
+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModel.java
@@ -155,6 +155,6 @@
 
     @Override
     public float getCollisionDistance(double angle) {
-        return node.size() / 2f;
+        return node.size();
     }
 }
diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModeler.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModeler.java
index d0d166e..b45f75b 100644
--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModeler.java
+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeDiskModeler.java
@@ -85,7 +85,7 @@
             return;
         }
 
-        float distance = cameraDistance(obj) / (obj.getNode().size() / 2f);
+        float distance = cameraDistance(obj) / obj.getNode().size();
         if (distance > 600) {
             obj.modelType = SHAPE_DIAMOND;
             obj.modelBorderType = -1;
diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeRectangleModeler.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeRectangleModeler.java
index bef8da7..97b1052 100644
--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeRectangleModeler.java
+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeRectangleModeler.java
@@ -74,7 +74,7 @@
             return;
         }
 
-        float distance = cameraDistance(obj) / (obj.getNode().size() / 2f);
+        float distance = cameraDistance(obj) / obj.getNode().size();
         if (distance > 600) {
             obj.border = false;
         } else {
diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModel.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModel.java
index 8228fe2..2c055db 100644
--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModel.java
+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModel.java
@@ -139,6 +139,6 @@
 
     @Override
     public float getCollisionDistance(double angle) {
-        return node.size() / 2f;
+        return node.size();
     }
 }
diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModeler.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModeler.java
index 1294f74..86181a9 100644
--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModeler.java
+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/model/node/NodeSphereModeler.java
@@ -85,7 +85,7 @@
             return;
         }
 
-        float distance = cameraDistance(obj) / (obj.getNode().size() / 2f);
+        float distance = cameraDistance(obj) / obj.getNode().size();
         if (distance > 600) {
             obj.modelType = SHAPE_DIAMOND;
         } else if (distance > 50) {
diff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/TextManager.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/TextManager.java
index 65fbae1..cfd4300 100644
--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/TextManager.java
+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/text/TextManager.java
@@ -300,7 +300,7 @@
                 float height = sizeFactor * objectModel.getTextHeight();
                 float posX = node.x() + (float) width / -2 * sizeFactor;
                 float posY = node.y() + (float) height / -2 * sizeFactor;
-                float posZ = node.size() / 2f;
+                float posZ = node.size();
 
                 renderer.draw3D(txt, posX, posY, posZ, sizeFactor);
             }
diff --git a/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java b/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
index d39a902..e3bd230 100644
--- a/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
+++ b/modules/LayoutPlugin/src/main/java/org/gephi/layout/plugin/labelAdjust/LabelAdjust.java
@@ -213,9 +213,9 @@
             double xDist = n2x - n1x;
             double yDist = n2y - n1y;
             double dist = Math.sqrt(xDist * xDist + yDist * yDist);
-            boolean sphereCollision = dist < radiusScale * ((n1.size() / 2f) + (n2.size() / 2f));
+            boolean sphereCollision = dist < radiusScale * (n1.size() + n2.size());
             if (sphereCollision) {
-                double f = 0.1 * (n1.size() / 2f) / dist;
+                double f = 0.1 * n1.size() / dist;
                 if (dist > 0) {
                     n2Data.dx = (float) (n2Data.dx + xDist / dist * f);
                     n2Data.dy = (float) (n2Data.dy + yDist / dist * f);
@@ -357,7 +357,7 @@
 //            float w = node.getTextData().getWidth();
 //            float h = node.getTextData().getHeight();
             float w = 0f, h = 0f;
-            float radius = node.size() / 2f;
+            float radius = node.size();
 
             // Get the rectangle occupied by the node (size + label)
             float nxmin = Math.min(x - w / 2, x - radius);
