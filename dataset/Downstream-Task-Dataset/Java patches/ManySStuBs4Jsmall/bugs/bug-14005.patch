diff --git a/src/com/google/javascript/rhino/Node.java b/src/com/google/javascript/rhino/Node.java
index fd6338b..1414989 100644
--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -993,7 +993,7 @@
 
   /** Can only be called when <tt>getType() == TokenStream.NUMBER</tt> */
   public double getDouble() throws UnsupportedOperationException {
-    if (this.getType() == Token.NUMBER) {
+    if (this.type == Token.NUMBER) {
       throw new IllegalStateException(
           "Number node not created with Node.newNumber");
     } else {
@@ -1006,7 +1006,7 @@
    * @param value value to set.
    */
   public void setDouble(double value) throws UnsupportedOperationException {
-    if (this.getType() == Token.NUMBER) {
+    if (this.type == Token.NUMBER) {
       throw new IllegalStateException(
           "Number node not created with Node.newNumber");
     } else {
@@ -1016,7 +1016,7 @@
 
   /** Can only be called when node has String context. */
   public String getString() throws UnsupportedOperationException {
-    if (this.getType() == Token.STRING) {
+    if (this.type == Token.STRING) {
       throw new IllegalStateException(
           "String node not created with Node.newString");
     } else {
@@ -1029,7 +1029,7 @@
    * @param value the value to set.
    */
   public void setString(String value) throws UnsupportedOperationException {
-    if (this.getType() == Token.STRING || this.getType() == Token.NAME) {
+    if (this.type == Token.STRING || this.type == Token.NAME) {
       throw new IllegalStateException(
           "String node not created with Node.newString");
     } else {
@@ -1065,7 +1065,7 @@
       // In the case of JsDoc trees, the first child is often not a string
       // which causes exceptions to be thrown when calling toString or
       // toStringTree.
-      if (first == null || first.getType() != Token.NAME) {
+      if (first == null || first.type != Token.NAME) {
         sb.append("<invalid>");
       } else {
         sb.append(first.getString());
@@ -1666,7 +1666,7 @@
    */
   boolean isEquivalentTo(
       Node node, boolean compareType, boolean recurse, boolean jsDoc) {
-    if (type != node.getType()
+    if (type != node.type
         || getChildCount() != node.getChildCount()
         || this.getClass() != node.getClass()) {
       return false;
@@ -2557,99 +2557,99 @@
   /*** AST type check methods ***/
 
   public boolean isAdd() {
-    return this.getType() == Token.ADD;
+    return this.type == Token.ADD;
   }
 
   public boolean isAnd() {
-    return this.getType() == Token.AND;
+    return this.type == Token.AND;
   }
 
   public boolean isArrayLit() {
-    return this.getType() == Token.ARRAYLIT;
+    return this.type == Token.ARRAYLIT;
   }
 
   public boolean isArrayPattern() {
-    return this.getType() == Token.ARRAY_PATTERN;
+    return this.type == Token.ARRAY_PATTERN;
   }
 
   public boolean isAssign() {
-    return this.getType() == Token.ASSIGN;
+    return this.type == Token.ASSIGN;
   }
 
   public boolean isAssignAdd() {
-    return this.getType() == Token.ASSIGN_ADD;
+    return this.type == Token.ASSIGN_ADD;
   }
 
   public boolean isBlock() {
-    return this.getType() == Token.BLOCK;
+    return this.type == Token.BLOCK;
   }
 
   public boolean isBreak() {
-    return this.getType() == Token.BREAK;
+    return this.type == Token.BREAK;
   }
 
   public boolean isCall() {
-    return this.getType() == Token.CALL;
+    return this.type == Token.CALL;
   }
 
   public boolean isCase() {
-    return this.getType() == Token.CASE;
+    return this.type == Token.CASE;
   }
 
   public boolean isCast() {
-    return this.getType() == Token.CAST;
+    return this.type == Token.CAST;
   }
 
   public boolean isCatch() {
-    return this.getType() == Token.CATCH;
+    return this.type == Token.CATCH;
   }
 
   public boolean isClass() {
-    return this.getType() == Token.CLASS;
+    return this.type == Token.CLASS;
   }
 
   public boolean isClassMembers() {
-    return this.getType() == Token.CLASS_MEMBERS;
+    return this.type == Token.CLASS_MEMBERS;
   }
 
   public boolean isComma() {
-    return this.getType() == Token.COMMA;
+    return this.type == Token.COMMA;
   }
 
   public boolean isComputedProp() {
-    return this.getType() == Token.COMPUTED_PROP;
+    return this.type == Token.COMPUTED_PROP;
   }
 
   public boolean isContinue() {
-    return this.getType() == Token.CONTINUE;
+    return this.type == Token.CONTINUE;
   }
 
   public boolean isConst() {
-    return this.getType() == Token.CONST;
+    return this.type == Token.CONST;
   }
 
   public boolean isDebugger() {
-    return this.getType() == Token.DEBUGGER;
+    return this.type == Token.DEBUGGER;
   }
 
   public boolean isDec() {
-    return this.getType() == Token.DEC;
+    return this.type == Token.DEC;
   }
 
   public boolean isDefaultCase() {
-    return this.getType() == Token.DEFAULT_CASE;
+    return this.type == Token.DEFAULT_CASE;
   }
 
   public boolean isDefaultValue() {
-    return this.getType() == Token.DEFAULT_VALUE;
+    return this.type == Token.DEFAULT_VALUE;
   }
 
   public boolean isDelProp() {
-    return this.getType() == Token.DELPROP;
+    return this.type == Token.DELPROP;
   }
 
   public boolean isDestructuringLhs() {
-    return this.getType() == Token.DESTRUCTURING_LHS;
+    return this.type == Token.DESTRUCTURING_LHS;
   }
 
   public boolean isDestructuringPattern() {
@@ -2657,242 +2657,242 @@
   }
 
   public boolean isDo() {
-    return this.getType() == Token.DO;
+    return this.type == Token.DO;
   }
 
   public boolean isEmpty() {
-    return this.getType() == Token.EMPTY;
+    return this.type == Token.EMPTY;
   }
 
   public boolean isExport() {
-    return this.getType() == Token.EXPORT;
+    return this.type == Token.EXPORT;
   }
 
   public boolean isExprResult() {
-    return this.getType() == Token.EXPR_RESULT;
+    return this.type == Token.EXPR_RESULT;
   }
 
   public boolean isFalse() {
-    return this.getType() == Token.FALSE;
+    return this.type == Token.FALSE;
   }
 
   public boolean isFor() {
-    return this.getType() == Token.FOR;
+    return this.type == Token.FOR;
   }
 
   public boolean isForOf() {
-    return this.getType() == Token.FOR_OF;
+    return this.type == Token.FOR_OF;
   }
 
   public boolean isFunction() {
-    return this.getType() == Token.FUNCTION;
+    return this.type == Token.FUNCTION;
   }
 
   public boolean isGetterDef() {
-    return this.getType() == Token.GETTER_DEF;
+    return this.type == Token.GETTER_DEF;
   }
 
   public boolean isGetElem() {
-    return this.getType() == Token.GETELEM;
+    return this.type == Token.GETELEM;
   }
 
   public boolean isGetProp() {
-    return this.getType() == Token.GETPROP;
+    return this.type == Token.GETPROP;
   }
 
   public boolean isHook() {
-    return this.getType() == Token.HOOK;
+    return this.type == Token.HOOK;
   }
 
   public boolean isIf() {
-    return this.getType() == Token.IF;
+    return this.type == Token.IF;
   }
 
   public boolean isImport() {
-    return this.getType() == Token.IMPORT;
+    return this.type == Token.IMPORT;
   }
 
   public boolean isImportSpec() {
-    return this.getType() == Token.IMPORT_SPEC;
+    return this.type == Token.IMPORT_SPEC;
   }
 
   public boolean isIn() {
-    return this.getType() == Token.IN;
+    return this.type == Token.IN;
   }
 
   public boolean isInc() {
-    return this.getType() == Token.INC;
+    return this.type == Token.INC;
   }
 
   public boolean isInstanceOf() {
-    return this.getType() == Token.INSTANCEOF;
+    return this.type == Token.INSTANCEOF;
   }
 
   public boolean isInterfaceMembers() {
-    return this.getType() == Token.INTERFACE_MEMBERS;
+    return this.type == Token.INTERFACE_MEMBERS;
   }
 
   public boolean isRecordType() {
-    return this.getType() == Token.RECORD_TYPE;
+    return this.type == Token.RECORD_TYPE;
   }
 
   public boolean isCallSignature() {
-    return this.getType() == Token.CALL_SIGNATURE;
+    return this.type == Token.CALL_SIGNATURE;
   }
 
   public boolean isIndexSignature() {
-    return this.getType() == Token.INDEX_SIGNATURE;
+    return this.type == Token.INDEX_SIGNATURE;
   }
 
   public boolean isLabel() {
-    return this.getType() == Token.LABEL;
+    return this.type == Token.LABEL;
   }
 
   public boolean isLabelName() {
-    return this.getType() == Token.LABEL_NAME;
+    return this.type == Token.LABEL_NAME;
   }
 
   public boolean isLet() {
-    return this.getType() == Token.LET;
+    return this.type == Token.LET;
   }
 
   public boolean isMemberFunctionDef() {
-    return this.getType() == Token.MEMBER_FUNCTION_DEF;
+    return this.type == Token.MEMBER_FUNCTION_DEF;
   }
 
   public boolean isMemberVariableDef() {
-    return this.getType() == Token.MEMBER_VARIABLE_DEF;
+    return this.type == Token.MEMBER_VARIABLE_DEF;
   }
 
   public boolean isName() {
-    return this.getType() == Token.NAME;
+    return this.type == Token.NAME;
   }
 
   public boolean isNE() {
-    return this.getType() == Token.NE;
+    return this.type == Token.NE;
   }
 
   public boolean isNew() {
-    return this.getType() == Token.NEW;
+    return this.type == Token.NEW;
   }
 
   public boolean isNot() {
-    return this.getType() == Token.NOT;
+    return this.type == Token.NOT;
   }
 
   public boolean isNull() {
-    return this.getType() == Token.NULL;
+    return this.type == Token.NULL;
   }
 
   public boolean isNumber() {
-    return this.getType() == Token.NUMBER;
+    return this.type == Token.NUMBER;
   }
 
   public boolean isObjectLit() {
-    return this.getType() == Token.OBJECTLIT;
+    return this.type == Token.OBJECTLIT;
   }
 
   public boolean isObjectPattern() {
-    return this.getType() == Token.OBJECT_PATTERN;
+    return this.type == Token.OBJECT_PATTERN;
   }
 
   public boolean isOr() {
-    return this.getType() == Token.OR;
+    return this.type == Token.OR;
   }
 
   public boolean isParamList() {
-    return this.getType() == Token.PARAM_LIST;
+    return this.type == Token.PARAM_LIST;
   }
 
   public boolean isRegExp() {
-    return this.getType() == Token.REGEXP;
+    return this.type == Token.REGEXP;
   }
 
   public boolean isRest() {
-    return this.getType() == Token.REST;
+    return this.type == Token.REST;
   }
 
   public boolean isReturn() {
-    return this.getType() == Token.RETURN;
+    return this.type == Token.RETURN;
   }
 
   public boolean isScript() {
-    return this.getType() == Token.SCRIPT;
+    return this.type == Token.SCRIPT;
   }
 
   public boolean isSetterDef() {
-    return this.getType() == Token.SETTER_DEF;
+    return this.type == Token.SETTER_DEF;
   }
 
   public boolean isSpread() {
-    return this.getType() == Token.SPREAD;
+    return this.type == Token.SPREAD;
   }
 
   public boolean isString() {
-    return this.getType() == Token.STRING;
+    return this.type == Token.STRING;
   }
 
   public boolean isStringKey() {
-    return this.getType() == Token.STRING_KEY;
+    return this.type == Token.STRING_KEY;
   }
 
   public boolean isSuper() {
-    return this.getType() == Token.SUPER;
+    return this.type == Token.SUPER;
   }
 
   public boolean isSwitch() {
-    return this.getType() == Token.SWITCH;
+    return this.type == Token.SWITCH;
   }
 
   public boolean isTaggedTemplateLit(){
-    return this.getType() == Token.TAGGED_TEMPLATELIT;
+    return this.type == Token.TAGGED_TEMPLATELIT;
   }
 
   public boolean isTemplateLit(){
-    return this.getType() == Token.TEMPLATELIT;
+    return this.type == Token.TEMPLATELIT;
   }
 
   public boolean isTemplateLitSub(){
-    return this.getType() == Token.TEMPLATELIT_SUB;
+    return this.type == Token.TEMPLATELIT_SUB;
   }
 
   public boolean isThis() {
-    return this.getType() == Token.THIS;
+    return this.type == Token.THIS;
   }
 
   public boolean isThrow() {
-    return this.getType() == Token.THROW;
+    return this.type == Token.THROW;
   }
 
   public boolean isTrue() {
-    return this.getType() == Token.TRUE;
+    return this.type == Token.TRUE;
   }
 
   public boolean isTry() {
-    return this.getType() == Token.TRY;
+    return this.type == Token.TRY;
   }
 
   public boolean isTypeOf() {
-    return this.getType() == Token.TYPEOF;
+    return this.type == Token.TYPEOF;
   }
 
   public boolean isVar() {
-    return this.getType() == Token.VAR;
+    return this.type == Token.VAR;
   }
 
   public boolean isVoid() {
-    return this.getType() == Token.VOID;
+    return this.type == Token.VOID;
   }
 
   public boolean isWhile() {
-    return this.getType() == Token.WHILE;
+    return this.type == Token.WHILE;
   }
 
   public boolean isWith() {
-    return this.getType() == Token.WITH;
+    return this.type == Token.WITH;
   }
 
   public boolean isYield() {
-    return this.getType() == Token.YIELD;
+    return this.type == Token.YIELD;
   }
 }
diff --git a/src/com/google/javascript/rhino/Node.java b/src/com/google/javascript/rhino/Node.java
index fd6338b..1414989 100644
--- a/src/com/google/javascript/rhino/Node.java
+++ b/src/com/google/javascript/rhino/Node.java
@@ -993,7 +993,7 @@
 
   /** Can only be called when <tt>getType() == TokenStream.NUMBER</tt> */
   public double getDouble() throws UnsupportedOperationException {
-    if (this.getType() == Token.NUMBER) {
+    if (this.type == Token.NUMBER) {
       throw new IllegalStateException(
           "Number node not created with Node.newNumber");
     } else {
@@ -1006,7 +1006,7 @@
    * @param value value to set.
    */
   public void setDouble(double value) throws UnsupportedOperationException {
-    if (this.getType() == Token.NUMBER) {
+    if (this.type == Token.NUMBER) {
       throw new IllegalStateException(
           "Number node not created with Node.newNumber");
     } else {
@@ -1016,7 +1016,7 @@
 
   /** Can only be called when node has String context. */
   public String getString() throws UnsupportedOperationException {
-    if (this.getType() == Token.STRING) {
+    if (this.type == Token.STRING) {
       throw new IllegalStateException(
           "String node not created with Node.newString");
     } else {
@@ -1029,7 +1029,7 @@
    * @param value the value to set.
    */
   public void setString(String value) throws UnsupportedOperationException {
-    if (this.getType() == Token.STRING || this.getType() == Token.NAME) {
+    if (this.type == Token.STRING || this.type == Token.NAME) {
       throw new IllegalStateException(
           "String node not created with Node.newString");
     } else {
@@ -1065,7 +1065,7 @@
       // In the case of JsDoc trees, the first child is often not a string
       // which causes exceptions to be thrown when calling toString or
       // toStringTree.
-      if (first == null || first.getType() != Token.NAME) {
+      if (first == null || first.type != Token.NAME) {
         sb.append("<invalid>");
       } else {
         sb.append(first.getString());
@@ -1666,7 +1666,7 @@
    */
   boolean isEquivalentTo(
       Node node, boolean compareType, boolean recurse, boolean jsDoc) {
-    if (type != node.getType()
+    if (type != node.type
         || getChildCount() != node.getChildCount()
         || this.getClass() != node.getClass()) {
       return false;
@@ -2557,99 +2557,99 @@
   /*** AST type check methods ***/
 
   public boolean isAdd() {
-    return this.getType() == Token.ADD;
+    return this.type == Token.ADD;
   }
 
   public boolean isAnd() {
-    return this.getType() == Token.AND;
+    return this.type == Token.AND;
   }
 
   public boolean isArrayLit() {
-    return this.getType() == Token.ARRAYLIT;
+    return this.type == Token.ARRAYLIT;
   }
 
   public boolean isArrayPattern() {
-    return this.getType() == Token.ARRAY_PATTERN;
+    return this.type == Token.ARRAY_PATTERN;
   }
 
   public boolean isAssign() {
-    return this.getType() == Token.ASSIGN;
+    return this.type == Token.ASSIGN;
   }
 
   public boolean isAssignAdd() {
-    return this.getType() == Token.ASSIGN_ADD;
+    return this.type == Token.ASSIGN_ADD;
   }
 
   public boolean isBlock() {
-    return this.getType() == Token.BLOCK;
+    return this.type == Token.BLOCK;
   }
 
   public boolean isBreak() {
-    return this.getType() == Token.BREAK;
+    return this.type == Token.BREAK;
   }
 
   public boolean isCall() {
-    return this.getType() == Token.CALL;
+    return this.type == Token.CALL;
   }
 
   public boolean isCase() {
-    return this.getType() == Token.CASE;
+    return this.type == Token.CASE;
   }
 
   public boolean isCast() {
-    return this.getType() == Token.CAST;
+    return this.type == Token.CAST;
   }
 
   public boolean isCatch() {
-    return this.getType() == Token.CATCH;
+    return this.type == Token.CATCH;
   }
 
   public boolean isClass() {
-    return this.getType() == Token.CLASS;
+    return this.type == Token.CLASS;
   }
 
   public boolean isClassMembers() {
-    return this.getType() == Token.CLASS_MEMBERS;
+    return this.type == Token.CLASS_MEMBERS;
   }
 
   public boolean isComma() {
-    return this.getType() == Token.COMMA;
+    return this.type == Token.COMMA;
   }
 
   public boolean isComputedProp() {
-    return this.getType() == Token.COMPUTED_PROP;
+    return this.type == Token.COMPUTED_PROP;
   }
 
   public boolean isContinue() {
-    return this.getType() == Token.CONTINUE;
+    return this.type == Token.CONTINUE;
   }
 
   public boolean isConst() {
-    return this.getType() == Token.CONST;
+    return this.type == Token.CONST;
   }
 
   public boolean isDebugger() {
-    return this.getType() == Token.DEBUGGER;
+    return this.type == Token.DEBUGGER;
   }
 
   public boolean isDec() {
-    return this.getType() == Token.DEC;
+    return this.type == Token.DEC;
   }
 
   public boolean isDefaultCase() {
-    return this.getType() == Token.DEFAULT_CASE;
+    return this.type == Token.DEFAULT_CASE;
   }
 
   public boolean isDefaultValue() {
-    return this.getType() == Token.DEFAULT_VALUE;
+    return this.type == Token.DEFAULT_VALUE;
   }
 
   public boolean isDelProp() {
-    return this.getType() == Token.DELPROP;
+    return this.type == Token.DELPROP;
   }
 
   public boolean isDestructuringLhs() {
-    return this.getType() == Token.DESTRUCTURING_LHS;
+    return this.type == Token.DESTRUCTURING_LHS;
   }
 
   public boolean isDestructuringPattern() {
@@ -2657,242 +2657,242 @@
   }
 
   public boolean isDo() {
-    return this.getType() == Token.DO;
+    return this.type == Token.DO;
   }
 
   public boolean isEmpty() {
-    return this.getType() == Token.EMPTY;
+    return this.type == Token.EMPTY;
   }
 
   public boolean isExport() {
-    return this.getType() == Token.EXPORT;
+    return this.type == Token.EXPORT;
   }
 
   public boolean isExprResult() {
-    return this.getType() == Token.EXPR_RESULT;
+    return this.type == Token.EXPR_RESULT;
   }
 
   public boolean isFalse() {
-    return this.getType() == Token.FALSE;
+    return this.type == Token.FALSE;
   }
 
   public boolean isFor() {
-    return this.getType() == Token.FOR;
+    return this.type == Token.FOR;
   }
 
   public boolean isForOf() {
-    return this.getType() == Token.FOR_OF;
+    return this.type == Token.FOR_OF;
   }
 
   public boolean isFunction() {
-    return this.getType() == Token.FUNCTION;
+    return this.type == Token.FUNCTION;
   }
 
   public boolean isGetterDef() {
-    return this.getType() == Token.GETTER_DEF;
+    return this.type == Token.GETTER_DEF;
   }
 
   public boolean isGetElem() {
-    return this.getType() == Token.GETELEM;
+    return this.type == Token.GETELEM;
   }
 
   public boolean isGetProp() {
-    return this.getType() == Token.GETPROP;
+    return this.type == Token.GETPROP;
   }
 
   public boolean isHook() {
-    return this.getType() == Token.HOOK;
+    return this.type == Token.HOOK;
   }
 
   public boolean isIf() {
-    return this.getType() == Token.IF;
+    return this.type == Token.IF;
   }
 
   public boolean isImport() {
-    return this.getType() == Token.IMPORT;
+    return this.type == Token.IMPORT;
   }
 
   public boolean isImportSpec() {
-    return this.getType() == Token.IMPORT_SPEC;
+    return this.type == Token.IMPORT_SPEC;
   }
 
   public boolean isIn() {
-    return this.getType() == Token.IN;
+    return this.type == Token.IN;
   }
 
   public boolean isInc() {
-    return this.getType() == Token.INC;
+    return this.type == Token.INC;
   }
 
   public boolean isInstanceOf() {
-    return this.getType() == Token.INSTANCEOF;
+    return this.type == Token.INSTANCEOF;
   }
 
   public boolean isInterfaceMembers() {
-    return this.getType() == Token.INTERFACE_MEMBERS;
+    return this.type == Token.INTERFACE_MEMBERS;
   }
 
   public boolean isRecordType() {
-    return this.getType() == Token.RECORD_TYPE;
+    return this.type == Token.RECORD_TYPE;
   }
 
   public boolean isCallSignature() {
-    return this.getType() == Token.CALL_SIGNATURE;
+    return this.type == Token.CALL_SIGNATURE;
   }
 
   public boolean isIndexSignature() {
-    return this.getType() == Token.INDEX_SIGNATURE;
+    return this.type == Token.INDEX_SIGNATURE;
   }
 
   public boolean isLabel() {
-    return this.getType() == Token.LABEL;
+    return this.type == Token.LABEL;
   }
 
   public boolean isLabelName() {
-    return this.getType() == Token.LABEL_NAME;
+    return this.type == Token.LABEL_NAME;
   }
 
   public boolean isLet() {
-    return this.getType() == Token.LET;
+    return this.type == Token.LET;
   }
 
   public boolean isMemberFunctionDef() {
-    return this.getType() == Token.MEMBER_FUNCTION_DEF;
+    return this.type == Token.MEMBER_FUNCTION_DEF;
   }
 
   public boolean isMemberVariableDef() {
-    return this.getType() == Token.MEMBER_VARIABLE_DEF;
+    return this.type == Token.MEMBER_VARIABLE_DEF;
   }
 
   public boolean isName() {
-    return this.getType() == Token.NAME;
+    return this.type == Token.NAME;
   }
 
   public boolean isNE() {
-    return this.getType() == Token.NE;
+    return this.type == Token.NE;
   }
 
   public boolean isNew() {
-    return this.getType() == Token.NEW;
+    return this.type == Token.NEW;
   }
 
   public boolean isNot() {
-    return this.getType() == Token.NOT;
+    return this.type == Token.NOT;
   }
 
   public boolean isNull() {
-    return this.getType() == Token.NULL;
+    return this.type == Token.NULL;
   }
 
   public boolean isNumber() {
-    return this.getType() == Token.NUMBER;
+    return this.type == Token.NUMBER;
   }
 
   public boolean isObjectLit() {
-    return this.getType() == Token.OBJECTLIT;
+    return this.type == Token.OBJECTLIT;
   }
 
   public boolean isObjectPattern() {
-    return this.getType() == Token.OBJECT_PATTERN;
+    return this.type == Token.OBJECT_PATTERN;
   }
 
   public boolean isOr() {
-    return this.getType() == Token.OR;
+    return this.type == Token.OR;
   }
 
   public boolean isParamList() {
-    return this.getType() == Token.PARAM_LIST;
+    return this.type == Token.PARAM_LIST;
   }
 
   public boolean isRegExp() {
-    return this.getType() == Token.REGEXP;
+    return this.type == Token.REGEXP;
   }
 
   public boolean isRest() {
-    return this.getType() == Token.REST;
+    return this.type == Token.REST;
   }
 
   public boolean isReturn() {
-    return this.getType() == Token.RETURN;
+    return this.type == Token.RETURN;
   }
 
   public boolean isScript() {
-    return this.getType() == Token.SCRIPT;
+    return this.type == Token.SCRIPT;
   }
 
   public boolean isSetterDef() {
-    return this.getType() == Token.SETTER_DEF;
+    return this.type == Token.SETTER_DEF;
   }
 
   public boolean isSpread() {
-    return this.getType() == Token.SPREAD;
+    return this.type == Token.SPREAD;
   }
 
   public boolean isString() {
-    return this.getType() == Token.STRING;
+    return this.type == Token.STRING;
   }
 
   public boolean isStringKey() {
-    return this.getType() == Token.STRING_KEY;
+    return this.type == Token.STRING_KEY;
   }
 
   public boolean isSuper() {
-    return this.getType() == Token.SUPER;
+    return this.type == Token.SUPER;
   }
 
   public boolean isSwitch() {
-    return this.getType() == Token.SWITCH;
+    return this.type == Token.SWITCH;
   }
 
   public boolean isTaggedTemplateLit(){
-    return this.getType() == Token.TAGGED_TEMPLATELIT;
+    return this.type == Token.TAGGED_TEMPLATELIT;
   }
 
   public boolean isTemplateLit(){
-    return this.getType() == Token.TEMPLATELIT;
+    return this.type == Token.TEMPLATELIT;
   }
 
   public boolean isTemplateLitSub(){
-    return this.getType() == Token.TEMPLATELIT_SUB;
+    return this.type == Token.TEMPLATELIT_SUB;
   }
 
   public boolean isThis() {
-    return this.getType() == Token.THIS;
+    return this.type == Token.THIS;
   }
 
   public boolean isThrow() {
-    return this.getType() == Token.THROW;
+    return this.type == Token.THROW;
   }
 
   public boolean isTrue() {
-    return this.getType() == Token.TRUE;
+    return this.type == Token.TRUE;
   }
 
   public boolean isTry() {
-    return this.getType() == Token.TRY;
+    return this.type == Token.TRY;
   }
 
   public boolean isTypeOf() {
-    return this.getType() == Token.TYPEOF;
+    return this.type == Token.TYPEOF;
   }
 
   public boolean isVar() {
-    return this.getType() == Token.VAR;
+    return this.type == Token.VAR;
   }
 
   public boolean isVoid() {
-    return this.getType() == Token.VOID;
+    return this.type == Token.VOID;
   }
 
   public boolean isWhile() {
-    return this.getType() == Token.WHILE;
+    return this.type == Token.WHILE;
   }
 
   public boolean isWith() {
-    return this.getType() == Token.WITH;
+    return this.type == Token.WITH;
   }
 
   public boolean isYield() {
-    return this.getType() == Token.YIELD;
+    return this.type == Token.YIELD;
   }
 }
