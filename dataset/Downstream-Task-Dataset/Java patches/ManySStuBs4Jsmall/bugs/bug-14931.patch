diff --git a/guava/src/com/google/common/io/ByteStreams.java b/guava/src/com/google/common/io/ByteStreams.java
index 6b4bfa0..4259d2b 100644
--- a/guava/src/com/google/common/io/ByteStreams.java
+++ b/guava/src/com/google/common/io/ByteStreams.java
@@ -127,7 +127,7 @@
 
     @Override
     public String toString() {
-      return "ByteStreams.newByteSource(" + BaseEncoding.base16().encode(bytes) + ")";
+      return "ByteStreams.asByteSource(" + BaseEncoding.base16().encode(bytes) + ")";
     }
   }
 
diff --git a/guava/src/com/google/common/io/CharStreams.java b/guava/src/com/google/common/io/CharStreams.java
index 7666a96..6d9999d 100644
--- a/guava/src/com/google/common/io/CharStreams.java
+++ b/guava/src/com/google/common/io/CharStreams.java
@@ -149,7 +149,7 @@
       String limited = (string.length() <= 15)
           ? string
           : string.substring(0, 12) + "...";
-      return "CharStreams.newCharSource(" + limited + ")";
+      return "CharStreams.asCharSource(" + limited + ")";
     }
   }
 
diff --git a/guava/src/com/google/common/io/Files.java b/guava/src/com/google/common/io/Files.java
index 98aac69..c3dd506 100644
--- a/guava/src/com/google/common/io/Files.java
+++ b/guava/src/com/google/common/io/Files.java
@@ -191,7 +191,7 @@
 
     @Override
     public String toString() {
-      return "Files.newByteSource(" + file + ")";
+      return "Files.asByteSource(" + file + ")";
     }
   }
 
@@ -225,7 +225,7 @@
 
     @Override
     public String toString() {
-      return "Files.newByteSink(" + file + ", " + modes + ")";
+      return "Files.asByteSink(" + file + ", " + modes + ")";
     }
   }
 
diff --git a/guava/src/com/google/common/io/ByteStreams.java b/guava/src/com/google/common/io/ByteStreams.java
index 6b4bfa0..4259d2b 100644
--- a/guava/src/com/google/common/io/ByteStreams.java
+++ b/guava/src/com/google/common/io/ByteStreams.java
@@ -127,7 +127,7 @@
 
     @Override
     public String toString() {
-      return "ByteStreams.newByteSource(" + BaseEncoding.base16().encode(bytes) + ")";
+      return "ByteStreams.asByteSource(" + BaseEncoding.base16().encode(bytes) + ")";
     }
   }
 
