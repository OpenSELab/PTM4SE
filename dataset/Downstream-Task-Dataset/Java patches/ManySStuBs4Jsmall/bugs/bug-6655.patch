diff --git a/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java b/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java
index 207fc6c..81adea0 100644
--- a/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java
+++ b/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java
@@ -503,7 +503,7 @@
 
 		// Try to create initial execution graph from job graph
 		LOG.info("Creating initial execution graph from job graph " + job.getName());
-		ExecutionGraph eg = null;
+		ExecutionGraph eg;
 
 		try {
 			eg = new ExecutionGraph(job, this.instanceManager);
@@ -589,7 +589,7 @@
 			LibraryCacheManager.unregister(executionGraph.getJobID());
 		} catch (IOException ioe) {
 			if (LOG.isWarnEnabled()) {
-				LOG.warn(StringUtils.stringifyException(ioe));
+				LOG.warn(ioe);
 			}
 		}
 	}
@@ -959,7 +959,7 @@
 				try {
 					instance.killTaskManager();
 				} catch (IOException ioe) {
-					LOG.error(StringUtils.stringifyException(ioe));
+					LOG.error(ioe);
 				}
 			}
 		};
@@ -1052,7 +1052,7 @@
 						it2.next().logBufferUtilization();
 					}
 				} catch (IOException ioe) {
-					LOG.error(StringUtils.stringifyException(ioe));
+					LOG.error(ioe);
 				}
 
 			}
@@ -1187,9 +1187,9 @@
 			server = new WebInfoServer(config, port, this);
 			server.start();
 		} catch (FileNotFoundException e) {
-			LOG.error(e.getMessage());
+			LOG.error(e.getMessage(), e);
 		} catch (Exception e) {
-			LOG.error("Cannot instantiate info server: " + StringUtils.stringifyException(e));
+			LOG.error("Cannot instantiate info server: " + e.getMessage(), e);
 		}
 	}
 	
diff --git a/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/taskmanager/TaskManager.java b/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/taskmanager/TaskManager.java
index 4313755..a31a832 100644
--- a/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/taskmanager/TaskManager.java
+++ b/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/taskmanager/TaskManager.java
@@ -615,7 +615,7 @@
 				final TaskSubmissionResult result = new TaskSubmissionResult(vertexID,
 					AbstractTaskResult.ReturnCode.DEPLOYMENT_ERROR);
 				result.setDescription(StringUtils.stringifyException(t));
-				LOG.error(result.getDescription());
+				LOG.error(result.getDescription(), t);
 				submissionResultList.add(result);
 				continue;
 			}
@@ -632,7 +632,7 @@
 				final TaskSubmissionResult result = new TaskSubmissionResult(vertexID,
 					AbstractTaskResult.ReturnCode.INSUFFICIENT_RESOURCES);
 				result.setDescription(e.getMessage());
-				LOG.error(result.getDescription());
+				LOG.error(result.getDescription(), e);
 				submissionResultList.add(result);
 				continue;
 			}
@@ -667,8 +667,6 @@
 	 *        the job configuration that has been attached to the original job graph
 	 * @param environment
 	 *        the environment of the task to be registered
-	 * @param initialCheckpointState
-	 *        the task's initial checkpoint state
 	 * @param activeOutputChannels
 	 *        the set of initially active output channels
 	 * @return the task to be started or <code>null</code> if a task with the same ID was already running
@@ -686,7 +684,7 @@
 		}
 
 		// Task creation and registration must be atomic
-		Task task = null;
+		Task task;
 
 		synchronized (this) {
 			final Task runningTask = this.runningTasks.get(id);
@@ -810,7 +808,7 @@
 				this.jobManager.updateTaskExecutionState(new TaskExecutionState(jobID, id, newExecutionState,
 					optionalDescription));
 			} catch (IOException e) {
-				LOG.error(StringUtils.stringifyException(e));
+				LOG.error(e);
 			}
 		}
 	}
@@ -867,7 +865,7 @@
 				this.executorService.awaitTermination(5000L, TimeUnit.MILLISECONDS);
 			} catch (InterruptedException e) {
 				if (LOG.isDebugEnabled()) {
-					LOG.debug(StringUtils.stringifyException(e));
+					LOG.debug(e);
 				}
 			}
 		}
diff --git a/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java b/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java
index 207fc6c..81adea0 100644
--- a/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java
+++ b/stratosphere-runtime/src/main/java/eu/stratosphere/nephele/jobmanager/JobManager.java
@@ -503,7 +503,7 @@
 
 		// Try to create initial execution graph from job graph
 		LOG.info("Creating initial execution graph from job graph " + job.getName());
-		ExecutionGraph eg = null;
+		ExecutionGraph eg;
 
 		try {
 			eg = new ExecutionGraph(job, this.instanceManager);
@@ -589,7 +589,7 @@
 			LibraryCacheManager.unregister(executionGraph.getJobID());
 		} catch (IOException ioe) {
 			if (LOG.isWarnEnabled()) {
-				LOG.warn(StringUtils.stringifyException(ioe));
+				LOG.warn(ioe);
 			}
 		}
 	}
@@ -959,7 +959,7 @@
 				try {
 					instance.killTaskManager();
 				} catch (IOException ioe) {
-					LOG.error(StringUtils.stringifyException(ioe));
+					LOG.error(ioe);
 				}
 			}
 		};
@@ -1052,7 +1052,7 @@
 						it2.next().logBufferUtilization();
 					}
 				} catch (IOException ioe) {
-					LOG.error(StringUtils.stringifyException(ioe));
+					LOG.error(ioe);
 				}
 
 			}
@@ -1187,9 +1187,9 @@
 			server = new WebInfoServer(config, port, this);
 			server.start();
 		} catch (FileNotFoundException e) {
-			LOG.error(e.getMessage());
+			LOG.error(e.getMessage(), e);
 		} catch (Exception e) {
-			LOG.error("Cannot instantiate info server: " + StringUtils.stringifyException(e));
+			LOG.error("Cannot instantiate info server: " + e.getMessage(), e);
 		}
 	}
 	
