diff --git a/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java b/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java
index 83b82c5..e5e53ff 100644
--- a/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java
+++ b/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java
@@ -48,7 +48,7 @@
             case ALLOW:
                 return segments;
             case TRUNCATE:
-                return new byte[][] {segments[0]};
+                return new byte[][] {java.util.Arrays.copyOfRange(shortMessage, 0, segments[0].length)};
             case REJECT:
                 // FIXME - JSMPP needs to have an enum of the negative response
                 // codes instead of just using them like this
diff --git a/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java b/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java
index 83b82c5..e5e53ff 100644
--- a/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java
+++ b/components/camel-smpp/src/main/java/org/apache/camel/component/smpp/SmppSmCommand.java
@@ -48,7 +48,7 @@
             case ALLOW:
                 return segments;
             case TRUNCATE:
-                return new byte[][] {segments[0]};
+                return new byte[][] {java.util.Arrays.copyOfRange(shortMessage, 0, segments[0].length)};
             case REJECT:
                 // FIXME - JSMPP needs to have an enum of the negative response
                 // codes instead of just using them like this
