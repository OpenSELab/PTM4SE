diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java
index 92abf79..ce5e21d 100644
--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java
+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java
@@ -145,7 +145,10 @@
             // Perform request to the deployment on server where OpenTracing is disabled. Deployment must not have a Tracer instance available.
             // Actually 500 internal server error is responded with NoClassDefFoundError.
             response = Utils.makeCall(requestUri, 500);
-            Assert.assertTrue(response.contains("java.lang.NoClassDefFoundError: Lio/opentracing/Tracer"));
+            Assert.assertTrue(
+                    "HTTP response did not contain expected exception indicating that opentracing Tracer is not available.",
+                    response.matches("(?s).*java\\.lang\\.NoClassDefFoundError: L*io.opentracing.Tracer.*"));
+            // really dots because openjdk uses '/' whereas ibmjdk uses '.'      ---^        ---^
         } finally {
             opentracingSubsystem(ModelDescriptionConstants.ADD, managementClient.getControllerClient());
         }
diff --git a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java
index 92abf79..ce5e21d 100644
--- a/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java
+++ b/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/microprofile/opentracing/OnOffOpenTracingTestCase.java
@@ -145,7 +145,10 @@
             // Perform request to the deployment on server where OpenTracing is disabled. Deployment must not have a Tracer instance available.
             // Actually 500 internal server error is responded with NoClassDefFoundError.
             response = Utils.makeCall(requestUri, 500);
-            Assert.assertTrue(response.contains("java.lang.NoClassDefFoundError: Lio/opentracing/Tracer"));
+            Assert.assertTrue(
+                    "HTTP response did not contain expected exception indicating that opentracing Tracer is not available.",
+                    response.matches("(?s).*java\\.lang\\.NoClassDefFoundError: L*io.opentracing.Tracer.*"));
+            // really dots because openjdk uses '/' whereas ibmjdk uses '.'      ---^        ---^
         } finally {
             opentracingSubsystem(ModelDescriptionConstants.ADD, managementClient.getControllerClient());
         }
