diff --git a/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java b/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java
index d585595..e3fca72 100644
--- a/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java
+++ b/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java
@@ -289,7 +289,7 @@
             try {
                 String udn = provider.getUDN(itemName);
                 logger.trace("item '{}' has UDN '{}'", itemName, udn);
-                logger.trace("Command '{}' is about to be send to item '{}'", command, itemName);
+                logger.trace("Command '{}' is about to be sent to item '{}'", command, itemName);
                 sendCommand(itemName, command);
 
             } catch (Exception e) {
diff --git a/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/api/WithingsAuthenticator.java b/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/api/WithingsAuthenticator.java
index c6ef952..b5ef749 100644
--- a/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/api/WithingsAuthenticator.java
+++ b/bundles/binding/org.openhab.binding.withings/src/main/java/org/openhab/binding/withings/internal/api/WithingsAuthenticator.java
diff --git a/bundles/binding/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/YamahaReceiverBinding.java b/bundles/binding/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/YamahaReceiverBinding.java
index abd2587..addf765 100644
--- a/bundles/binding/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/YamahaReceiverBinding.java
+++ b/bundles/binding/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/YamahaReceiverBinding.java
@@ -36,7 +36,7 @@
 import org.slf4j.LoggerFactory;
 
 /**
- * Yamaha Reciever binding. Handles all commands and polls configured devices to
+ * Yamaha Receiver binding. Handles all commands and polls configured devices to
  * process updates.
  *
  * @author Eric Thill
diff --git a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBinding.java b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBinding.java
index 1365cbb..e9b13ee 100644
--- a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBinding.java
+++ b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBinding.java
@@ -132,7 +132,7 @@
         logger.info("Shutting down zibase connection and/or thread...");
         zibaseListener.shutdown();
         zibase = null;
-        logger.info("Zibase binding desactivated");
+        logger.info("Zibase binding deactivated");
     }
 
     /**
diff --git a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigEmitter.java b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigEmitter.java
index e5ff847..4b7a55c 100644
--- a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigEmitter.java
+++ b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigEmitter.java
@@ -88,7 +88,7 @@
      */
     @Override
     public void sendCommand(Zibase zibase, Command command, int dim) {
-        logger.error("sendCommand : not implemeted for Config receiver");
+        logger.error("sendCommand : not implemented for Config receiver");
     }
 
     /**
diff --git a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigVariable.java b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigVariable.java
index 51ce039..1b08c1f 100644
--- a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigVariable.java
+++ b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseBindingConfigVariable.java
@@ -58,7 +58,7 @@
      */
     @Override
     protected boolean isItemConfigValid() {
-        logger.info("Checking config for variable nÂ°" + this.getId());
+        logger.info("Checking config for variable " + this.getId());
 
         int variableNumber = Integer.parseInt(this.getId());
 
diff --git a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseListener.java b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseListener.java
index 98cb31c..75067bc 100644
--- a/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseListener.java
+++ b/bundles/binding/org.openhab.binding.zibase/src/main/java/org/openhab/binding/zibase/internal/ZibaseListener.java
@@ -161,7 +161,7 @@
             } catch (UnknownHostException ex) {
                 logger.error("Given Zibase host not reachable : " + ex);
             } catch (IOException ex) {
-                logger.error("IO eror reading Zibase soket : " + ex);
+                logger.error("IO eror reading Zibase socket : " + ex);
             }
 
         } else {
diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/converter/ZWaveIndicatorConverter.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/converter/ZWaveIndicatorConverter.java
index 000fe55..3ac0ca9 100644
--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/converter/ZWaveIndicatorConverter.java
+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/converter/ZWaveIndicatorConverter.java
@@ -208,7 +208,7 @@
      * {@inheritDoc}
      *
      * The node's indicator status can change at any time, and without the knowledge of the Z-Wave binding so
-     * before any changes are made to the indicator we need to get it's actual value from the device.
+     * before any changes are made to the indicator we need to get its actual value from the device.
      * Hence the receiveCommand method adds the desired command to a "pending" list, and issues an INDICATOR_GET
      * it does not change the actual device Indicator value.
      *
diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java
index f82bca0..170dad6 100644
--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java
+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveMultiInstanceCommandClass.java
@@ -109,7 +109,7 @@
     };
 
     /**
-     * Gets the endpoint object using it's endpoint ID as key.
+     * Gets the endpoint object using its endpoint ID as key.
      * Returns null if the endpoint is not found.
      *
      * @param endpointId the endpoint ID of the endpoint to get.
diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveWakeUpCommandClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveWakeUpCommandClass.java
index d215ea9..e7324ce 100644
--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveWakeUpCommandClass.java
+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/commandclass/ZWaveWakeUpCommandClass.java
@@ -414,7 +414,7 @@
         // Send the next message in the wake-up queue
         if (!this.wakeUpQueue.isEmpty()) {
             // Get the next message from the queue.
-            // Bump it's priority to highest to try and send it while the node is awake
+            // Bump its priority to highest to try and send it while the node is awake
             serialMessage = this.wakeUpQueue.poll();
             serialMessage.setPriority(SerialMessagePriority.Immediate);
             this.getController().sendData(serialMessage);
@@ -458,7 +458,7 @@
             // We send the first message, and when that's ACKed, we sent the next
             if (!this.wakeUpQueue.isEmpty()) {
                 // Get the next message from the queue.
-                // Bump it's priority to highest to try and send it while the node is awake
+                // Bump its priority to highest to try and send it while the node is awake
                 SerialMessage serialMessage = this.wakeUpQueue.poll();
                 serialMessage.setPriority(SerialMessagePriority.Immediate);
                 this.getController().sendData(serialMessage);
diff --git a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/IdentifyNodeMessageClass.java b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/IdentifyNodeMessageClass.java
index fcac435..6a1cebb 100644
--- a/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/IdentifyNodeMessageClass.java
+++ b/bundles/binding/org.openhab.binding.zwave/src/main/java/org/openhab/binding/zwave/internal/protocol/serialmessage/IdentifyNodeMessageClass.java
@@ -118,7 +118,7 @@
         // If restored the node from configuration file then
         // the classes will already exist and this will be ignored
 
-        // Add mandatory command classes as specified by it's generic device class.
+        // Add mandatory command classes as specified by its generic device class.
         for (CommandClass commandClass : generic.getMandatoryCommandClasses()) {
             ZWaveCommandClass zwaveCommandClass = ZWaveCommandClass.getInstance(commandClass.getKey(), node,
                     zController);
@@ -127,7 +127,7 @@
             }
         }
 
-        // Add mandatory command classes as specified by it's specific device class.
+        // Add mandatory command classes as specified by its specific device class.
         for (CommandClass commandClass : specific.getMandatoryCommandClasses()) {
             ZWaveCommandClass zwaveCommandClass = ZWaveCommandClass.getInstance(commandClass.getKey(), node,
                     zController);
diff --git a/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java b/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java
index d585595..e3fca72 100644
--- a/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java
+++ b/bundles/binding/org.openhab.binding.wemo/src/main/java/org/openhab/binding/wemo/internal/WemoBinding.java
@@ -289,7 +289,7 @@
             try {
                 String udn = provider.getUDN(itemName);
                 logger.trace("item '{}' has UDN '{}'", itemName, udn);
-                logger.trace("Command '{}' is about to be send to item '{}'", command, itemName);
+                logger.trace("Command '{}' is about to be sent to item '{}'", command, itemName);
                 sendCommand(itemName, command);
 
             } catch (Exception e) {
