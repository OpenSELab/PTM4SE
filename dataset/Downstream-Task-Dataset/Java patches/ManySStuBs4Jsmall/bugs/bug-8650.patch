diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java
index 1e32f4f..09fb6ec 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java
@@ -34,7 +34,7 @@
 public class ExclusionBeforeExecutionFileFilterTest extends AbstractModuleTestSupport {
     @Override
     protected String getPackageLocation() {
-        return "com/puppycrawl/tools/checkstyle/filefilters";
+        return "com/puppycrawl/tools/checkstyle/filefilters/exclusionbeforeexecutionfilefilter";
     }
 
     @Test
@@ -71,7 +71,8 @@
         filterConfig.addAttribute("fileNamePattern", "IncorrectClass\\.java");
 
         final String[] violations = CommonUtils.EMPTY_STRING_ARRAY;
-        verify(createChecker(filterConfig), getNonCompilablePath("InputIncorrectClass.java"),
+        verify(createChecker(filterConfig),
+                getNonCompilablePath("InputExclusionBeforeExecutionFileFilterIncorrectClass.java"),
                 violations);
     }
 
diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java
index 1e32f4f..09fb6ec 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/filefilters/ExclusionBeforeExecutionFileFilterTest.java
@@ -34,7 +34,7 @@
 public class ExclusionBeforeExecutionFileFilterTest extends AbstractModuleTestSupport {
     @Override
     protected String getPackageLocation() {
-        return "com/puppycrawl/tools/checkstyle/filefilters";
+        return "com/puppycrawl/tools/checkstyle/filefilters/exclusionbeforeexecutionfilefilter";
     }
 
     @Test
@@ -71,7 +71,8 @@
         filterConfig.addAttribute("fileNamePattern", "IncorrectClass\\.java");
 
         final String[] violations = CommonUtils.EMPTY_STRING_ARRAY;
-        verify(createChecker(filterConfig), getNonCompilablePath("InputIncorrectClass.java"),
+        verify(createChecker(filterConfig),
+                getNonCompilablePath("InputExclusionBeforeExecutionFileFilterIncorrectClass.java"),
                 violations);
     }
 
