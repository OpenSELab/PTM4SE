diff --git a/guava/src/com/google/common/collect/Queues.java b/guava/src/com/google/common/collect/Queues.java
index 7a927de..1e977b7 100644
--- a/guava/src/com/google/common/collect/Queues.java
+++ b/guava/src/com/google/common/collect/Queues.java
@@ -179,9 +179,10 @@
   /**
    * Creates an empty {@code PriorityBlockingQueue} with the ordering given by its
    * elements' natural ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  // TODO(user): These should be <E extends Comparable>
-  public static <E> PriorityBlockingQueue<E> newPriorityBlockingQueue() {
+  public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue() {
     return new PriorityBlockingQueue<E>();
   }
 
@@ -190,8 +191,10 @@
    *
    * <b>Note:</b> If the specified iterable is a {@code SortedSet} or a {@code PriorityQueue},
    * this priority queue will be ordered according to the same ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  public static <E> PriorityBlockingQueue<E> newPriorityBlockingQueue(
+  public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(
       Iterable<? extends E> elements) {
     if (elements instanceof Collection) {
       return new PriorityBlockingQueue<E>(Collections2.cast(elements));
@@ -206,8 +209,10 @@
   /**
    * Creates an empty {@code PriorityQueue} with the ordering given by its
    * elements' natural ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  public static <E> PriorityQueue<E> newPriorityQueue() {
+  public static <E extends Comparable> PriorityQueue<E> newPriorityQueue() {
     return new PriorityQueue<E>();
   }
 
@@ -216,8 +221,11 @@
    *
    * <b>Note:</b> If the specified iterable is a {@code SortedSet} or a {@code PriorityQueue},
    * this priority queue will be ordered according to the same ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  public static <E> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements) {
+  public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(
+      Iterable<? extends E> elements) {
     if (elements instanceof Collection) {
       return new PriorityQueue<E>(Collections2.cast(elements));
     }
diff --git a/guava/src/com/google/common/collect/Queues.java b/guava/src/com/google/common/collect/Queues.java
index 7a927de..1e977b7 100644
--- a/guava/src/com/google/common/collect/Queues.java
+++ b/guava/src/com/google/common/collect/Queues.java
@@ -179,9 +179,10 @@
   /**
    * Creates an empty {@code PriorityBlockingQueue} with the ordering given by its
    * elements' natural ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  // TODO(user): These should be <E extends Comparable>
-  public static <E> PriorityBlockingQueue<E> newPriorityBlockingQueue() {
+  public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue() {
     return new PriorityBlockingQueue<E>();
   }
 
@@ -190,8 +191,10 @@
    *
    * <b>Note:</b> If the specified iterable is a {@code SortedSet} or a {@code PriorityQueue},
    * this priority queue will be ordered according to the same ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  public static <E> PriorityBlockingQueue<E> newPriorityBlockingQueue(
+  public static <E extends Comparable> PriorityBlockingQueue<E> newPriorityBlockingQueue(
       Iterable<? extends E> elements) {
     if (elements instanceof Collection) {
       return new PriorityBlockingQueue<E>(Collections2.cast(elements));
@@ -206,8 +209,10 @@
   /**
    * Creates an empty {@code PriorityQueue} with the ordering given by its
    * elements' natural ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  public static <E> PriorityQueue<E> newPriorityQueue() {
+  public static <E extends Comparable> PriorityQueue<E> newPriorityQueue() {
     return new PriorityQueue<E>();
   }
 
@@ -216,8 +221,11 @@
    *
    * <b>Note:</b> If the specified iterable is a {@code SortedSet} or a {@code PriorityQueue},
    * this priority queue will be ordered according to the same ordering.
+   *
+   * @since 11.0 (requires that {@code E} be {@code Comparable} since 15.0).
    */
-  public static <E> PriorityQueue<E> newPriorityQueue(Iterable<? extends E> elements) {
+  public static <E extends Comparable> PriorityQueue<E> newPriorityQueue(
+      Iterable<? extends E> elements) {
     if (elements instanceof Collection) {
       return new PriorityQueue<E>(Collections2.cast(elements));
     }
