diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java
index 1023500..fd213ad 100644
--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java
+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java
@@ -258,10 +258,10 @@
         if ( record.inUse() )
         {
             long prevProp = record.getPrevProp();
-            short prevModifier = prevProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((prevProp&0xF00000000L) >> 28);
+            long prevModifier = prevProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (prevProp&0xF00000000L) >> 28;
             
             long nextProp = record.getNextProp();
-            short nextModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp&0xF00000000L) >> 16);
+            long nextModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (nextProp&0xF00000000L) >> 16;
             
             // [    ,   x] in use
             // [xxxx,    ] high prev prop bits
@@ -384,9 +384,9 @@
         
         // [    ,    ][    ,    ][xxxx,xxxx][xxxx,xxxx] type
         // [    ,    ][    ,xxxx][    ,    ][    ,    ] high next prop bits
-        int typeInt = buffer.getInt();
+        long typeInt = buffer.getInt();
         
-        record.setType( getEnumType( typeInt&0xFFFF ) );
+        record.setType( getEnumType( (int)typeInt&0xFFFF ) );
         record.setInUse( true );
         record.setKeyIndexId( buffer.getInt() );
         record.setPropBlock( buffer.getLong() );
diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/util/RelIdArray.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/util/RelIdArray.java
index 0992a8c..3593380 100644
--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/util/RelIdArray.java
+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/util/RelIdArray.java
@@ -156,7 +156,7 @@
         IdBlock copy()
         {
             IdBlock copy = new IdBlock( highBits );
-            copy.ids = new int[length];
+            copy.ids = new int[ids.length];
             System.arraycopy( ids, 0, copy.ids, 0, length );
             copy.length = length;
             return copy;
diff --git a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java
index 1023500..fd213ad 100644
--- a/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java
+++ b/community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/PropertyStore.java
@@ -258,10 +258,10 @@
         if ( record.inUse() )
         {
             long prevProp = record.getPrevProp();
-            short prevModifier = prevProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((prevProp&0xF00000000L) >> 28);
+            long prevModifier = prevProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (prevProp&0xF00000000L) >> 28;
             
             long nextProp = record.getNextProp();
-            short nextModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp&0xF00000000L) >> 16);
+            long nextModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (nextProp&0xF00000000L) >> 16;
             
             // [    ,   x] in use
             // [xxxx,    ] high prev prop bits
@@ -384,9 +384,9 @@
         
         // [    ,    ][    ,    ][xxxx,xxxx][xxxx,xxxx] type
         // [    ,    ][    ,xxxx][    ,    ][    ,    ] high next prop bits
-        int typeInt = buffer.getInt();
+        long typeInt = buffer.getInt();
         
-        record.setType( getEnumType( typeInt&0xFFFF ) );
+        record.setType( getEnumType( (int)typeInt&0xFFFF ) );
         record.setInUse( true );
         record.setKeyIndexId( buffer.getInt() );
         record.setPropBlock( buffer.getLong() );
