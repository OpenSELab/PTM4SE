diff --git a/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java b/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java
index 2cfd793..c21aaf7 100644
--- a/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java
+++ b/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java
@@ -21,7 +21,7 @@
     public void descriptionStatesParameterName() throws Exception {
         TestedOnSupplier supplier = new TestedOnSupplier();
         List<PotentialAssignment> assignments = supplier.getValueSources(signatureOfFoo());
-        assertThat(assignments.get(0).getDescription(), is("ints"));
+        assertThat(assignments.get(0).getDescription(), is("ints: 1"));
     }
 
     private ParameterSignature signatureOfFoo() throws NoSuchMethodException {
diff --git a/src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java b/src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java
index e8343b8..44c5da4 100644
--- a/src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java
+++ b/src/test/java/org/junit/tests/experimental/theories/runner/UnsuccessfulWithDataPointFields.java
@@ -61,7 +61,7 @@
     @Test
     public void reportBadParams() throws Exception {
         assertThat(testResult(DoesntUseParams.class),
-                hasSingleFailureContaining("everythingIsZero(ONE, ONE)"));
+                hasSingleFailureContaining("everythingIsZero(ONE: 1, ONE: 1)"));
     }
 
     @RunWith(Theories.class)
diff --git a/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java b/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java
index 2cfd793..c21aaf7 100644
--- a/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java
+++ b/src/test/java/org/junit/tests/experimental/theories/TestedOnSupplierTest.java
@@ -21,7 +21,7 @@
     public void descriptionStatesParameterName() throws Exception {
         TestedOnSupplier supplier = new TestedOnSupplier();
         List<PotentialAssignment> assignments = supplier.getValueSources(signatureOfFoo());
-        assertThat(assignments.get(0).getDescription(), is("ints"));
+        assertThat(assignments.get(0).getDescription(), is("ints: 1"));
     }
 
     private ParameterSignature signatureOfFoo() throws NoSuchMethodException {
