diff --git a/gdx/src/com/badlogic/gdx/utils/JsonReader.java b/gdx/src/com/badlogic/gdx/utils/JsonReader.java
index 971eb76..835161b 100644
--- a/gdx/src/com/badlogic/gdx/utils/JsonReader.java
+++ b/gdx/src/com/badlogic/gdx/utils/JsonReader.java
@@ -172,20 +172,20 @@
 							while (_nacts-- > 0) {
 								switch (_json_actions[_acts++]) {
 								case 0:
-								// line 95 "JsonReader.rl"
+								// line 99 "JsonReader.rl"
 								{
 									s = p;
 									needsUnescape = false;
 								}
 									break;
 								case 1:
-								// line 99 "JsonReader.rl"
+								// line 103 "JsonReader.rl"
 								{
 									needsUnescape = true;
 								}
 									break;
 								case 2:
-								// line 102 "JsonReader.rl"
+								// line 106 "JsonReader.rl"
 								{
 									String name = new String(data, s, p - s);
 									s = p;
@@ -195,7 +195,7 @@
 								}
 									break;
 								case 3:
-								// line 109 "JsonReader.rl"
+								// line 113 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -206,7 +206,7 @@
 								}
 									break;
 								case 4:
-								// line 117 "JsonReader.rl"
+								// line 121 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -216,7 +216,7 @@
 								}
 									break;
 								case 5:
-								// line 124 "JsonReader.rl"
+								// line 128 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=true");
@@ -224,7 +224,7 @@
 								}
 									break;
 								case 6:
-								// line 129 "JsonReader.rl"
+								// line 133 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=false");
@@ -232,7 +232,7 @@
 								}
 									break;
 								case 7:
-								// line 134 "JsonReader.rl"
+								// line 138 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("null: " + name);
@@ -240,7 +240,7 @@
 								}
 									break;
 								case 8:
-								// line 139 "JsonReader.rl"
+								// line 143 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("startObject: " + name);
@@ -261,7 +261,7 @@
 								}
 									break;
 								case 9:
-								// line 145 "JsonReader.rl"
+								// line 149 "JsonReader.rl"
 								{
 									if (debug) System.out.println("endObject");
 									pop();
@@ -273,7 +273,7 @@
 								}
 									break;
 								case 10:
-								// line 150 "JsonReader.rl"
+								// line 154 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("startArray: " + name);
@@ -294,7 +294,7 @@
 								}
 									break;
 								case 11:
-								// line 156 "JsonReader.rl"
+								// line 160 "JsonReader.rl"
 								{
 									if (debug) System.out.println("endArray");
 									pop();
@@ -326,7 +326,7 @@
 							while (__nacts-- > 0) {
 								switch (_json_actions[__acts++]) {
 								case 3:
-								// line 109 "JsonReader.rl"
+								// line 113 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -337,7 +337,7 @@
 								}
 									break;
 								case 4:
-								// line 117 "JsonReader.rl"
+								// line 121 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -347,7 +347,7 @@
 								}
 									break;
 								case 5:
-								// line 124 "JsonReader.rl"
+								// line 128 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=true");
@@ -355,7 +355,7 @@
 								}
 									break;
 								case 6:
-								// line 129 "JsonReader.rl"
+								// line 133 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=false");
@@ -363,7 +363,7 @@
 								}
 									break;
 								case 7:
-								// line 134 "JsonReader.rl"
+								// line 138 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("null: " + name);
@@ -381,7 +381,7 @@
 				}
 			}
 
-			// line 185 "JsonReader.rl"
+			// line 190 "JsonReader.rl"
 
 		} catch (RuntimeException ex) {
 			parseRuntimeEx = ex;
@@ -408,17 +408,17 @@
 
 	// line 277 "JsonReader.java"
 	private static byte[] init__json_actions_0 () {
-		return new byte[] {0, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 8, 1, 9, 1, 10, 1, 11, 2, 0, 2, 2, 0, 3, 2, 3, 5, 2, 3, 6, 2, 3, 7,
-			2, 3, 9, 2, 3, 11, 2, 4, 9, 2, 4, 11, 3, 3, 5, 9, 3, 3, 5, 11, 3, 3, 6, 9, 3, 3, 6, 11, 3, 3, 7, 9, 3, 3, 7, 11};
+		return new byte[] {0, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 1, 11, 2, 0, 2, 2, 0, 3, 2, 3, 9,
+			2, 3, 11, 2, 4, 9, 2, 4, 11, 2, 5, 9, 2, 5, 11, 2, 6, 9, 2, 6, 11, 2, 7, 9, 2, 7, 11};
 	}
 
 	private static final byte _json_actions[] = init__json_actions_0();
 
 	private static short[] init__json_key_offsets_0 () {
 		return new short[] {0, 0, 19, 21, 23, 32, 35, 37, 41, 43, 55, 57, 59, 63, 82, 84, 86, 91, 102, 109, 118, 125, 128, 136,
-			138, 147, 151, 153, 160, 170, 178, 186, 194, 202, 209, 217, 225, 233, 240, 248, 256, 264, 271, 280, 301, 303, 305, 310,
-			330, 337, 340, 348, 350, 359, 363, 365, 372, 382, 390, 398, 406, 414, 421, 429, 437, 445, 452, 460, 468, 476, 483, 492,
-			495, 502, 508, 515, 520, 528, 536, 544, 552, 560, 567, 575, 583, 591, 598, 606, 614, 622, 629, 629};
+			138, 147, 151, 153, 160, 170, 178, 186, 194, 202, 207, 215, 223, 231, 236, 244, 252, 260, 265, 274, 295, 297, 299, 304,
+			324, 331, 334, 342, 344, 353, 357, 359, 366, 376, 384, 392, 400, 408, 413, 421, 429, 437, 442, 450, 458, 466, 471, 480,
+			483, 490, 496, 503, 508, 516, 524, 532, 540, 548, 551, 559, 567, 575, 578, 586, 594, 602, 605, 605};
 	}
 
 	private static final short _json_key_offsets[] = init__json_key_offsets_0();
@@ -431,29 +431,28 @@
 			102, 110, 114, 116, 117, 32, 44, 58, 93, 125, 9, 13, 48, 49, 57, 32, 44, 46, 69, 101, 125, 9, 13, 48, 57, 32, 44, 69,
 			101, 125, 9, 13, 48, 57, 43, 45, 48, 57, 48, 57, 32, 44, 125, 9, 13, 48, 57, 32, 44, 46, 69, 101, 125, 9, 13, 48, 57,
 			32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 115, 125, 9, 13, 32, 44, 58, 93, 101,
-			125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58,
-			93, 108, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32,
-			44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 34, 47, 92, 98, 102, 110, 114, 116, 117, 32, 34, 36, 44, 45,
-			48, 91, 93, 95, 102, 110, 116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 34, 92, 34, 92, 32, 44, 93, 9, 13, 32, 34, 36, 45,
-			48, 91, 93, 95, 102, 110, 116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 32, 44, 58, 93, 125, 9, 13, 48, 49, 57, 32, 44, 46,
-			69, 93, 101, 9, 13, 48, 57, 32, 44, 69, 93, 101, 9, 13, 48, 57, 43, 45, 48, 57, 48, 57, 32, 44, 93, 9, 13, 48, 57, 32,
-			44, 46, 69, 93, 101, 9, 13, 48, 57, 32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93,
-			115, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44,
-			58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13,
-			32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 34, 47, 92, 98, 102, 110,
-			114, 116, 117, 32, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 46, 69, 101, 9, 13, 32, 69, 101, 9, 13, 48, 57, 32, 9, 13, 48,
-			57, 32, 46, 69, 101, 9, 13, 48, 57, 32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93,
-			115, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44,
-			58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13,
-			32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 0};
+			125, 9, 13, 32, 44, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108,
+			125, 9, 13, 32, 44, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101,
+			125, 9, 13, 32, 44, 125, 9, 13, 34, 47, 92, 98, 102, 110, 114, 116, 117, 32, 34, 36, 44, 45, 48, 91, 93, 95, 102, 110,
+			116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 34, 92, 34, 92, 32, 44, 93, 9, 13, 32, 34, 36, 45, 48, 91, 93, 95, 102, 110,
+			116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 32, 44, 58, 93, 125, 9, 13, 48, 49, 57, 32, 44, 46, 69, 93, 101, 9, 13, 48,
+			57, 32, 44, 69, 93, 101, 9, 13, 48, 57, 43, 45, 48, 57, 48, 57, 32, 44, 93, 9, 13, 48, 57, 32, 44, 46, 69, 93, 101, 9,
+			13, 48, 57, 32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 115, 125, 9, 13, 32, 44,
+			58, 93, 101, 125, 9, 13, 32, 44, 93, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44,
+			58, 93, 108, 125, 9, 13, 32, 44, 93, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44,
+			58, 93, 101, 125, 9, 13, 32, 44, 93, 9, 13, 34, 47, 92, 98, 102, 110, 114, 116, 117, 32, 9, 13, 32, 44, 58, 93, 125, 9,
+			13, 32, 46, 69, 101, 9, 13, 32, 69, 101, 9, 13, 48, 57, 32, 9, 13, 48, 57, 32, 46, 69, 101, 9, 13, 48, 57, 32, 44, 58,
+			93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 115, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13,
+			32, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 9, 13,
+			32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 9, 13, 0};
 	}
 
 	private static final char _json_trans_keys[] = init__json_trans_keys_0();
 
 	private static byte[] init__json_single_lengths_0 () {
-		return new byte[] {0, 11, 2, 2, 7, 1, 0, 2, 0, 6, 2, 2, 2, 11, 2, 2, 3, 5, 5, 7, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 5,
-			6, 6, 6, 5, 6, 6, 6, 5, 7, 13, 2, 2, 3, 12, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 5, 6, 6, 6, 5, 6, 6, 6, 5, 7, 1, 5,
-			4, 3, 1, 4, 6, 6, 6, 6, 5, 6, 6, 6, 5, 6, 6, 6, 5, 0, 0};
+		return new byte[] {0, 11, 2, 2, 7, 1, 0, 2, 0, 6, 2, 2, 2, 11, 2, 2, 3, 5, 5, 7, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 3,
+			6, 6, 6, 3, 6, 6, 6, 3, 7, 13, 2, 2, 3, 12, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 3, 6, 6, 6, 3, 6, 6, 6, 3, 7, 1, 5,
+			4, 3, 1, 4, 6, 6, 6, 6, 1, 6, 6, 6, 1, 6, 6, 6, 1, 0, 0};
 	}
 
 	private static final byte _json_single_lengths[] = init__json_single_lengths_0();
@@ -468,9 +467,9 @@
 
 	private static short[] init__json_index_offsets_0 () {
 		return new short[] {0, 0, 16, 19, 22, 31, 34, 36, 40, 42, 52, 55, 58, 62, 78, 81, 84, 89, 98, 105, 114, 121, 124, 132, 134,
-			142, 146, 148, 154, 163, 171, 179, 187, 195, 202, 210, 218, 226, 233, 241, 249, 257, 264, 273, 291, 294, 297, 302, 319,
-			326, 329, 337, 339, 347, 351, 353, 359, 368, 376, 384, 392, 400, 407, 415, 423, 431, 438, 446, 454, 462, 469, 478, 481,
-			488, 494, 500, 504, 511, 519, 527, 535, 543, 550, 558, 566, 574, 581, 589, 597, 605, 612, 613};
+			142, 146, 148, 154, 163, 171, 179, 187, 195, 200, 208, 216, 224, 229, 237, 245, 253, 258, 267, 285, 288, 291, 296, 313,
+			320, 323, 331, 333, 341, 345, 347, 353, 362, 370, 378, 386, 394, 399, 407, 415, 423, 428, 436, 444, 452, 457, 466, 469,
+			476, 482, 488, 492, 499, 507, 515, 523, 531, 534, 542, 550, 558, 561, 569, 577, 585, 588, 589};
 	}
 
 	private static final short _json_index_offsets[] = init__json_index_offsets_0();
@@ -482,42 +481,40 @@
 			90, 17, 18, 18, 0, 12, 0, 13, 0, 0, 12, 18, 15, 15, 15, 15, 15, 15, 15, 15, 0, 16, 17, 0, 0, 90, 16, 20, 22, 28, 0, 16,
 			17, 23, 25, 25, 90, 16, 0, 24, 0, 16, 17, 25, 25, 90, 16, 24, 0, 26, 26, 27, 0, 27, 0, 16, 17, 90, 16, 27, 0, 16, 17,
 			23, 25, 25, 90, 16, 28, 0, 16, 17, 0, 0, 30, 90, 16, 20, 16, 17, 0, 0, 31, 90, 16, 20, 16, 17, 0, 0, 32, 90, 16, 20, 16,
-			17, 0, 0, 33, 90, 16, 20, 16, 17, 0, 0, 90, 16, 20, 16, 17, 0, 0, 35, 90, 16, 20, 16, 17, 0, 0, 36, 90, 16, 20, 16, 17,
-			0, 0, 37, 90, 16, 20, 16, 17, 0, 0, 90, 16, 20, 16, 17, 0, 0, 39, 90, 16, 20, 16, 17, 0, 0, 40, 90, 16, 20, 16, 17, 0,
-			0, 41, 90, 16, 20, 16, 17, 0, 0, 90, 16, 20, 11, 11, 11, 11, 11, 11, 11, 11, 0, 43, 44, 48, 47, 49, 50, 46, 91, 48, 57,
-			62, 66, 46, 43, 56, 48, 48, 0, 46, 70, 45, 46, 70, 45, 46, 47, 91, 46, 0, 47, 44, 48, 49, 50, 46, 91, 48, 57, 62, 66,
-			46, 47, 56, 48, 48, 0, 46, 47, 0, 91, 0, 46, 48, 50, 56, 0, 46, 47, 51, 53, 91, 53, 46, 0, 52, 0, 46, 47, 53, 91, 53,
-			46, 52, 0, 54, 54, 55, 0, 55, 0, 46, 47, 91, 46, 55, 0, 46, 47, 51, 53, 91, 53, 46, 56, 0, 46, 47, 0, 91, 58, 0, 46, 48,
-			46, 47, 0, 91, 59, 0, 46, 48, 46, 47, 0, 91, 60, 0, 46, 48, 46, 47, 0, 91, 61, 0, 46, 48, 46, 47, 0, 91, 0, 46, 48, 46,
-			47, 0, 91, 63, 0, 46, 48, 46, 47, 0, 91, 64, 0, 46, 48, 46, 47, 0, 91, 65, 0, 46, 48, 46, 47, 0, 91, 0, 46, 48, 46, 47,
-			0, 91, 67, 0, 46, 48, 46, 47, 0, 91, 68, 0, 46, 48, 46, 47, 0, 91, 69, 0, 46, 48, 46, 47, 0, 91, 0, 46, 48, 45, 45, 45,
-			45, 45, 45, 45, 45, 0, 71, 71, 0, 71, 0, 0, 0, 0, 71, 72, 71, 6, 7, 7, 71, 0, 71, 7, 7, 71, 74, 0, 71, 71, 75, 0, 71, 6,
-			7, 7, 71, 76, 0, 71, 0, 0, 0, 78, 0, 71, 72, 71, 0, 0, 0, 79, 0, 71, 72, 71, 0, 0, 0, 80, 0, 71, 72, 71, 0, 0, 0, 81, 0,
-			71, 72, 71, 0, 0, 0, 0, 71, 72, 71, 0, 0, 0, 83, 0, 71, 72, 71, 0, 0, 0, 84, 0, 71, 72, 71, 0, 0, 0, 85, 0, 71, 72, 71,
-			0, 0, 0, 0, 71, 72, 71, 0, 0, 0, 87, 0, 71, 72, 71, 0, 0, 0, 88, 0, 71, 72, 71, 0, 0, 0, 89, 0, 71, 72, 71, 0, 0, 0, 0,
-			71, 72, 0, 0, 0};
+			17, 0, 0, 33, 90, 16, 20, 16, 17, 90, 16, 0, 16, 17, 0, 0, 35, 90, 16, 20, 16, 17, 0, 0, 36, 90, 16, 20, 16, 17, 0, 0,
+			37, 90, 16, 20, 16, 17, 90, 16, 0, 16, 17, 0, 0, 39, 90, 16, 20, 16, 17, 0, 0, 40, 90, 16, 20, 16, 17, 0, 0, 41, 90, 16,
+			20, 16, 17, 90, 16, 0, 11, 11, 11, 11, 11, 11, 11, 11, 0, 43, 44, 48, 47, 49, 50, 46, 91, 48, 57, 62, 66, 46, 43, 56,
+			48, 48, 0, 46, 70, 45, 46, 70, 45, 46, 47, 91, 46, 0, 47, 44, 48, 49, 50, 46, 91, 48, 57, 62, 66, 46, 47, 56, 48, 48, 0,
+			46, 47, 0, 91, 0, 46, 48, 50, 56, 0, 46, 47, 51, 53, 91, 53, 46, 0, 52, 0, 46, 47, 53, 91, 53, 46, 52, 0, 54, 54, 55, 0,
+			55, 0, 46, 47, 91, 46, 55, 0, 46, 47, 51, 53, 91, 53, 46, 56, 0, 46, 47, 0, 91, 58, 0, 46, 48, 46, 47, 0, 91, 59, 0, 46,
+			48, 46, 47, 0, 91, 60, 0, 46, 48, 46, 47, 0, 91, 61, 0, 46, 48, 46, 47, 91, 46, 0, 46, 47, 0, 91, 63, 0, 46, 48, 46, 47,
+			0, 91, 64, 0, 46, 48, 46, 47, 0, 91, 65, 0, 46, 48, 46, 47, 91, 46, 0, 46, 47, 0, 91, 67, 0, 46, 48, 46, 47, 0, 91, 68,
+			0, 46, 48, 46, 47, 0, 91, 69, 0, 46, 48, 46, 47, 91, 46, 0, 45, 45, 45, 45, 45, 45, 45, 45, 0, 71, 71, 0, 71, 0, 0, 0,
+			0, 71, 72, 71, 6, 7, 7, 71, 0, 71, 7, 7, 71, 74, 0, 71, 71, 75, 0, 71, 6, 7, 7, 71, 76, 0, 71, 0, 0, 0, 78, 0, 71, 72,
+			71, 0, 0, 0, 79, 0, 71, 72, 71, 0, 0, 0, 80, 0, 71, 72, 71, 0, 0, 0, 81, 0, 71, 72, 71, 71, 0, 71, 0, 0, 0, 83, 0, 71,
+			72, 71, 0, 0, 0, 84, 0, 71, 72, 71, 0, 0, 0, 85, 0, 71, 72, 71, 71, 0, 71, 0, 0, 0, 87, 0, 71, 72, 71, 0, 0, 0, 88, 0,
+			71, 72, 71, 0, 0, 0, 89, 0, 71, 72, 71, 71, 0, 0, 0, 0};
 	}
 
 	private static final byte _json_trans_targs[] = init__json_trans_targs_0();
 
 	private static byte[] init__json_trans_actions_0 () {
-		return new byte[] {0, 0, 1, 1, 1, 15, 1, 1, 1, 1, 11, 0, 1, 1, 1, 0, 22, 1, 1, 7, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
-			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 13, 0, 1, 1, 0, 19, 1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 15, 1, 1, 1, 1, 11,
-			0, 1, 1, 1, 0, 22, 1, 1, 7, 0, 0, 0, 0, 13, 0, 0, 0, 0, 1, 1, 13, 0, 1, 1, 0, 5, 0, 5, 0, 0, 5, 0, 3, 3, 3, 3, 3, 3, 3,
-			3, 0, 7, 7, 0, 0, 34, 7, 0, 0, 0, 0, 9, 9, 0, 0, 0, 40, 9, 0, 0, 0, 9, 9, 0, 0, 40, 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 40,
-			9, 0, 0, 9, 9, 0, 0, 0, 40, 9, 0, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0,
-			0, 0, 34, 7, 0, 28, 28, 0, 0, 54, 28, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 31,
-			31, 0, 0, 62, 31, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 25, 25, 0, 0, 46, 25, 0,
-			3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 1, 15, 17, 1, 1, 1, 1, 11, 0, 1, 1, 1, 0, 22, 1, 1, 7, 0, 0, 0, 0, 17, 0, 0,
-			0, 0, 1, 1, 1, 15, 17, 1, 1, 1, 1, 11, 0, 1, 1, 1, 0, 7, 7, 0, 37, 0, 7, 0, 0, 0, 0, 9, 9, 0, 0, 43, 0, 9, 0, 0, 0, 9,
-			9, 0, 43, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 43, 9, 0, 0, 9, 9, 0, 0, 43, 0, 9, 0, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7, 7, 0,
-			37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7, 0, 28, 28, 0, 58, 0, 28, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7,
-			7, 0, 37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7, 0, 31, 31, 0, 66, 0, 31, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7,
-			0, 7, 7, 0, 37, 0, 0, 7, 0, 25, 25, 0, 50, 0, 25, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 7, 0, 0, 0, 0, 7, 0, 9, 0, 0,
-			0, 9, 0, 9, 0, 0, 9, 0, 0, 9, 9, 0, 0, 9, 0, 0, 0, 9, 0, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0,
-			0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 28, 0, 0, 0, 0, 28, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0,
-			0, 0, 7, 0, 31, 0, 0, 0, 0, 31, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 25, 0, 0, 0,
-			0, 25, 0, 0, 0, 0};
+		return new byte[] {0, 0, 1, 1, 1, 21, 1, 1, 1, 1, 17, 0, 1, 1, 1, 0, 28, 1, 1, 7, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
+			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 19, 0, 1, 1, 0, 25, 1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 21, 1, 1, 1, 1, 17,
+			0, 1, 1, 1, 0, 28, 1, 1, 7, 0, 0, 0, 0, 19, 0, 0, 0, 0, 1, 1, 19, 0, 1, 1, 0, 5, 0, 5, 0, 0, 5, 0, 3, 3, 3, 3, 3, 3, 3,
+			3, 0, 7, 7, 0, 0, 31, 7, 0, 0, 0, 0, 9, 9, 0, 0, 0, 37, 9, 0, 0, 0, 9, 9, 0, 0, 37, 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 37,
+			9, 0, 0, 9, 9, 0, 0, 0, 37, 9, 0, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0,
+			0, 0, 31, 7, 0, 13, 13, 49, 13, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 15, 15,
+			55, 15, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 11, 11, 43, 11, 0, 3, 3, 3, 3, 3,
+			3, 3, 3, 0, 0, 0, 1, 0, 1, 1, 21, 23, 1, 1, 1, 1, 17, 0, 1, 1, 1, 0, 28, 1, 1, 7, 0, 0, 0, 0, 23, 0, 0, 0, 0, 1, 1, 1,
+			21, 23, 1, 1, 1, 1, 17, 0, 1, 1, 1, 0, 7, 7, 0, 34, 0, 7, 0, 0, 0, 0, 9, 9, 0, 0, 40, 0, 9, 0, 0, 0, 9, 9, 0, 40, 0, 9,
+			0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 40, 9, 0, 0, 9, 9, 0, 0, 40, 0, 9, 0, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0,
+			7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0, 13, 13, 52, 13, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0,
+			7, 7, 0, 34, 0, 0, 7, 0, 15, 15, 58, 15, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0,
+			11, 11, 46, 11, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 7, 0, 0, 0, 0, 7, 0, 9, 0, 0, 0, 9, 0, 9, 0, 0, 9, 0, 0, 9, 9, 0,
+			0, 9, 0, 0, 0, 9, 0, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0,
+			13, 13, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 15, 15, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7,
+			0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 11, 11, 0, 0, 0, 0};
 	}
 
 	private static final byte _json_trans_actions[] = init__json_trans_actions_0();
@@ -525,7 +522,7 @@
 	private static byte[] init__json_eof_actions_0 () {
 		return new byte[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 9, 9,
-			9, 9, 7, 7, 7, 7, 28, 7, 7, 7, 31, 7, 7, 7, 25, 0, 0};
+			9, 9, 7, 7, 7, 7, 13, 7, 7, 7, 15, 7, 7, 7, 11, 0, 0};
 	}
 
 	private static final byte _json_eof_actions[] = init__json_eof_actions_0();
@@ -538,7 +535,7 @@
 	static final int json_en_array = 43;
 	static final int json_en_main = 1;
 
-	// line 209 "JsonReader.rl"
+	// line 214 "JsonReader.rl"
 
 	private final Array elements = new Array(8);
 	private Object root, current;
diff --git a/gdx/src/com/badlogic/gdx/utils/JsonReader.java b/gdx/src/com/badlogic/gdx/utils/JsonReader.java
index 971eb76..835161b 100644
--- a/gdx/src/com/badlogic/gdx/utils/JsonReader.java
+++ b/gdx/src/com/badlogic/gdx/utils/JsonReader.java
@@ -172,20 +172,20 @@
 							while (_nacts-- > 0) {
 								switch (_json_actions[_acts++]) {
 								case 0:
-								// line 95 "JsonReader.rl"
+								// line 99 "JsonReader.rl"
 								{
 									s = p;
 									needsUnescape = false;
 								}
 									break;
 								case 1:
-								// line 99 "JsonReader.rl"
+								// line 103 "JsonReader.rl"
 								{
 									needsUnescape = true;
 								}
 									break;
 								case 2:
-								// line 102 "JsonReader.rl"
+								// line 106 "JsonReader.rl"
 								{
 									String name = new String(data, s, p - s);
 									s = p;
@@ -195,7 +195,7 @@
 								}
 									break;
 								case 3:
-								// line 109 "JsonReader.rl"
+								// line 113 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -206,7 +206,7 @@
 								}
 									break;
 								case 4:
-								// line 117 "JsonReader.rl"
+								// line 121 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -216,7 +216,7 @@
 								}
 									break;
 								case 5:
-								// line 124 "JsonReader.rl"
+								// line 128 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=true");
@@ -224,7 +224,7 @@
 								}
 									break;
 								case 6:
-								// line 129 "JsonReader.rl"
+								// line 133 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=false");
@@ -232,7 +232,7 @@
 								}
 									break;
 								case 7:
-								// line 134 "JsonReader.rl"
+								// line 138 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("null: " + name);
@@ -240,7 +240,7 @@
 								}
 									break;
 								case 8:
-								// line 139 "JsonReader.rl"
+								// line 143 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("startObject: " + name);
@@ -261,7 +261,7 @@
 								}
 									break;
 								case 9:
-								// line 145 "JsonReader.rl"
+								// line 149 "JsonReader.rl"
 								{
 									if (debug) System.out.println("endObject");
 									pop();
@@ -273,7 +273,7 @@
 								}
 									break;
 								case 10:
-								// line 150 "JsonReader.rl"
+								// line 154 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("startArray: " + name);
@@ -294,7 +294,7 @@
 								}
 									break;
 								case 11:
-								// line 156 "JsonReader.rl"
+								// line 160 "JsonReader.rl"
 								{
 									if (debug) System.out.println("endArray");
 									pop();
@@ -326,7 +326,7 @@
 							while (__nacts-- > 0) {
 								switch (_json_actions[__acts++]) {
 								case 3:
-								// line 109 "JsonReader.rl"
+								// line 113 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -337,7 +337,7 @@
 								}
 									break;
 								case 4:
-								// line 117 "JsonReader.rl"
+								// line 121 "JsonReader.rl"
 								{
 									String value = new String(data, s, p - s);
 									s = p;
@@ -347,7 +347,7 @@
 								}
 									break;
 								case 5:
-								// line 124 "JsonReader.rl"
+								// line 128 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=true");
@@ -355,7 +355,7 @@
 								}
 									break;
 								case 6:
-								// line 129 "JsonReader.rl"
+								// line 133 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("boolean: " + name + "=false");
@@ -363,7 +363,7 @@
 								}
 									break;
 								case 7:
-								// line 134 "JsonReader.rl"
+								// line 138 "JsonReader.rl"
 								{
 									String name = names.size > 0 ? names.pop() : null;
 									if (debug) System.out.println("null: " + name);
@@ -381,7 +381,7 @@
 				}
 			}
 
-			// line 185 "JsonReader.rl"
+			// line 190 "JsonReader.rl"
 
 		} catch (RuntimeException ex) {
 			parseRuntimeEx = ex;
@@ -408,17 +408,17 @@
 
 	// line 277 "JsonReader.java"
 	private static byte[] init__json_actions_0 () {
-		return new byte[] {0, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 8, 1, 9, 1, 10, 1, 11, 2, 0, 2, 2, 0, 3, 2, 3, 5, 2, 3, 6, 2, 3, 7,
-			2, 3, 9, 2, 3, 11, 2, 4, 9, 2, 4, 11, 3, 3, 5, 9, 3, 3, 5, 11, 3, 3, 6, 9, 3, 3, 6, 11, 3, 3, 7, 9, 3, 3, 7, 11};
+		return new byte[] {0, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 1, 11, 2, 0, 2, 2, 0, 3, 2, 3, 9,
+			2, 3, 11, 2, 4, 9, 2, 4, 11, 2, 5, 9, 2, 5, 11, 2, 6, 9, 2, 6, 11, 2, 7, 9, 2, 7, 11};
 	}
 
 	private static final byte _json_actions[] = init__json_actions_0();
 
 	private static short[] init__json_key_offsets_0 () {
 		return new short[] {0, 0, 19, 21, 23, 32, 35, 37, 41, 43, 55, 57, 59, 63, 82, 84, 86, 91, 102, 109, 118, 125, 128, 136,
-			138, 147, 151, 153, 160, 170, 178, 186, 194, 202, 209, 217, 225, 233, 240, 248, 256, 264, 271, 280, 301, 303, 305, 310,
-			330, 337, 340, 348, 350, 359, 363, 365, 372, 382, 390, 398, 406, 414, 421, 429, 437, 445, 452, 460, 468, 476, 483, 492,
-			495, 502, 508, 515, 520, 528, 536, 544, 552, 560, 567, 575, 583, 591, 598, 606, 614, 622, 629, 629};
+			138, 147, 151, 153, 160, 170, 178, 186, 194, 202, 207, 215, 223, 231, 236, 244, 252, 260, 265, 274, 295, 297, 299, 304,
+			324, 331, 334, 342, 344, 353, 357, 359, 366, 376, 384, 392, 400, 408, 413, 421, 429, 437, 442, 450, 458, 466, 471, 480,
+			483, 490, 496, 503, 508, 516, 524, 532, 540, 548, 551, 559, 567, 575, 578, 586, 594, 602, 605, 605};
 	}
 
 	private static final short _json_key_offsets[] = init__json_key_offsets_0();
@@ -431,29 +431,28 @@
 			102, 110, 114, 116, 117, 32, 44, 58, 93, 125, 9, 13, 48, 49, 57, 32, 44, 46, 69, 101, 125, 9, 13, 48, 57, 32, 44, 69,
 			101, 125, 9, 13, 48, 57, 43, 45, 48, 57, 48, 57, 32, 44, 125, 9, 13, 48, 57, 32, 44, 46, 69, 101, 125, 9, 13, 48, 57,
 			32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 115, 125, 9, 13, 32, 44, 58, 93, 101,
-			125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58,
-			93, 108, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32,
-			44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 34, 47, 92, 98, 102, 110, 114, 116, 117, 32, 34, 36, 44, 45,
-			48, 91, 93, 95, 102, 110, 116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 34, 92, 34, 92, 32, 44, 93, 9, 13, 32, 34, 36, 45,
-			48, 91, 93, 95, 102, 110, 116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 32, 44, 58, 93, 125, 9, 13, 48, 49, 57, 32, 44, 46,
-			69, 93, 101, 9, 13, 48, 57, 32, 44, 69, 93, 101, 9, 13, 48, 57, 43, 45, 48, 57, 48, 57, 32, 44, 93, 9, 13, 48, 57, 32,
-			44, 46, 69, 93, 101, 9, 13, 48, 57, 32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93,
-			115, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44,
-			58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13,
-			32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 34, 47, 92, 98, 102, 110,
-			114, 116, 117, 32, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 46, 69, 101, 9, 13, 32, 69, 101, 9, 13, 48, 57, 32, 9, 13, 48,
-			57, 32, 46, 69, 101, 9, 13, 48, 57, 32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93,
-			115, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44,
-			58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13,
-			32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 44, 58, 93, 125, 9, 13, 0};
+			125, 9, 13, 32, 44, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108,
+			125, 9, 13, 32, 44, 125, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101,
+			125, 9, 13, 32, 44, 125, 9, 13, 34, 47, 92, 98, 102, 110, 114, 116, 117, 32, 34, 36, 44, 45, 48, 91, 93, 95, 102, 110,
+			116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 34, 92, 34, 92, 32, 44, 93, 9, 13, 32, 34, 36, 45, 48, 91, 93, 95, 102, 110,
+			116, 123, 9, 13, 49, 57, 65, 90, 97, 122, 32, 44, 58, 93, 125, 9, 13, 48, 49, 57, 32, 44, 46, 69, 93, 101, 9, 13, 48,
+			57, 32, 44, 69, 93, 101, 9, 13, 48, 57, 43, 45, 48, 57, 48, 57, 32, 44, 93, 9, 13, 48, 57, 32, 44, 46, 69, 93, 101, 9,
+			13, 48, 57, 32, 44, 58, 93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 115, 125, 9, 13, 32, 44,
+			58, 93, 101, 125, 9, 13, 32, 44, 93, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44,
+			58, 93, 108, 125, 9, 13, 32, 44, 93, 9, 13, 32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44,
+			58, 93, 101, 125, 9, 13, 32, 44, 93, 9, 13, 34, 47, 92, 98, 102, 110, 114, 116, 117, 32, 9, 13, 32, 44, 58, 93, 125, 9,
+			13, 32, 46, 69, 101, 9, 13, 32, 69, 101, 9, 13, 48, 57, 32, 9, 13, 48, 57, 32, 46, 69, 101, 9, 13, 48, 57, 32, 44, 58,
+			93, 97, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 115, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13,
+			32, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 44, 58, 93, 108, 125, 9, 13, 32, 9, 13,
+			32, 44, 58, 93, 114, 125, 9, 13, 32, 44, 58, 93, 117, 125, 9, 13, 32, 44, 58, 93, 101, 125, 9, 13, 32, 9, 13, 0};
 	}
 
 	private static final char _json_trans_keys[] = init__json_trans_keys_0();
 
 	private static byte[] init__json_single_lengths_0 () {
-		return new byte[] {0, 11, 2, 2, 7, 1, 0, 2, 0, 6, 2, 2, 2, 11, 2, 2, 3, 5, 5, 7, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 5,
-			6, 6, 6, 5, 6, 6, 6, 5, 7, 13, 2, 2, 3, 12, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 5, 6, 6, 6, 5, 6, 6, 6, 5, 7, 1, 5,
-			4, 3, 1, 4, 6, 6, 6, 6, 5, 6, 6, 6, 5, 6, 6, 6, 5, 0, 0};
+		return new byte[] {0, 11, 2, 2, 7, 1, 0, 2, 0, 6, 2, 2, 2, 11, 2, 2, 3, 5, 5, 7, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 3,
+			6, 6, 6, 3, 6, 6, 6, 3, 7, 13, 2, 2, 3, 12, 5, 1, 6, 0, 5, 2, 0, 3, 6, 6, 6, 6, 6, 3, 6, 6, 6, 3, 6, 6, 6, 3, 7, 1, 5,
+			4, 3, 1, 4, 6, 6, 6, 6, 1, 6, 6, 6, 1, 6, 6, 6, 1, 0, 0};
 	}
 
 	private static final byte _json_single_lengths[] = init__json_single_lengths_0();
@@ -468,9 +467,9 @@
 
 	private static short[] init__json_index_offsets_0 () {
 		return new short[] {0, 0, 16, 19, 22, 31, 34, 36, 40, 42, 52, 55, 58, 62, 78, 81, 84, 89, 98, 105, 114, 121, 124, 132, 134,
-			142, 146, 148, 154, 163, 171, 179, 187, 195, 202, 210, 218, 226, 233, 241, 249, 257, 264, 273, 291, 294, 297, 302, 319,
-			326, 329, 337, 339, 347, 351, 353, 359, 368, 376, 384, 392, 400, 407, 415, 423, 431, 438, 446, 454, 462, 469, 478, 481,
-			488, 494, 500, 504, 511, 519, 527, 535, 543, 550, 558, 566, 574, 581, 589, 597, 605, 612, 613};
+			142, 146, 148, 154, 163, 171, 179, 187, 195, 200, 208, 216, 224, 229, 237, 245, 253, 258, 267, 285, 288, 291, 296, 313,
+			320, 323, 331, 333, 341, 345, 347, 353, 362, 370, 378, 386, 394, 399, 407, 415, 423, 428, 436, 444, 452, 457, 466, 469,
+			476, 482, 488, 492, 499, 507, 515, 523, 531, 534, 542, 550, 558, 561, 569, 577, 585, 588, 589};
 	}
 
 	private static final short _json_index_offsets[] = init__json_index_offsets_0();
@@ -482,42 +481,40 @@
 			90, 17, 18, 18, 0, 12, 0, 13, 0, 0, 12, 18, 15, 15, 15, 15, 15, 15, 15, 15, 0, 16, 17, 0, 0, 90, 16, 20, 22, 28, 0, 16,
 			17, 23, 25, 25, 90, 16, 0, 24, 0, 16, 17, 25, 25, 90, 16, 24, 0, 26, 26, 27, 0, 27, 0, 16, 17, 90, 16, 27, 0, 16, 17,
 			23, 25, 25, 90, 16, 28, 0, 16, 17, 0, 0, 30, 90, 16, 20, 16, 17, 0, 0, 31, 90, 16, 20, 16, 17, 0, 0, 32, 90, 16, 20, 16,
-			17, 0, 0, 33, 90, 16, 20, 16, 17, 0, 0, 90, 16, 20, 16, 17, 0, 0, 35, 90, 16, 20, 16, 17, 0, 0, 36, 90, 16, 20, 16, 17,
-			0, 0, 37, 90, 16, 20, 16, 17, 0, 0, 90, 16, 20, 16, 17, 0, 0, 39, 90, 16, 20, 16, 17, 0, 0, 40, 90, 16, 20, 16, 17, 0,
-			0, 41, 90, 16, 20, 16, 17, 0, 0, 90, 16, 20, 11, 11, 11, 11, 11, 11, 11, 11, 0, 43, 44, 48, 47, 49, 50, 46, 91, 48, 57,
-			62, 66, 46, 43, 56, 48, 48, 0, 46, 70, 45, 46, 70, 45, 46, 47, 91, 46, 0, 47, 44, 48, 49, 50, 46, 91, 48, 57, 62, 66,
-			46, 47, 56, 48, 48, 0, 46, 47, 0, 91, 0, 46, 48, 50, 56, 0, 46, 47, 51, 53, 91, 53, 46, 0, 52, 0, 46, 47, 53, 91, 53,
-			46, 52, 0, 54, 54, 55, 0, 55, 0, 46, 47, 91, 46, 55, 0, 46, 47, 51, 53, 91, 53, 46, 56, 0, 46, 47, 0, 91, 58, 0, 46, 48,
-			46, 47, 0, 91, 59, 0, 46, 48, 46, 47, 0, 91, 60, 0, 46, 48, 46, 47, 0, 91, 61, 0, 46, 48, 46, 47, 0, 91, 0, 46, 48, 46,
-			47, 0, 91, 63, 0, 46, 48, 46, 47, 0, 91, 64, 0, 46, 48, 46, 47, 0, 91, 65, 0, 46, 48, 46, 47, 0, 91, 0, 46, 48, 46, 47,
-			0, 91, 67, 0, 46, 48, 46, 47, 0, 91, 68, 0, 46, 48, 46, 47, 0, 91, 69, 0, 46, 48, 46, 47, 0, 91, 0, 46, 48, 45, 45, 45,
-			45, 45, 45, 45, 45, 0, 71, 71, 0, 71, 0, 0, 0, 0, 71, 72, 71, 6, 7, 7, 71, 0, 71, 7, 7, 71, 74, 0, 71, 71, 75, 0, 71, 6,
-			7, 7, 71, 76, 0, 71, 0, 0, 0, 78, 0, 71, 72, 71, 0, 0, 0, 79, 0, 71, 72, 71, 0, 0, 0, 80, 0, 71, 72, 71, 0, 0, 0, 81, 0,
-			71, 72, 71, 0, 0, 0, 0, 71, 72, 71, 0, 0, 0, 83, 0, 71, 72, 71, 0, 0, 0, 84, 0, 71, 72, 71, 0, 0, 0, 85, 0, 71, 72, 71,
-			0, 0, 0, 0, 71, 72, 71, 0, 0, 0, 87, 0, 71, 72, 71, 0, 0, 0, 88, 0, 71, 72, 71, 0, 0, 0, 89, 0, 71, 72, 71, 0, 0, 0, 0,
-			71, 72, 0, 0, 0};
+			17, 0, 0, 33, 90, 16, 20, 16, 17, 90, 16, 0, 16, 17, 0, 0, 35, 90, 16, 20, 16, 17, 0, 0, 36, 90, 16, 20, 16, 17, 0, 0,
+			37, 90, 16, 20, 16, 17, 90, 16, 0, 16, 17, 0, 0, 39, 90, 16, 20, 16, 17, 0, 0, 40, 90, 16, 20, 16, 17, 0, 0, 41, 90, 16,
+			20, 16, 17, 90, 16, 0, 11, 11, 11, 11, 11, 11, 11, 11, 0, 43, 44, 48, 47, 49, 50, 46, 91, 48, 57, 62, 66, 46, 43, 56,
+			48, 48, 0, 46, 70, 45, 46, 70, 45, 46, 47, 91, 46, 0, 47, 44, 48, 49, 50, 46, 91, 48, 57, 62, 66, 46, 47, 56, 48, 48, 0,
+			46, 47, 0, 91, 0, 46, 48, 50, 56, 0, 46, 47, 51, 53, 91, 53, 46, 0, 52, 0, 46, 47, 53, 91, 53, 46, 52, 0, 54, 54, 55, 0,
+			55, 0, 46, 47, 91, 46, 55, 0, 46, 47, 51, 53, 91, 53, 46, 56, 0, 46, 47, 0, 91, 58, 0, 46, 48, 46, 47, 0, 91, 59, 0, 46,
+			48, 46, 47, 0, 91, 60, 0, 46, 48, 46, 47, 0, 91, 61, 0, 46, 48, 46, 47, 91, 46, 0, 46, 47, 0, 91, 63, 0, 46, 48, 46, 47,
+			0, 91, 64, 0, 46, 48, 46, 47, 0, 91, 65, 0, 46, 48, 46, 47, 91, 46, 0, 46, 47, 0, 91, 67, 0, 46, 48, 46, 47, 0, 91, 68,
+			0, 46, 48, 46, 47, 0, 91, 69, 0, 46, 48, 46, 47, 91, 46, 0, 45, 45, 45, 45, 45, 45, 45, 45, 0, 71, 71, 0, 71, 0, 0, 0,
+			0, 71, 72, 71, 6, 7, 7, 71, 0, 71, 7, 7, 71, 74, 0, 71, 71, 75, 0, 71, 6, 7, 7, 71, 76, 0, 71, 0, 0, 0, 78, 0, 71, 72,
+			71, 0, 0, 0, 79, 0, 71, 72, 71, 0, 0, 0, 80, 0, 71, 72, 71, 0, 0, 0, 81, 0, 71, 72, 71, 71, 0, 71, 0, 0, 0, 83, 0, 71,
+			72, 71, 0, 0, 0, 84, 0, 71, 72, 71, 0, 0, 0, 85, 0, 71, 72, 71, 71, 0, 71, 0, 0, 0, 87, 0, 71, 72, 71, 0, 0, 0, 88, 0,
+			71, 72, 71, 0, 0, 0, 89, 0, 71, 72, 71, 71, 0, 0, 0, 0};
 	}
 
 	private static final byte _json_trans_targs[] = init__json_trans_targs_0();
 
 	private static byte[] init__json_trans_actions_0 () {
-		return new byte[] {0, 0, 1, 1, 1, 15, 1, 1, 1, 1, 11, 0, 1, 1, 1, 0, 22, 1, 1, 7, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
-			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 13, 0, 1, 1, 0, 19, 1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 15, 1, 1, 1, 1, 11,
-			0, 1, 1, 1, 0, 22, 1, 1, 7, 0, 0, 0, 0, 13, 0, 0, 0, 0, 1, 1, 13, 0, 1, 1, 0, 5, 0, 5, 0, 0, 5, 0, 3, 3, 3, 3, 3, 3, 3,
-			3, 0, 7, 7, 0, 0, 34, 7, 0, 0, 0, 0, 9, 9, 0, 0, 0, 40, 9, 0, 0, 0, 9, 9, 0, 0, 40, 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 40,
-			9, 0, 0, 9, 9, 0, 0, 0, 40, 9, 0, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0,
-			0, 0, 34, 7, 0, 28, 28, 0, 0, 54, 28, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 31,
-			31, 0, 0, 62, 31, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 7, 7, 0, 0, 0, 34, 7, 0, 25, 25, 0, 0, 46, 25, 0,
-			3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 1, 0, 1, 1, 15, 17, 1, 1, 1, 1, 11, 0, 1, 1, 1, 0, 22, 1, 1, 7, 0, 0, 0, 0, 17, 0, 0,
-			0, 0, 1, 1, 1, 15, 17, 1, 1, 1, 1, 11, 0, 1, 1, 1, 0, 7, 7, 0, 37, 0, 7, 0, 0, 0, 0, 9, 9, 0, 0, 43, 0, 9, 0, 0, 0, 9,
-			9, 0, 43, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 43, 9, 0, 0, 9, 9, 0, 0, 43, 0, 9, 0, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7, 7, 0,
-			37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7, 0, 28, 28, 0, 58, 0, 28, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7,
-			7, 0, 37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7, 0, 31, 31, 0, 66, 0, 31, 0, 7, 7, 0, 37, 0, 0, 7, 0, 7, 7, 0, 37, 0, 0, 7,
-			0, 7, 7, 0, 37, 0, 0, 7, 0, 25, 25, 0, 50, 0, 25, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 7, 0, 0, 0, 0, 7, 0, 9, 0, 0,
-			0, 9, 0, 9, 0, 0, 9, 0, 0, 9, 9, 0, 0, 9, 0, 0, 0, 9, 0, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0,
-			0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 28, 0, 0, 0, 0, 28, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0,
-			0, 0, 7, 0, 31, 0, 0, 0, 0, 31, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 25, 0, 0, 0,
-			0, 25, 0, 0, 0, 0};
+		return new byte[] {0, 0, 1, 1, 1, 21, 1, 1, 1, 1, 17, 0, 1, 1, 1, 0, 28, 1, 1, 7, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0,
+			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 19, 0, 1, 1, 0, 25, 1, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 21, 1, 1, 1, 1, 17,
+			0, 1, 1, 1, 0, 28, 1, 1, 7, 0, 0, 0, 0, 19, 0, 0, 0, 0, 1, 1, 19, 0, 1, 1, 0, 5, 0, 5, 0, 0, 5, 0, 3, 3, 3, 3, 3, 3, 3,
+			3, 0, 7, 7, 0, 0, 31, 7, 0, 0, 0, 0, 9, 9, 0, 0, 0, 37, 9, 0, 0, 0, 9, 9, 0, 0, 37, 9, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 37,
+			9, 0, 0, 9, 9, 0, 0, 0, 37, 9, 0, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0,
+			0, 0, 31, 7, 0, 13, 13, 49, 13, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 15, 15,
+			55, 15, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 7, 7, 0, 0, 0, 31, 7, 0, 11, 11, 43, 11, 0, 3, 3, 3, 3, 3,
+			3, 3, 3, 0, 0, 0, 1, 0, 1, 1, 21, 23, 1, 1, 1, 1, 17, 0, 1, 1, 1, 0, 28, 1, 1, 7, 0, 0, 0, 0, 23, 0, 0, 0, 0, 1, 1, 1,
+			21, 23, 1, 1, 1, 1, 17, 0, 1, 1, 1, 0, 7, 7, 0, 34, 0, 7, 0, 0, 0, 0, 9, 9, 0, 0, 40, 0, 9, 0, 0, 0, 9, 9, 0, 40, 0, 9,
+			0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 40, 9, 0, 0, 9, 9, 0, 0, 40, 0, 9, 0, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0,
+			7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0, 13, 13, 52, 13, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0,
+			7, 7, 0, 34, 0, 0, 7, 0, 15, 15, 58, 15, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0, 7, 7, 0, 34, 0, 0, 7, 0,
+			11, 11, 46, 11, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 7, 0, 0, 0, 0, 7, 0, 9, 0, 0, 0, 9, 0, 9, 0, 0, 9, 0, 0, 9, 9, 0,
+			0, 9, 0, 0, 0, 9, 0, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0,
+			13, 13, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 15, 15, 0, 7, 0, 0, 0, 0, 0, 7, 0, 7,
+			0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 0, 11, 11, 0, 0, 0, 0};
 	}
 
 	private static final byte _json_trans_actions[] = init__json_trans_actions_0();
@@ -525,7 +522,7 @@
 	private static byte[] init__json_eof_actions_0 () {
 		return new byte[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 9, 9,
-			9, 9, 7, 7, 7, 7, 28, 7, 7, 7, 31, 7, 7, 7, 25, 0, 0};
+			9, 9, 7, 7, 7, 7, 13, 7, 7, 7, 15, 7, 7, 7, 11, 0, 0};
 	}
 
 	private static final byte _json_eof_actions[] = init__json_eof_actions_0();
@@ -538,7 +535,7 @@
 	static final int json_en_array = 43;
 	static final int json_en_main = 1;
 
-	// line 209 "JsonReader.rl"
+	// line 214 "JsonReader.rl"
 
 	private final Array elements = new Array(8);
 	private Object root, current;
