diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
index ecce1ad..62719d6 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
@@ -308,7 +308,7 @@
 					break;
 				}
 			}
-			touchEventPool.free(touchEvents);
+			touchEventPool.freeAll(touchEvents);
 			touchEvents.clear();
 		}
 	}
diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
index 3d29297..e58ecad 100644
--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java
@@ -74,23 +74,23 @@
 
 	/** Creates a stage with the specified {@link #setViewport(float, float, boolean) viewport}. The stage will use its own
 	 * {@link SpriteBatch}, which will be disposed when the stage is disposed. */
-	public Stage (float width, float height, boolean stretch) {
+	public Stage (float width, float height, boolean keepAspectRatio) {
 		batch = new SpriteBatch();
 		ownsBatch = true;
-		initialize(width, height, stretch);
+		initialize(width, height, keepAspectRatio);
 	}
 
 	/** Creates a stage with the specified {@link #setViewport(float, float, boolean) viewport} and {@link SpriteBatch}. This can be
 	 * used to avoid creating a new SpriteBatch (which can be somewhat slow) if multiple stages are used during an applications
 	 * life time.
 	 * @param batch Will not be disposed if {@link #dispose()} is called. Handle disposal yourself. */
-	public Stage (float width, float height, boolean stretch, SpriteBatch batch) {
+	public Stage (float width, float height, boolean keepAspectRatio, SpriteBatch batch) {
 		this.batch = batch;
 		ownsBatch = false;
-		initialize(width, height, stretch);
+		initialize(width, height, keepAspectRatio);
 	}
 
-	private void initialize (float width, float height, boolean stretch) {
+	private void initialize (float width, float height, boolean keepAspectRatio) {
 		this.width = width;
 		this.height = height;
 
@@ -98,7 +98,7 @@
 		root.setStage(this);
 
 		camera = new OrthographicCamera();
-		setViewport(width, height, stretch);
+		setViewport(width, height, keepAspectRatio);
 	}
 
 	/** Sets the dimensions of the stage's viewport. The viewport covers the entire screen. If keepAspectRatio is false, the
diff --git a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
index ecce1ad..62719d6 100644
--- a/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
+++ b/backends/gdx-backend-iosmonotouch/src/com/badlogic/gdx/backends/ios/IOSInput.java
@@ -308,7 +308,7 @@
 					break;
 				}
 			}
-			touchEventPool.free(touchEvents);
+			touchEventPool.freeAll(touchEvents);
 			touchEvents.clear();
 		}
 	}
