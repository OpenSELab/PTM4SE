diff --git a/src/main/java/tachyon/client/RawColumn.java b/src/main/java/tachyon/client/RawColumn.java
index 762cbe6..5d1a191 100644
--- a/src/main/java/tachyon/client/RawColumn.java
+++ b/src/main/java/tachyon/client/RawColumn.java
@@ -31,7 +31,7 @@
   }
 
   // TODO creating file here should be based on id.
-  public TachyonFile getPartition(int pId, boolean cachedMetadata) {
+  public TachyonFile getPartition(int pId, boolean cachedMetadata) throws IOException {
     return TFS.getFile(RAW_TABLE.getPath() + Constants.PATH_SEPARATOR + MasterInfo.COL +
         COLUMN_INDEX + Constants.PATH_SEPARATOR + pId, cachedMetadata);
   }
diff --git a/src/main/java/tachyon/client/TachyonFS.java b/src/main/java/tachyon/client/TachyonFS.java
index e644d9b..7c0f70a 100644
--- a/src/main/java/tachyon/client/TachyonFS.java
+++ b/src/main/java/tachyon/client/TachyonFS.java
@@ -455,7 +455,8 @@
     }
   }
 
-  private synchronized ClientFileInfo getClientFileInfo(String path, boolean useCachedMetadata) { 
+  private synchronized ClientFileInfo getClientFileInfo(String path, boolean useCachedMetadata)
+      throws IOException { 
     connect();
     if (!mConnected) {
       return null;
@@ -566,7 +567,8 @@
     return getFile(path, false);
   }
 
-  public synchronized TachyonFile getFile(String path, boolean useCachedMetadata) {
+  public synchronized TachyonFile getFile(String path, boolean useCachedMetadata) 
+      throws IOException {
     path = CommonUtils.cleanPath(path);
     ClientFileInfo clientFileInfo = getClientFileInfo(path, useCachedMetadata);
     if (clientFileInfo == null) {
diff --git a/src/main/java/tachyon/client/RawColumn.java b/src/main/java/tachyon/client/RawColumn.java
index 762cbe6..5d1a191 100644
--- a/src/main/java/tachyon/client/RawColumn.java
+++ b/src/main/java/tachyon/client/RawColumn.java
@@ -31,7 +31,7 @@
   }
 
   // TODO creating file here should be based on id.
-  public TachyonFile getPartition(int pId, boolean cachedMetadata) {
+  public TachyonFile getPartition(int pId, boolean cachedMetadata) throws IOException {
     return TFS.getFile(RAW_TABLE.getPath() + Constants.PATH_SEPARATOR + MasterInfo.COL +
         COLUMN_INDEX + Constants.PATH_SEPARATOR + pId, cachedMetadata);
   }
