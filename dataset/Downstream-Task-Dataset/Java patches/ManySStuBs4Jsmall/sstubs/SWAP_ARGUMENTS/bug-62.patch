diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java
index 9398c00..8df12d9 100755
--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java
+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java
@@ -83,7 +83,7 @@
      * @param rng random number to lock in batch shuffling
 	 * */
 	public LFWDataSetIterator(int batchSize, int numExamples, int[] imgDim, int numLabels, boolean useSubset, PathLabelGenerator labelGenerator, boolean train, double splitTrainTest, ImageTransform imageTransform, int normalizeValue, Random rng) {
-		super(new LFWLoader(imgDim, imageTransform, normalizeValue, useSubset).getRecordReader(numExamples, batchSize, imgDim, numLabels, labelGenerator, train, splitTrainTest, rng), batchSize, 1, numLabels);
+		super(new LFWLoader(imgDim, imageTransform, normalizeValue, useSubset).getRecordReader(batchSize, numExamples, imgDim, numLabels, labelGenerator, train, splitTrainTest, rng), batchSize, 1, numLabels);
 	}
 
 }
diff --git a/deeplearning4j-core/src/test/java/org/deeplearning4j/datasets/iterator/DataSetIteratorTest.java b/deeplearning4j-core/src/test/java/org/deeplearning4j/datasets/iterator/DataSetIteratorTest.java
index 914c727..e3af0a3 100644
--- a/deeplearning4j-core/src/test/java/org/deeplearning4j/datasets/iterator/DataSetIteratorTest.java
+++ b/deeplearning4j-core/src/test/java/org/deeplearning4j/datasets/iterator/DataSetIteratorTest.java
@@ -101,7 +101,7 @@
 
 	@Test
 	public void testLfwIterator() throws Exception {
-		int numExamples = 10;
+		int numExamples = 1;
 		int row = 28;
 		int col = 28;
 		int channels = 1;
@@ -109,7 +109,7 @@
 		assertTrue(iter.hasNext());
 		DataSet data = iter.next();
 		assertEquals(numExamples, data.getLabels().size(0));
-		assertEquals(row*col*channels, data.getFeatureMatrix().size(1));
+		assertEquals(row, data.getFeatureMatrix().size(2));
 	}
 
 	@Test
@@ -174,7 +174,7 @@
 		assertTrue(iter.hasNext());
 		DataSet data = iter.next();
 		assertEquals(numExamples, data.getLabels().size(0));
-		assertEquals(row*col*channels, data.getFeatureMatrix().size(1));
+		assertEquals(channels*row*col, data.getFeatureMatrix().size(1));
 	}
 
 
diff --git a/deeplearning4j-ui-parent/deeplearning4j-ui/src/test/java/org/deeplearning4j/ui/flow/FlowIterationListenerTest.java b/deeplearning4j-ui-parent/deeplearning4j-ui/src/test/java/org/deeplearning4j/ui/flow/FlowIterationListenerTest.java
index a3f7bbd..619a831 100644
--- a/deeplearning4j-ui-parent/deeplearning4j-ui/src/test/java/org/deeplearning4j/ui/flow/FlowIterationListenerTest.java
+++ b/deeplearning4j-ui-parent/deeplearning4j-ui/src/test/java/org/deeplearning4j/ui/flow/FlowIterationListenerTest.java
@@ -160,8 +160,8 @@
             log.info("Layer: " + layerInfo);
         }
 
-        // checking total number of layers
-        assertEquals(9, info.size());
+        // checking total number of layers - count now includes input as 0 layer in buildModelInfo
+        assertEquals(9, info.size()-1);
 
         // checking, if all named layers exist
         assertNotEquals(null, info.getLayerInfoByName("cnn1"));
diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java
index 9398c00..8df12d9 100755
--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java
+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/iterator/impl/LFWDataSetIterator.java
@@ -83,7 +83,7 @@
      * @param rng random number to lock in batch shuffling
 	 * */
 	public LFWDataSetIterator(int batchSize, int numExamples, int[] imgDim, int numLabels, boolean useSubset, PathLabelGenerator labelGenerator, boolean train, double splitTrainTest, ImageTransform imageTransform, int normalizeValue, Random rng) {
-		super(new LFWLoader(imgDim, imageTransform, normalizeValue, useSubset).getRecordReader(numExamples, batchSize, imgDim, numLabels, labelGenerator, train, splitTrainTest, rng), batchSize, 1, numLabels);
+		super(new LFWLoader(imgDim, imageTransform, normalizeValue, useSubset).getRecordReader(batchSize, numExamples, imgDim, numLabels, labelGenerator, train, splitTrainTest, rng), batchSize, 1, numLabels);
 	}
 
 }
