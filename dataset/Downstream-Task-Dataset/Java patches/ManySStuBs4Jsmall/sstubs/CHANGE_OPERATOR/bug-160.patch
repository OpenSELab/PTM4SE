diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java
index 1009fdd..125d09d 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java
@@ -157,9 +157,9 @@
                 INVALID_FUNCTION_ARGUMENT,
                 "step must not be zero");
         checkCondition(
-                step > 0 ? stop >= start : stop < start,
+                step > 0 ? stop >= start : stop <= start,
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
     }
 
     private static void checkMaxEntry(int length)
diff --git a/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java b/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java
index 0399c0d..2a2d867 100644
--- a/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java
+++ b/presto-main/src/test/java/com/facebook/presto/type/TestArrayOperators.java
@@ -1348,11 +1348,11 @@
         assertInvalidFunction(
                 "SEQUENCE(date '2016-04-12', date '2016-04-14', interval '-1' day)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(date '2016-04-14', date '2016-04-12', interval '1' day)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(date '2000-04-14', date '2030-04-12', interval '1' day)",
                 INVALID_FUNCTION_ARGUMENT,
@@ -1364,11 +1364,11 @@
         assertInvalidFunction(
                 "SEQUENCE(timestamp '2016-04-16 01:00:10', timestamp '2016-04-16 01:01:00', interval '-20' second)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(timestamp '2016-04-16 01:10:10', timestamp '2016-04-16 01:01:00', interval '20' second)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(timestamp '2016-04-16 01:00:10', timestamp '2016-04-16 09:01:00', interval '1' second)",
                 INVALID_FUNCTION_ARGUMENT,
@@ -1428,11 +1428,11 @@
         assertInvalidFunction(
                 "SEQUENCE(date '2016-06-12', date '2016-04-12', interval '1' month)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(date '2016-04-12', date '2016-06-12', interval '-1' month)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(date '2000-04-12', date '3000-06-12', interval '1' month)",
                 INVALID_FUNCTION_ARGUMENT,
@@ -1440,11 +1440,11 @@
         assertInvalidFunction(
                 "SEQUENCE(timestamp '2016-05-16 01:00:10', timestamp '2016-04-16 01:01:00', interval '1' month)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(timestamp '2016-04-16 01:10:10', timestamp '2016-05-16 01:01:00', interval '-1' month)",
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
         assertInvalidFunction(
                 "SEQUENCE(timestamp '2016-04-16 01:00:10', timestamp '3000-04-16 09:01:00', interval '1' month)",
                 INVALID_FUNCTION_ARGUMENT,
diff --git a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java
index 1009fdd..125d09d 100644
--- a/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java
+++ b/presto-main/src/main/java/com/facebook/presto/operator/scalar/SequenceFunction.java
@@ -157,9 +157,9 @@
                 INVALID_FUNCTION_ARGUMENT,
                 "step must not be zero");
         checkCondition(
-                step > 0 ? stop >= start : stop < start,
+                step > 0 ? stop >= start : stop <= start,
                 INVALID_FUNCTION_ARGUMENT,
-                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than start");
+                "sequence stop value should be greater than or equal to start value if step is greater than zero otherwise stop should be less than or equal to start");
     }
 
     private static void checkMaxEntry(int length)
