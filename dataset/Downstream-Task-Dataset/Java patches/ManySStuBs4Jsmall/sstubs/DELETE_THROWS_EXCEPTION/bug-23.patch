diff --git a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java
index ecb19e8..ff1e8ab 100644
--- a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java
+++ b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java
@@ -42,7 +42,7 @@
 
 
     @Test
-    public void testConvolution3dForwardSameMode() throws Exception {
+    public void testConvolution3dForwardSameMode() {
 
         INDArray containedInput = getContainedData();
         Convolution3DLayer layer = (Convolution3DLayer) getConvolution3DLayer(ConvolutionMode.Same);
diff --git a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/convolution/Convolution3DLayer.java b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/convolution/Convolution3DLayer.java
index dc6bc4b..083a7ce 100644
--- a/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/convolution/Convolution3DLayer.java
+++ b/deeplearning4j-nn/src/main/java/org/deeplearning4j/nn/layers/convolution/Convolution3DLayer.java
@@ -85,11 +85,11 @@
 
         INDArray weightGradView = gradientViews.get(Convolution3DParamInitializer.WEIGHT_KEY);
 
-        INDArray outEpsilon;
+        INDArray outEpsilon = Nd4j.createUninitialized(miniBatch * outChannels * outD * outH * outW);
         if (isNCDHW)
-            outEpsilon = Nd4j.create('c', miniBatch, outChannels, outD, outH, outW);
+            outEpsilon = outEpsilon.reshape('c', miniBatch, outChannels, outD, outH, outW);
         else
-            outEpsilon = Nd4j.create('c', miniBatch, outD, outH, outW, outChannels);
+            outEpsilon = outEpsilon.reshape('c', miniBatch, outD, outH, outW, outChannels);
 
 
         int[] intArgs = new int[]{
@@ -215,11 +215,11 @@
         int outH = outSize[1];
         int outW = outSize[2];
 
-        INDArray output;
+        INDArray output = Nd4j.createUninitialized(miniBatch*outWeightChannels*outD*outH*outW);
         if (isNCDHW)
-            output = Nd4j.create('c', miniBatch, outWeightChannels, outD, outH, outW);
+            output = output.reshape('c', miniBatch, outWeightChannels, outD, outH, outW);
         else
-            output = Nd4j.create('c', miniBatch, outD, outH, outW, outWeightChannels);
+            output = output.reshape('c', miniBatch, outD, outH, outW, outWeightChannels);
 
         int[] intArgs = new int[]{
                 kernel[0], kernel[1], kernel[2],
diff --git a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java
index ecb19e8..ff1e8ab 100644
--- a/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java
+++ b/deeplearning4j-core/src/test/java/org/deeplearning4j/nn/layers/convolution/Convolution3DTest.java
@@ -42,7 +42,7 @@
 
 
     @Test
-    public void testConvolution3dForwardSameMode() throws Exception {
+    public void testConvolution3dForwardSameMode() {
 
         INDArray containedInput = getContainedData();
         Convolution3DLayer layer = (Convolution3DLayer) getConvolution3DLayer(ConvolutionMode.Same);
