diff --git a/core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchScanner.java b/core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchScanner.java
index c33599b..351fdf9 100644
--- a/core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchScanner.java
+++ b/core/src/main/java/org/apache/accumulo/core/client/mock/MockBatchScanner.java
@@ -24,10 +24,12 @@ import java.util.List;
 import java.util.Map.Entry;
 
 import org.apache.accumulo.core.client.BatchScanner;
+import org.apache.accumulo.core.client.mock.MockScanner.RangeFilter;
 import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.Range;
 import org.apache.accumulo.core.data.Value;
 import org.apache.accumulo.core.iterators.Filter;
+import org.apache.accumulo.core.iterators.IteratorEnvironment;
 import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
 import org.apache.accumulo.core.iterators.SortedMapIterator;
 import org.apache.accumulo.core.security.Authorizations;
@@ -53,7 +55,11 @@ public class MockBatchScanner extends MockScannerBase implements BatchScanner {
   static class RangesFilter extends Filter {
     List<Range> ranges;
     
-    RangesFilter(SortedKeyValueIterator<Key,Value> iterator, List<Range> ranges) {
+    public RangesFilter deepCopy(IteratorEnvironment env) {
+      return new RangesFilter(getSource().deepCopy(env), ranges);
+    }
+    
+    public RangesFilter(SortedKeyValueIterator<Key,Value> iterator, List<Range> ranges) {
       setSource(iterator);
       this.ranges = ranges;
     }
@@ -77,9 +83,9 @@ public class MockBatchScanner extends MockScannerBase implements BatchScanner {
 
     IteratorChain chain = new IteratorChain();
     for (Range range : ranges) {
-      SortedKeyValueIterator<Key,Value> i = new SortedMapIterator(table.table);
+      SortedKeyValueIterator<Key,Value> i = new RangesFilter(new SortedMapIterator(table.table), ranges);
       try {
-        i = new RangesFilter(createFilter(i), ranges);
+        i = createFilter(i);
         i.seek(range, createColumnBSS(fetchedColumns), !fetchedColumns.isEmpty());
         chain.addIterator(new IteratorAdapter(i));
       } catch (IOException e) {
diff --git a/core/src/main/java/org/apache/accumulo/core/client/mock/MockScanner.java b/core/src/main/java/org/apache/accumulo/core/client/mock/MockScanner.java
index 82b9b19..2d78bbf 100644
--- a/core/src/main/java/org/apache/accumulo/core/client/mock/MockScanner.java
+++ b/core/src/main/java/org/apache/accumulo/core/client/mock/MockScanner.java
@@ -26,8 +26,10 @@ import org.apache.accumulo.core.data.Key;
 import org.apache.accumulo.core.data.Range;
 import org.apache.accumulo.core.data.Value;
 import org.apache.accumulo.core.iterators.Filter;
+import org.apache.accumulo.core.iterators.IteratorEnvironment;
 import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
 import org.apache.accumulo.core.iterators.SortedMapIterator;
+import org.apache.accumulo.core.iterators.system.DeletingIterator;
 import org.apache.accumulo.core.security.Authorizations;
 
 public class MockScanner extends MockScannerBase implements Scanner {
