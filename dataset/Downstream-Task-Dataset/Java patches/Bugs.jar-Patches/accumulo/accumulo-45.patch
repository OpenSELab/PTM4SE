diff --git a/core/src/main/java/org/apache/accumulo/core/util/Stat.java b/core/src/main/java/org/apache/accumulo/core/util/Stat.java
index e65265c..d2d560e 100644
--- a/core/src/main/java/org/apache/accumulo/core/util/Stat.java
+++ b/core/src/main/java/org/apache/accumulo/core/util/Stat.java
@@ -16,54 +16,66 @@
  */
 package org.apache.accumulo.core.util;
 
+import org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic;
+import org.apache.commons.math.stat.descriptive.moment.Mean;
+import org.apache.commons.math.stat.descriptive.moment.StandardDeviation;
+import org.apache.commons.math.stat.descriptive.rank.Max;
+import org.apache.commons.math.stat.descriptive.rank.Min;
+import org.apache.commons.math.stat.descriptive.summary.Sum;
+
 public class Stat {
-  
-  long max = Long.MIN_VALUE;
-  long min = Long.MAX_VALUE;
-  long sum = 0;
-  int count = 0;
-  double partialStdDev = 0;
-  
+  Min min;
+  Max max;
+  Sum sum;
+  Mean mean;
+  StandardDeviation sd;
+
+  StorelessUnivariateStatistic[] stats;
+
+  public Stat() {
+    min = new Min();
+    max = new Max();
+    sum = new Sum();
+    mean = new Mean();
+    sd = new StandardDeviation();
+
+    stats = new StorelessUnivariateStatistic[] {min, max, sum, mean, sd};
+  }
+
   public void addStat(long stat) {
-    if (stat > max)
-      max = stat;
-    if (stat < min)
-      min = stat;
-    
-    sum += stat;
-    
-    partialStdDev += stat * stat;
-    
-    count++;
+    for (StorelessUnivariateStatistic statistic : stats) {
+      statistic.increment(stat);
+    }
   }
-  
+
   public long getMin() {
-    return min;
+    return (long) min.getResult();
   }
-  
+
   public long getMax() {
-    return max;
+    return (long) max.getResult();
+  }
+
+  public long getSum() {
+    return (long) sum.getResult();
   }
-  
+
   public double getAverage() {
-    return ((double) sum) / count;
+    return mean.getResult();
   }
-  
+
   public double getStdDev() {
-    return Math.sqrt(partialStdDev / count - getAverage() * getAverage());
+    return sd.getResult();
   }
-  
+
   public String toString() {
-    return String.format("%,d %,d %,.2f %,d", getMin(), getMax(), getAverage(), count);
+    return String.format("%,d %,d %,.2f %,d", getMin(), getMax(), getAverage(), mean.getN());
   }
-  
+
   public void clear() {
-    sum = 0;
-    count = 0;
-    partialStdDev = 0;
-  }
-  
-  public long getSum() {
-    return sum;
+    for (StorelessUnivariateStatistic statistic : stats) {
+      statistic.clear();
+    }
   }
+
 }
