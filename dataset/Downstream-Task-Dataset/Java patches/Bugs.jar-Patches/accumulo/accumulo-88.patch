diff --git a/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java b/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java
index 536d6e6..bcad3a3 100644
--- a/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java
+++ b/core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java
@@ -260,7 +260,7 @@ public interface TableOperations {
    * @param start
    *          first tablet to be compacted contains the row after this row, null means the first tablet in table
    * @param end
-   *          last tablet to be merged contains this row, null means the last tablet in table
+   *          last tablet to be compacted contains this row, null means the last tablet in table
    * @param flush
    *          when true, table memory is flushed before compaction starts
    * @param wait
@@ -276,7 +276,7 @@ public interface TableOperations {
    * @param start
    *          first tablet to be compacted contains the row after this row, null means the first tablet in table
    * @param end
-   *          last tablet to be merged contains this row, null means the last tablet in table
+   *          last tablet to be compacted contains this row, null means the last tablet in table
    * @param iterators
    *          A set of iterators that will be applied to each tablet compacted
    * @param flush
diff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java
index 64968f0..6ffa3f4 100644
--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java
+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/DeleteRowsCommand.java
@@ -54,9 +54,7 @@ public class DeleteRowsCommand extends Command {
   public Options getOptions() {
     final Options o = new Options();
     forceOpt = new Option("f", "force", false, "delete data even if start or end are not specified");
-    startRowOptExclusive = new Option(OptUtil.START_ROW_OPT, "begin-row", true, "begin row (exclusive)");
-    startRowOptExclusive.setArgName("begin-row");
-    o.addOption(startRowOptExclusive);
+    o.addOption(OptUtil.startRowOpt());
     o.addOption(OptUtil.endRowOpt());
     o.addOption(OptUtil.tableOpt("table to delete a row range from"));
     o.addOption(forceOpt);
diff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java
index 9213a06..18d519d 100644
--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java
+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/MergeCommand.java
@@ -96,9 +96,7 @@ public class MergeCommand extends Command {
     sizeOpt = new Option("s", "size", true, "merge tablets to the given size over the entire table");
     forceOpt = new Option("f", "force", false, "merge small tablets to large tablets, even if it goes over the given size");
     allOpt = new Option("", "all", false, "allow an entire table to be merged into one tablet without prompting the user for confirmation");
-    Option startRowOpt = OptUtil.startRowOpt();
-    startRowOpt.setDescription("begin row (NOT inclusive)");
-    o.addOption(startRowOpt);
+    o.addOption(OptUtil.startRowOpt());
     o.addOption(OptUtil.endRowOpt());
     o.addOption(OptUtil.tableOpt("table to be merged"));
     o.addOption(verboseOpt);
diff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java
index 9915bdf..432f17a 100644
--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java
+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/OptUtil.java
@@ -117,7 +117,7 @@ public abstract class OptUtil {
   }
 
   public static Option startRowOpt() {
-    final Option o = new Option(START_ROW_OPT, "begin-row", true, "begin row (inclusive)");
+    final Option o = new Option(START_ROW_OPT, "begin-row", true, "begin row (NOT) inclusive");
     o.setArgName("begin-row");
     return o;
   }
diff --git a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java
index 9a0026a..60ae0a7 100644
--- a/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java
+++ b/core/src/main/java/org/apache/accumulo/core/util/shell/commands/ScanCommand.java
@@ -57,6 +57,7 @@ public class ScanCommand extends Command {
 
   protected Option timestampOpt;
   private Option optStartRowExclusive;
+  private Option optStartRowInclusive;
   private Option optEndRowExclusive;
   private Option timeoutOption;
   private Option profileOpt;
@@ -318,7 +319,9 @@ public class ScanCommand extends Command {
 
     o.addOption(scanOptAuths);
     o.addOption(scanOptRow);
-    o.addOption(OptUtil.startRowOpt());
+    optStartRowInclusive = new Option(OptUtil.START_ROW_OPT, "begin-row", true, "begin row (inclusive)");
+    optStartRowInclusive.setArgName("begin-row");
+    o.addOption(optStartRowInclusive);
     o.addOption(OptUtil.endRowOpt());
     o.addOption(optStartRowExclusive);
     o.addOption(optEndRowExclusive);
