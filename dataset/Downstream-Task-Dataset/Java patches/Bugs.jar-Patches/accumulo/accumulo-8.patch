diff --git a/core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java b/core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java
index 64d5970..6a61c50 100644
--- a/core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java
+++ b/core/src/main/java/org/apache/accumulo/core/util/TableDiskUsage.java
@@ -144,12 +144,17 @@ public class TableDiskUsage {
       tdu.addTable(tableId);
     
     HashSet<String> tablesReferenced = new HashSet<String>(tableIds);
+    HashSet<String> emptyTableIds = new HashSet<String>();
     
     for (String tableId : tableIds) {
       Scanner mdScanner = conn.createScanner(Constants.METADATA_TABLE_NAME, Constants.NO_AUTHS);
       mdScanner.fetchColumnFamily(Constants.METADATA_DATAFILE_COLUMN_FAMILY);
       mdScanner.setRange(new KeyExtent(new Text(tableId), null, null).toMetadataRange());
       
+      if(!mdScanner.iterator().hasNext()) {
+        emptyTableIds.add(tableId);
+      }
+      
       for (Entry<Key,Value> entry : mdScanner) {
         String file = entry.getKey().getColumnQualifier().toString();
         if (file.startsWith("../")) {
@@ -215,6 +220,14 @@ public class TableDiskUsage {
       
       usage.put(tableNames, entry.getValue());
     }
+
+    if(!emptyTableIds.isEmpty()) {
+      TreeSet<String> emptyTables = new TreeSet<String>();
+      for (String tableId : emptyTableIds) {
+        emptyTables.add(reverseTableIdMap.get(tableId));
+      }
+      usage.put(emptyTables, 0L);
+    }
     
     for (Entry<TreeSet<String>,Long> entry : usage.entrySet())
       printer.print(String.format("%,24d %s", entry.getValue(), entry.getKey()));
