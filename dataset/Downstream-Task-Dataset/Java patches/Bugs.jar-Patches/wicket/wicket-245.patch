diff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java
index 60764fa..bf7e64b 100644
--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java
+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/BookmarkableMapper.java
@@ -19,11 +19,11 @@ package org.apache.wicket.core.request.mapper;
 import java.util.List;
 
 import org.apache.wicket.Application;
-import org.apache.wicket.core.request.handler.PageProvider;
-import org.apache.wicket.core.request.handler.RenderPageRequestHandler;
+import org.apache.wicket.request.IRequestMapper;
 import org.apache.wicket.request.Request;
 import org.apache.wicket.request.Url;
 import org.apache.wicket.request.component.IRequestablePage;
+import org.apache.wicket.request.mapper.ICompoundRequestMapper;
 import org.apache.wicket.request.mapper.info.PageComponentInfo;
 import org.apache.wicket.request.mapper.parameter.IPageParametersEncoder;
 import org.apache.wicket.request.mapper.parameter.PageParameters;
@@ -118,9 +118,7 @@ public class BookmarkableMapper extends AbstractBookmarkableMapper
 						if (!pageClass.equals(application.getHomePage()))
 						{
 							// WICKET-5094 only enforce mount if page is mounted
-							Url reverseUrl = application.getRootRequestMapper().mapHandler(
-								new RenderPageRequestHandler(new PageProvider(pageClass)));
-							if (!matches(request.cloneWithUrl(reverseUrl)))
+							if (isPageMounted(pageClass, application))
 							{
 								return null;
 							}
@@ -138,6 +136,27 @@ public class BookmarkableMapper extends AbstractBookmarkableMapper
 		return null;
 	}
 
+	private boolean isPageMounted(Class<? extends IRequestablePage> pageClass,
+		Application application)
+	{
+	    ICompoundRequestMapper applicationMappers = application.getRootRequestMapperAsCompound();
+	    
+	    for (IRequestMapper requestMapper : applicationMappers)
+	    {
+		if(requestMapper instanceof AbstractBookmarkableMapper  && requestMapper != this)
+		{
+		    AbstractBookmarkableMapper mapper = (AbstractBookmarkableMapper) requestMapper;  
+		    
+		    if(mapper.checkPageClass(pageClass))
+		    {
+			return true;
+		    }
+		}
+	    }
+	    
+	    return false;
+	}
+
 	@Override
 	protected boolean pageMustHaveBeenCreatedBookmarkable()
 	{
diff --git a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java
index 4f0f107..ff13a62 100644
--- a/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java
+++ b/wicket-core/src/main/java/org/apache/wicket/core/request/mapper/PackageMapper.java
@@ -221,4 +221,11 @@ public class PackageMapper extends AbstractBookmarkableMapper
 	{
 		return false;
 	}
+	
+	@Override
+	protected boolean checkPageClass(Class<? extends IRequestablePage> pageClass)
+	{
+		PackageName pageClassPackageName = PackageName.forClass(pageClass);
+		return packageName.equals(pageClassPackageName);
+	}
 }
