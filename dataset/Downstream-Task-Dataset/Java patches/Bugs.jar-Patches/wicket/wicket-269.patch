diff --git a/wicket-core/src/main/java/org/apache/wicket/ajax/AbstractDefaultAjaxBehavior.java b/wicket-core/src/main/java/org/apache/wicket/ajax/AbstractDefaultAjaxBehavior.java
index a309635..bc0989d 100644
--- a/wicket-core/src/main/java/org/apache/wicket/ajax/AbstractDefaultAjaxBehavior.java
+++ b/wicket-core/src/main/java/org/apache/wicket/ajax/AbstractDefaultAjaxBehavior.java
@@ -504,30 +504,28 @@ public abstract class AbstractDefaultAjaxBehavior extends AbstractAjaxBehavior
 		sb.append("var attrs = ");
 		sb.append(attrsJson);
 		sb.append(";\n");
-		sb.append("var params = {");
-		boolean first = true;
+		JSONArray jsonArray = new JSONArray();
 		for (CallbackParameter curExtraParameter : extraParameters)
 		{
 			if (curExtraParameter.getAjaxParameterName() != null)
 			{
-				if (!first)
-					sb.append(',');
-				else
-					first = false;
-				sb.append('\'').append(curExtraParameter.getAjaxParameterName()).append("': ")
-					.append(curExtraParameter.getAjaxParameterCode());
+				try
+				{
+					JSONObject object = new JSONObject();
+					object.put("name", curExtraParameter.getAjaxParameterName());
+					object.put("value", new JsonFunction(curExtraParameter.getAjaxParameterCode()));
+					jsonArray.put(object);
+				}
+				catch (JSONException e)
+				{
+					throw new WicketRuntimeException(e);
+				}
 			}
 		}
-		sb.append("};\n");
-		if (attributes.getExtraParameters().isEmpty())
-		{
-			sb.append("attrs.").append(AjaxAttributeName.EXTRA_PARAMETERS).append(" = params;\n");
-		}
-		else
-		{
-			sb.append("attrs.").append(AjaxAttributeName.EXTRA_PARAMETERS).append(" = Wicket.merge(attrs.")
-					.append(AjaxAttributeName.EXTRA_PARAMETERS).append(", params);\n");
-		}
+		sb.append("var params = ").append(jsonArray).append(";\n");
+		sb.append("attrs.").append(AjaxAttributeName.EXTRA_PARAMETERS)
+				.append(" = params.concat(attrs.")
+				.append(AjaxAttributeName.EXTRA_PARAMETERS).append(");\n");
 		sb.append("Wicket.Ajax.ajax(attrs);\n");
 		return sb;
 	}
