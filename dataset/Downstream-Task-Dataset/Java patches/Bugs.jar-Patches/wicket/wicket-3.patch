diff --git a/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java b/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java
index ce38a7c..f8f2e50 100644
--- a/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java
+++ b/wicket/src/main/java/org/apache/wicket/ajax/form/AjaxFormChoiceComponentUpdatingBehavior.java
@@ -33,6 +33,9 @@ import org.apache.wicket.util.string.AppendingStringBuffer;
  * <p>
  * Use the normal {@link AjaxFormChoiceComponentUpdatingBehavior} for the normal single component
  * fields
+ * <p>
+ * In order to be supported by this behavior the group components must output children with markup
+ * id in format of 'groupId-childId'
  * 
  * @author jcompagner
  * 
@@ -67,6 +70,7 @@ public abstract class AjaxFormChoiceComponentUpdatingBehavior extends AbstractDe
 		asb.append(" for (var i = 0 ; i < inputNodes.length ; i ++) {\n");
 		asb.append(" var inputNode = inputNodes[i];\n");
 		asb.append(" if (!inputNode.type) continue;\n");
+		asb.append(" if (!(inputNode.id.indexOf(markupId+'-')===0)) continue;\n");
 		asb.append(" var inputType = inputNode.type.toLowerCase();\n");
 		asb.append(" if (inputType == 'checkbox' || inputType == 'radio') {\n");
 		asb.append(" Wicket.Event.add(inputNode, 'click', callbackScript);\n");
diff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java
index 7ebf5c3..c74b293 100644
--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java
+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/Check.java
@@ -94,6 +94,7 @@ public class Check<T> extends LabeledWebMarkupContainer
 	{
 		super(id, model);
 		this.group = group;
+		setOutputMarkupId(true);
 	}
 
 
@@ -112,6 +113,32 @@ public class Check<T> extends LabeledWebMarkupContainer
 		return "check" + uuid;
 	}
 
+	@SuppressWarnings("unchecked")
+	private CheckGroup<T> getGroup()
+	{
+		CheckGroup<T> group = this.group;
+		if (group == null)
+		{
+			group = findParent(CheckGroup.class);
+			if (group == null)
+			{
+				throw new WicketRuntimeException("Check component [" + getPath() +
+					"] cannot find its parent CheckGroup");
+			}
+		}
+		return group;
+	}
+
+	/** {@inheritDoc} */
+	@Override
+	protected void onBeforeRender()
+	{
+		// prefix markup id of this radio with its group's id
+		// this will make it easier to identify all radios that belong to a specific group
+		setMarkupId(getGroup().getMarkupId() + "-" + getMarkupId());
+		super.onBeforeRender();
+	}
+
 
 	/**
 	 * @see Component#onComponentTag(ComponentTag)
@@ -128,16 +155,7 @@ public class Check<T> extends LabeledWebMarkupContainer
 		checkComponentTag(tag, "input");
 		checkComponentTagAttribute(tag, "type", "checkbox");
 
-		CheckGroup<?> group = this.group;
-		if (group == null)
-		{
-			group = findParent(CheckGroup.class);
-			if (group == null)
-			{
-				throw new WicketRuntimeException("Check component [" + getPath() +
-					"] cannot find its parent CheckGroup");
-			}
-		}
+		CheckGroup<?> group = getGroup();
 
 		final String uuid = getValue();
 
diff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java
index e52fe46..65dab2f 100644
--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java
+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/CheckBoxMultipleChoice.java
@@ -411,7 +411,7 @@ public class CheckBoxMultipleChoice<T> extends ListMultipleChoice<T>
 				buffer.append(getPrefix());
 
 				String id = getChoiceRenderer().getIdValue(choice, index);
-				final String idAttr = getInputName() + "_" + id;
+				final String idAttr = getMarkupId() + "-" + getInputName() + "_" + id;
 
 				// Add checkbox element
 				buffer.append("<input name=\"")
diff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java
index 130c2d9..0788018 100644
--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java
+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/Radio.java
@@ -91,6 +91,7 @@ public class Radio<T> extends LabeledWebMarkupContainer
 	{
 		super(id, model);
 		this.group = group;
+		setOutputMarkupId(true);
 	}
 
 
@@ -109,6 +110,34 @@ public class Radio<T> extends LabeledWebMarkupContainer
 		return "radio" + uuid;
 	}
 
+	/** {@inheritDoc} */
+	@Override
+	protected void onBeforeRender()
+	{
+		// prefix markup id of this radio with its group's id
+		// this will make it easier to identify all radios that belong to a specific group
+		setMarkupId(getGroup().getMarkupId() + "-" + getMarkupId());
+		super.onBeforeRender();
+	}
+
+
+	@SuppressWarnings("unchecked")
+	private RadioGroup<T> getGroup()
+	{
+		RadioGroup<T> group = this.group;
+		if (group == null)
+		{
+			group = findParent(RadioGroup.class);
+			if (group == null)
+			{
+				throw new WicketRuntimeException(
+					"Radio component [" +
+						getPath() +
+						"] cannot find its parent RadioGroup. All Radio components must be a child of or below in the hierarchy of a RadioGroup component.");
+			}
+		}
+		return group;
+	}
 
 	/**
 	 * @see Component#onComponentTag(ComponentTag)
@@ -127,19 +156,7 @@ public class Radio<T> extends LabeledWebMarkupContainer
 
 		final String value = getValue();
 
-		RadioGroup<?> group = this.group;
-		if (group == null)
-		{
-			group = findParent(RadioGroup.class);
-			if (group == null)
-			{
-				throw new WicketRuntimeException(
-					"Radio component [" +
-						getPath() +
-						"] cannot find its parent RadioGroup. All Radio components must be a child of or below in the hierarchy of a RadioGroup component.");
-			}
-		}
-
+		RadioGroup<?> group = getGroup();
 
 		// assign name and value
 		tag.put("name", group.getInputName());
diff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java
index 2b762e2..cf1d867 100644
--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java
+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/RadioChoice.java
@@ -450,7 +450,7 @@ public class RadioChoice<T> extends AbstractSingleSelectChoice<T> implements IOn
 				buffer.append(getPrefix());
 
 				String id = getChoiceRenderer().getIdValue(choice, index);
-				final String idAttr = getMarkupId() + "_" + id;
+				final String idAttr = getMarkupId() + "-" + id;
 
 				boolean enabled = isEnabledInHierarchy() && !isDisabled(choice, index, selected);
 
