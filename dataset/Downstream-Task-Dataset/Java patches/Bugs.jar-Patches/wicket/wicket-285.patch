diff --git a/wicket-util/src/main/java/org/apache/wicket/util/resource/ResourceUtils.java b/wicket-util/src/main/java/org/apache/wicket/util/resource/ResourceUtils.java
index edcd96c..ac1d025 100644
--- a/wicket-util/src/main/java/org/apache/wicket/util/resource/ResourceUtils.java
+++ b/wicket-util/src/main/java/org/apache/wicket/util/resource/ResourceUtils.java
@@ -34,7 +34,8 @@ public class ResourceUtils
 	/** The default postfix for minified names (ex: /css/mystyle.min.css) **/
 	public static final String MIN_POSTFIX_DEFAULT = "min";
 	/** Regular expression patter to extract the locale from the filename (ex: de_DE) **/
-	private static final Pattern LOCALE_PATTERN = Pattern.compile("_([a-z]{2})(_([A-Z]{2})(_([^_]+))?)?$");
+	private static final Pattern LOCALE_MIN_PATTERN = Pattern
+		.compile("_([a-z]{2})(_([A-Z]{2})(_([^_\\.]+))?)?(\\.min)?$");
 	/** Stores standard ISO country codes from {@code java.util.Locale} **/
 	private final static Set<String> isoCountries = new HashSet<>(
 		Arrays.asList(Locale.getISOCountries()));
@@ -77,7 +78,12 @@ public class ResourceUtils
 	}
 	
 	/**
-	 * Extract the locale from the filename
+	 * Extract the locale from the filename taking into account possible minimized resource name.
+	 * 
+	 * E.g. {@code file_us_EN.min.js} will correctly determine a locale of {@code us_EN} by
+	 * stripping the {@code .min} from the filename, the filename returned will be
+	 * {@code file.min.js}, if you want the {@code .min} to be removed as well, use
+	 * {@link #getLocaleFromMinifiedFilename(String)} instead.
 	 * 
 	 * @param path
 	 *            The file path
@@ -86,7 +92,8 @@ public class ResourceUtils
 	public static PathLocale getLocaleFromFilename(String path)
 	{
 		String extension = "";
-		int pos = path.lastIndexOf('.');
+
+		final int pos = path.lastIndexOf('.');
 		if (pos != -1)
 		{
 			extension = path.substring(pos);
@@ -94,12 +101,13 @@ public class ResourceUtils
 		}
 
 		String filename = Strings.lastPathComponent(path, '/');
-		Matcher matcher = LOCALE_PATTERN.matcher(filename);
+		Matcher matcher = LOCALE_MIN_PATTERN.matcher(filename);
 		if (matcher.find())
 		{
 			String language = matcher.group(1);
 			String country = matcher.group(3);
 			String variant = matcher.group(5);
+			String min = matcher.group(6);
 
 			// did we find a language?
 			if (language != null)
@@ -124,8 +132,9 @@ public class ResourceUtils
 
 			if (language != null)
 			{
-				pos = path.length() - filename.length() + matcher.start();
-				String basePath = path.substring(0, pos) + extension;
+				int languagePos = path.length() - filename.length() + matcher.start();
+				String basePath = path.substring(0, languagePos) + (min == null ? "" : min) +
+					extension;
 
 				Locale locale = new Locale(language, country != null ? country : "",
 					variant != null ? variant : "");
