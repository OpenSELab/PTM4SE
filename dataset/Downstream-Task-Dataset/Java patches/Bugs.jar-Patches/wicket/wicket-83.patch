diff --git a/wicket-request/src/main/java/org/apache/wicket/request/Url.java b/wicket-request/src/main/java/org/apache/wicket/request/Url.java
index 247197e..d9e0cd5 100755
--- a/wicket-request/src/main/java/org/apache/wicket/request/Url.java
+++ b/wicket-request/src/main/java/org/apache/wicket/request/Url.java
@@ -22,6 +22,7 @@ import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Locale;
 
 import org.apache.wicket.util.lang.Args;
 import org.apache.wicket.util.lang.Generics;
@@ -105,6 +106,7 @@ public final class Url implements Serializable
 	 * Parses the given URL string.
 	 * 
 	 * @param url
+	 *           absolute or relative url with query string
 	 * @return Url object
 	 */
 	public static Url parse(final String url)
@@ -116,7 +118,7 @@ public final class Url implements Serializable
 	 * Parses the given URL string.
 	 * 
 	 * @param url
-	 *           full absolute or relative url with query string
+	 *           absolute or relative url with query string
 	 * @param charset
 	 * @return Url object
 	 */
@@ -154,12 +156,13 @@ public final class Url implements Serializable
 
 		if (protocolAt != -1)
 		{
-			result.protocol = absoluteUrl.substring(0, protocolAt);
+			result.protocol = absoluteUrl.substring(0, protocolAt).toLowerCase(Locale.US);
 			final String afterProto = absoluteUrl.substring(protocolAt + 3);
 			final String hostAndPort;
 
 			int relativeAt = afterProto.indexOf('/');
-
+			
+			
 			if (relativeAt == -1)
 			{
 				relativeUrl = "";
@@ -176,7 +179,7 @@ public final class Url implements Serializable
 			if (portAt == -1)
 			{
 				result.host = hostAndPort;
-				result.port = null;
+				result.port = getDefaultPortForProtocol(result.protocol);
 			}
 			else
 			{
@@ -230,6 +233,33 @@ public final class Url implements Serializable
 	}
 
 	/**
+	 * get default port number for protocol
+	 * 
+	 * @param protocol
+	 *           name of protocol
+	 * @return default port for protocol or <code>null</code> if unknown
+	 */
+	private static Integer getDefaultPortForProtocol(String protocol)
+	{
+		if ("http".equals(protocol))
+		{
+			return 80;
+		}
+		else if ("https".equals(protocol))
+		{
+			return 443;
+		}
+		else if ("ftp".equals(protocol))
+		{
+			return 21;
+		}
+		else
+		{
+			return null;
+		}
+	}
+
+	/**
 	 * Construct.
 	 */
 	public Url()
@@ -281,7 +311,7 @@ public final class Url implements Serializable
 	 */
 	public Url(final List<String> segments, final Charset charset)
 	{
-		this(segments, Collections.<QueryParameter> emptyList(), charset);
+		this(segments, Collections.<QueryParameter>emptyList(), charset);
 	}
 
 	/**
