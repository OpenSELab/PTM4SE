diff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/Form.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/Form.java
index a5d3b39..806e3a5 100644
--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/Form.java
+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/Form.java
@@ -376,7 +376,10 @@ public class Form<T> extends WebMarkupContainer implements IFormSubmitListener,
 	private Bytes maxSize = null;
 
 	/** True if the form has enctype of multipart/form-data */
-	private boolean multiPart = false;
+	private short multiPart = 0;
+
+	private static short MULTIPART_HARD = 0x01;
+	private static short MULTIPART_HINT = 0x02;
 
 	/**
 	 * Constructs a form with no validation.
@@ -1051,7 +1054,14 @@ public class Form<T> extends WebMarkupContainer implements IFormSubmitListener,
 	 */
 	public void setMultiPart(boolean multiPart)
 	{
-		this.multiPart = multiPart;
+		if (multiPart)
+		{
+			this.multiPart |= MULTIPART_HARD;
+		}
+		else
+		{
+			this.multiPart &= ~MULTIPART_HARD;
+		}
 	}
 
 	/**
@@ -1399,7 +1409,7 @@ public class Form<T> extends WebMarkupContainer implements IFormSubmitListener,
 
 	private boolean isMultiPart()
 	{
-		if (multiPart)
+		if (multiPart != 0)
 		{
 			return true;
 		}
@@ -1411,7 +1421,7 @@ public class Form<T> extends WebMarkupContainer implements IFormSubmitListener,
 
 				public Object component(Form<?> form)
 				{
-					if (form.multiPart)
+					if (form.multiPart != 0)
 					{
 						anyEmbeddedMultipart[0] = true;
 						return STOP_TRAVERSAL;
@@ -1788,6 +1798,9 @@ public class Form<T> extends WebMarkupContainer implements IFormSubmitListener,
 	@Override
 	protected void onRender()
 	{
+		// clear multipart hint, it will be set if necessary by the visitor
+		this.multiPart &= ~MULTIPART_HINT;
+
 		// Force multi-part on if any child form component is multi-part
 		visitFormComponents(new FormComponent.AbstractVisitor()
 		{
@@ -1796,7 +1809,7 @@ public class Form<T> extends WebMarkupContainer implements IFormSubmitListener,
 			{
 				if (formComponent.isVisible() && formComponent.isMultiPart())
 				{
-					setMultiPart(true);
+					multiPart |= MULTIPART_HINT;
 				}
 			}
 		});
diff --git a/wicket/src/main/java/org/apache/wicket/markup/html/form/upload/MultiFileUploadField.java b/wicket/src/main/java/org/apache/wicket/markup/html/form/upload/MultiFileUploadField.java
index ef2b286..9b49e7a 100644
--- a/wicket/src/main/java/org/apache/wicket/markup/html/form/upload/MultiFileUploadField.java
+++ b/wicket/src/main/java/org/apache/wicket/markup/html/form/upload/MultiFileUploadField.java
@@ -193,9 +193,13 @@ public class MultiFileUploadField extends FormComponentPanel<Collection<FileUplo
 			throw new IllegalStateException("Component " + getClass().getName() + " must have a " +
 				Form.class.getName() + " component above in the hierarchy");
 		}
-		form.setMultiPart(true);
 	}
 
+	@Override
+	public boolean isMultiPart()
+	{
+		return true;
+	}
 
 	/**
 	 * @see org.apache.wicket.markup.html.IHeaderContributor#renderHead(org.apache.wicket.markup.html.IHeaderResponse)
diff --git a/wicket/src/main/java/org/apache/wicket/protocol/http/servlet/MultipartServletWebRequest.java b/wicket/src/main/java/org/apache/wicket/protocol/http/servlet/MultipartServletWebRequest.java
index 6c95e95..b4ce08b 100644
--- a/wicket/src/main/java/org/apache/wicket/protocol/http/servlet/MultipartServletWebRequest.java
+++ b/wicket/src/main/java/org/apache/wicket/protocol/http/servlet/MultipartServletWebRequest.java
@@ -110,7 +110,8 @@ public class MultipartServletWebRequest extends ServletWebRequest implements IMu
 		final boolean isMultipart = ServletFileUpload.isMultipartContent(request);
 		if (!isMultipart)
 		{
-			throw new IllegalStateException("ServletRequest does not contain multipart content");
+			throw new IllegalStateException(
+				"ServletRequest does not contain multipart content. One possible solution is to explicitly call Form.setMultipart(true), Wicket tries its best to auto-detect multipart forms but there are certain situation where it cannot.");
 		}
 
 
