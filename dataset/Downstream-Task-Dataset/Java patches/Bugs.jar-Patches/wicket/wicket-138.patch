diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/transformer/XsltOutputTransformerContainer.java b/wicket-core/src/main/java/org/apache/wicket/markup/transformer/XsltOutputTransformerContainer.java
index d09c100..4d1724b 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/transformer/XsltOutputTransformerContainer.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/transformer/XsltOutputTransformerContainer.java
@@ -19,7 +19,6 @@ package org.apache.wicket.markup.transformer;
 import org.apache.wicket.AttributeModifier;
 import org.apache.wicket.Component;
 import org.apache.wicket.markup.MarkupResourceStream;
-import org.apache.wicket.markup.MarkupType;
 import org.apache.wicket.model.IModel;
 import org.apache.wicket.model.Model;
 
@@ -29,9 +28,8 @@ import org.apache.wicket.model.Model;
  * with an associated markup and must have a filename equal to the component's id.
  * <p>
  * The containers tag will be the root element of the xml data applied for transformation to ensure
- * the xml data are well formed (single root element). In addition the attribute
- * <code>xmlns:wicket="http://wicket.apache.org/dtds.data/wicket-xhtml1.3-strict.dtd</code> is added
- * to the root element to allow the XSL processor to handle the wicket namespace.
+ * the xml data are well formed (single root element). In addition the attribute <code>xmlns:wicket="http://wicket.apache.org/dtds.data/wicket-xhtml1.3-strict.dtd</code>
+ * is added to the root element to allow the XSL processor to handle the wicket namespace.
  * <p>
  * Similar to this container, a <code>IBehavior</code> is available which does the same, but does
  * not require an additional Container.
@@ -105,12 +103,6 @@ public class XsltOutputTransformerContainer extends AbstractOutputTransformerCon
 	}
 
 	@Override
-	public MarkupType getMarkupType()
-	{
-		return new MarkupType("xsl", null);
-	}
-
-	@Override
 	public CharSequence transform(final Component component, final CharSequence output)
 		throws Exception
 	{
