diff --git a/wicket/src/main/java/org/apache/wicket/util/convert/ConverterLocator.java b/wicket/src/main/java/org/apache/wicket/util/convert/ConverterLocator.java
index fc09b99..0b9b093 100644
--- a/wicket/src/main/java/org/apache/wicket/util/convert/ConverterLocator.java
+++ b/wicket/src/main/java/org/apache/wicket/util/convert/ConverterLocator.java
@@ -101,7 +101,7 @@ public class ConverterLocator implements IConverterLocator
 				else
 				{
 					throw new ConversionException("Could not convert value: " + value +
-						" to type: " + theType.getName() + "(Could not find compatible converter).").setSourceValue(value);
+						" to type: " + theType.getName() + ". Could not find compatible converter.").setSourceValue(value);
 				}
 			}
 			catch (Exception e)
diff --git a/wicket/src/main/java/org/apache/wicket/util/lang/PropertyResolver.java b/wicket/src/main/java/org/apache/wicket/util/lang/PropertyResolver.java
index d83ba14..64a717b 100644
--- a/wicket/src/main/java/org/apache/wicket/util/lang/PropertyResolver.java
+++ b/wicket/src/main/java/org/apache/wicket/util/lang/PropertyResolver.java
@@ -1094,6 +1094,9 @@ public final class PropertyResolver
 			Class type = null;
 			if (setMethod != null)
 			{
+				// getMethod is always there and if the value will be set through a setMethod then
+				// the getMethod return type will be its type. Else we have to look at the
+				// parameters if the setter but getting the return type is quicker
 				type = getMethod.getReturnType();
 			}
 			else if (field != null)
@@ -1104,7 +1107,7 @@ public final class PropertyResolver
 			Object converted = null;
 			if (type != null)
 			{
-				converted = converter.convert(value, getMethod.getReturnType());
+				converted = converter.convert(value, type);
 				if (converted == null)
 				{
 					if (value != null)
