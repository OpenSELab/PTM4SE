diff --git a/wicket-core/src/main/java/org/apache/wicket/markup/resolver/WicketMessageResolver.java b/wicket-core/src/main/java/org/apache/wicket/markup/resolver/WicketMessageResolver.java
index 03d7acd..fa4122a 100644
--- a/wicket-core/src/main/java/org/apache/wicket/markup/resolver/WicketMessageResolver.java
+++ b/wicket-core/src/main/java/org/apache/wicket/markup/resolver/WicketMessageResolver.java
@@ -344,10 +344,12 @@ public class WicketMessageResolver implements IComponentResolver
 				while (markupStream.hasMore() && !markupStream.get().closes(openTag))
 				{
 					MarkupElement element = markupStream.get();
+
 					// If it a tag like <wicket..> or <span wicket:id="..." >
 					if ((element instanceof ComponentTag) && !markupStream.atCloseTag())
 					{
-						String id = ((ComponentTag)element).getId();
+						ComponentTag currentTag = (ComponentTag)element;
+						String id = currentTag.getId();
 
 						// Temporarily replace the web response with a String response
 						final Response webResponse = getResponse();
@@ -358,6 +360,18 @@ public class WicketMessageResolver implements IComponentResolver
 							getRequestCycle().setResponse(response);
 
 							Component component = getParent().get(id);
+							if (component == null)
+							{
+								component = ComponentResolvers.resolve(getParent(), markupStream,
+									currentTag, null);
+
+								// Must not be a Page and it must be connected to a parent.
+								if (component.getParent() == null)
+								{
+									component = null;
+								}
+							}
+
 							if (component != null)
 							{
 								component.render();
