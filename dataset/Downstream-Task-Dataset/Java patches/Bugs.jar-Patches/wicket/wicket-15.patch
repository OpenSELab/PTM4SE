diff --git a/wicket/src/main/java/org/apache/wicket/Page.java b/wicket/src/main/java/org/apache/wicket/Page.java
index eaf188d..b6f0290 100644
--- a/wicket/src/main/java/org/apache/wicket/Page.java
+++ b/wicket/src/main/java/org/apache/wicket/Page.java
@@ -33,6 +33,7 @@ import org.apache.wicket.authorization.strategies.page.SimplePageAuthorizationSt
 import org.apache.wicket.markup.MarkupException;
 import org.apache.wicket.markup.MarkupStream;
 import org.apache.wicket.markup.html.WebPage;
+import org.apache.wicket.markup.html.border.Border;
 import org.apache.wicket.markup.html.form.Form;
 import org.apache.wicket.markup.resolver.IComponentResolver;
 import org.apache.wicket.model.IModel;
@@ -1133,6 +1134,29 @@ public abstract class Page extends MarkupContainer implements IRedirectListener,
 							}
 						}
 					}
+
+					// Check if this component is a child of a border whose body is invisible and if
+					// so ignore it
+					Border border = component.findParent(Border.class);
+					if (border != null && !border.getBodyContainer().isVisibleInHierarchy())
+					{
+
+						// Suppose:
+						//						  
+						// <div wicket:id="border"><div wicket:id="label"></div> suppose
+						// border->label and border's body is hidden.
+						//						  
+						// The label is added to border not to its hidden body so as far as wicket
+						// is concerned label is visible in hierarchy, but when rendering label wont
+						// be rendered because in the markup it is inside the border's hidden body.
+						// Thus component use check will fail even though it shouldnt - make sure it
+						// doesnt.
+						//						 
+
+						// TODO it would be more accurate to determine that this component is inside
+						// the border parent's markup not the border's itself
+						iterator.remove();
+					}
 				}
 				// if still > 0
 				if (unrenderedComponents.size() > 0)
