diff --git a/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java b/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java
index 5e48a83..6c85808 100644
--- a/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java
+++ b/wicket-core/src/main/java/org/apache/wicket/ConverterLocator.java
@@ -189,33 +189,32 @@ public class ConverterLocator implements IConverterLocator
 	public final <C> IConverter<C> get(Class<C> c)
 	{
 		@SuppressWarnings("unchecked")
-		final IConverter<C> converter;
+		IConverter<C> converter = (IConverter<C>)classToConverter.get(c.getName());
 
-		// Date based converters work with thread unsafe DateFormats and
-		// a new instance should be created for each usage
-		if (Date.class.equals(c))
-		{
-			converter = (IConverter<C>) new DateConverter();
-		}
-		else if  (java.sql.Date.class.equals(c))
-		{
-			converter = (IConverter<C>) new SqlDateConverter();
-		}
-		else if (java.sql.Time.class.equals(c))
-		{
-			converter = (IConverter<C>) new SqlTimeConverter();
-		}
-		else if (java.sql.Timestamp.class.equals(c))
-		{
-			converter = (IConverter<C>) new SqlTimestampConverter();
-		}
-		else if (Calendar.class.equals(c))
-		{
-			converter = (IConverter<C>) new CalendarConverter();
-		}
-		else
+		if (converter == null)
 		{
-			converter = (IConverter<C>)classToConverter.get(c.getName());
+			// Date based converters work with thread unsafe DateFormats and
+			// a new instance should be created for each usage
+			if (Date.class.equals(c))
+			{
+				converter = (IConverter<C>) new DateConverter();
+			}
+			else if  (java.sql.Date.class.equals(c))
+			{
+				converter = (IConverter<C>) new SqlDateConverter();
+			}
+			else if (java.sql.Time.class.equals(c))
+			{
+				converter = (IConverter<C>) new SqlTimeConverter();
+			}
+			else if (java.sql.Timestamp.class.equals(c))
+			{
+				converter = (IConverter<C>) new SqlTimestampConverter();
+			}
+			else if (Calendar.class.equals(c))
+			{
+				converter = (IConverter<C>) new CalendarConverter();
+			}
 		}
 		return converter;
 	}
