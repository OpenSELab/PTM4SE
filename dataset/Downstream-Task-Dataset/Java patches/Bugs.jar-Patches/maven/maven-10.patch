diff --git a/maven-project/src/main/java/org/apache/maven/project/ModelUtils.java b/maven-project/src/main/java/org/apache/maven/project/ModelUtils.java
index 66527df..7e6de40 100644
--- a/maven-project/src/main/java/org/apache/maven/project/ModelUtils.java
+++ b/maven-project/src/main/java/org/apache/maven/project/ModelUtils.java
@@ -82,6 +82,11 @@ public final class ModelUtils
 
                 String parentInherited = parentPlugin.getInherited();
 
+                // only merge plugin definition from the parent if at least one 
+                // of these is true:
+                // 1. we're not processing the plugins in an inheritance-based merge
+                // 2. the parent's <inherited/> flag is not set
+                // 3. the parent's <inherited/> flag is set to true
                 if ( !handleAsInheritance || parentInherited == null ||
                     Boolean.valueOf( parentInherited ).booleanValue() )
                 {
@@ -97,18 +102,21 @@ public final class ModelUtils
                         mergePluginDefinitions( childPlugin, parentPlugin, handleAsInheritance );
                     }
 
+                    // if we're processing this as an inheritance-based merge, and
+                    // the parent's <inherited/> flag is not set, then we need to
+                    // clear the inherited flag in the merge result.
                     if ( handleAsInheritance && parentInherited == null )
                     {
                         assembledPlugin.unsetInheritanceApplied();
                     }
 
                     mergedPlugins.add(assembledPlugin);
+
+                    // fix for MNG-2221 (assembly cache was not being populated for later reference):
+                    assembledPlugins.put(  assembledPlugin.getKey(), assembledPlugin );
                 }
             }
 
-	    // FIXME: not sure what's intended here, but this entire
-	    // loop can be replaced by 'mergedPlugins.addAll( childPlugins.values() );
-	    // since assembledPlugins is never updated and remains empty.
             for ( Iterator it = childPlugins.values().iterator(); it.hasNext(); )
             {
                 Plugin childPlugin = (Plugin) it.next();
