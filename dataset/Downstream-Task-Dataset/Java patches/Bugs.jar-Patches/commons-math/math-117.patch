diff --git a/src/main/java/org/apache/commons/math3/linear/RealVector.java b/src/main/java/org/apache/commons/math3/linear/RealVector.java
index 89611c3..f05ea4d 100644
--- a/src/main/java/org/apache/commons/math3/linear/RealVector.java
+++ b/src/main/java/org/apache/commons/math3/linear/RealVector.java
@@ -642,27 +642,20 @@ public abstract class RealVector {
      * @return the matrix outer product between this instance and {@code v}.
      */
     public RealMatrix outerProduct(RealVector v) {
-        RealMatrix product;
+        final int m = this.getDimension();
+        final int n = v.getDimension();
+        final RealMatrix product;
         if (v instanceof SparseRealVector || this instanceof SparseRealVector) {
-            product = new OpenMapRealMatrix(this.getDimension(),
-                                            v.getDimension());
+            product = new OpenMapRealMatrix(m, n);
         } else {
-            product = new Array2DRowRealMatrix(this.getDimension(),
-                                               v.getDimension());
+            product = new Array2DRowRealMatrix(m, n);
         }
-        Iterator<Entry> thisIt = sparseIterator();
-        while (thisIt.hasNext()) {
-            final Entry thisE = thisIt.next();
-            Iterator<Entry> otherIt = v.sparseIterator();
-            while (otherIt.hasNext()) {
-                final Entry otherE = otherIt.next();
-                product.setEntry(thisE.getIndex(), otherE.getIndex(),
-                                 thisE.getValue() * otherE.getValue());
+        for (int i = 0; i < m; i++) {
+            for (int j = 0; j < n; j++) {
+                product.setEntry(i, j, this.getEntry(i) * v.getEntry(j));
             }
         }
-
         return product;
-
     }
 
     /**
