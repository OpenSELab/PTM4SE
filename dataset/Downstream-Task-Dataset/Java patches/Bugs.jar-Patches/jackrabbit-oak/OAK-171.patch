diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/Commit.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/Commit.java
index eec0609..5bd72a3 100644
--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/Commit.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/Commit.java
@@ -448,10 +448,14 @@ public class Commit {
         DocumentStore store = nodeStore.getDocumentStore();
         for (UpdateOp op : changed) {
             UpdateOp reverse = op.getReverseOperation();
+            if (op.isNew()) {
+                NodeDocument.setDeletedOnce(reverse);
+            }
             store.findAndUpdate(NODES, reverse);
         }
         for (UpdateOp op : newDocuments) {
             UpdateOp reverse = op.getReverseOperation();
+            NodeDocument.setDeletedOnce(reverse);
             store.findAndUpdate(NODES, reverse);
         }
         UpdateOp removeCollision = new UpdateOp(commitRoot.getId(), false);
diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java
index 8424663..c5dd0d3 100644
--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/plugins/document/NodeDocument.java
@@ -1372,10 +1372,13 @@ public final class NodeDocument extends Document implements CachedNodeDocument{
         if(deleted) {
             //DELETED_ONCE would be set upon every delete.
             //possibly we can avoid that
-            checkNotNull(op).set(DELETED_ONCE, Boolean.TRUE);
+            setDeletedOnce(op);
         }
-        checkNotNull(op).setMapEntry(DELETED, checkNotNull(revision),
-                String.valueOf(deleted));
+        checkNotNull(op).setMapEntry(DELETED, checkNotNull(revision), String.valueOf(deleted));
+    }
+
+    public static void setDeletedOnce(@Nonnull UpdateOp op) {
+        checkNotNull(op).set(DELETED_ONCE, Boolean.TRUE);
     }
 
     public static void removeDeleted(@Nonnull UpdateOp op,
