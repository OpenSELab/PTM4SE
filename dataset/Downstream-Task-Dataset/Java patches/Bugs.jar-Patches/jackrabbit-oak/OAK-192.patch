diff --git a/oak-auth-external/src/main/java/org/apache/jackrabbit/oak/spi/security/authentication/external/ExternalIdentityRef.java b/oak-auth-external/src/main/java/org/apache/jackrabbit/oak/spi/security/authentication/external/ExternalIdentityRef.java
index ae67498..f3ffd6f 100644
--- a/oak-auth-external/src/main/java/org/apache/jackrabbit/oak/spi/security/authentication/external/ExternalIdentityRef.java
+++ b/oak-auth-external/src/main/java/org/apache/jackrabbit/oak/spi/security/authentication/external/ExternalIdentityRef.java
@@ -39,13 +39,13 @@ public class ExternalIdentityRef {
      */
     public ExternalIdentityRef(@Nonnull String id, @CheckForNull String providerName) {
         this.id = id;
-        this.providerName = providerName;
+        this.providerName = (providerName == null || providerName.isEmpty()) ? null : providerName;
 
         StringBuilder b = new StringBuilder();
         escape(b, id);
-        if (providerName != null && providerName.length() > 0) {
+        if (this.providerName != null) {
             b.append(';');
-            escape(b, providerName);
+            escape(b, this.providerName);
         }
         string =  b.toString();
     }
@@ -82,6 +82,7 @@ public class ExternalIdentityRef {
      * @param str the string
      * @return the reference
      */
+    @Nonnull
     public static ExternalIdentityRef fromString(@Nonnull String str) {
         int idx = str.indexOf(';');
         if (idx < 0) {
@@ -99,7 +100,7 @@ public class ExternalIdentityRef {
      * @param builder the builder
      * @param str the string
      */
-    private void escape(StringBuilder builder, CharSequence str) {
+    private static void escape(@Nonnull StringBuilder builder, @Nonnull CharSequence str) {
         final int len = str.length();
         for (int i=0; i<len; i++) {
             char c = str.charAt(i);
@@ -119,16 +120,20 @@ public class ExternalIdentityRef {
     }
 
     /**
-     * Tests if the given object is an external identity reference and if it's getString() is equal to this.
+     * Tests if the given object is an external identity reference and if it's
+     * getString() is equal to this. Note, that there is no need to
+     * include {@code id} and {@code provider} fields in the comparison as
+     * the string representation already incorporates both.
      */
     @Override
     public boolean equals(Object o) {
-        try {
-            // assuming that we never compare other types of classes
-            return this == o || string.equals(((ExternalIdentityRef) o).string);
-        } catch (Exception e) {
-            return false;
+        if (this == o) {
+            return true;
+        }
+        if (o instanceof ExternalIdentityRef) {
+            return string.equals(((ExternalIdentityRef) o).string);
         }
+        return false;
     }
 
     /**
