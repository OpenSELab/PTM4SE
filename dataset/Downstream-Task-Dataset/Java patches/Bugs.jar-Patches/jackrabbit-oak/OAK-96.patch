diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/AndImpl.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/AndImpl.java
index d0b9245..090c265 100644
--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/AndImpl.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/query/ast/AndImpl.java
@@ -110,7 +110,13 @@ public class AndImpl extends ConstraintImpl {
         for (Entry<DynamicOperandImpl, Set<StaticOperandImpl>> e2 : m2.entrySet()) {
             Set<StaticOperandImpl> s = result.get(e2.getKey());
             if (s != null) {
-                s.retainAll(e2.getValue());
+                // OAK-1933
+                // a property can have multiple values at the same time,
+                // so that "where a=1 and a=2" needs to be kept and can not
+                // be reduced to "where false" - in fact, we could 
+                // extend it to "where a in (1, 2)" so that an index can be used,
+                // but we might as well keep it at "where a = 1" as that would
+                // also use an index
             } else {
                 result.put(e2.getKey(), e2.getValue());
             }
diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/QueryIndex.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/QueryIndex.java
index a5cfe10..f3cf5ef 100644
--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/QueryIndex.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/spi/query/QueryIndex.java
@@ -194,8 +194,8 @@ public interface QueryIndex {
         double getCostPerEntry();
 
         /**
-         * The estimated number of entries. This value does not have to be
-         * accurate.
+         * The estimated number of entries in the cursor that is returned by the query method,
+         * when using this plan. This value does not have to be accurate.
          * 
          * @return the estimated number of entries
          */
