diff --git a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/Aggregate.java b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/Aggregate.java
index 1143b81..8c94e08 100644
--- a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/Aggregate.java
+++ b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/Aggregate.java
@@ -242,7 +242,7 @@ class Aggregate {
         public void collectResults(NodeInclude rootInclude, String rootIncludePath, String nodePath,
                                    NodeState nodeState, ResultCollector results) throws CommitFailedException {
             //For supporting jcr:contains(jcr:content, 'foo')
-            if (rootInclude != this && rootInclude.relativeNode){
+            if (rootInclude.relativeNode){
                 results.onResult(new NodeIncludeResult(nodePath, rootIncludePath, nodeState));
             }
 
@@ -511,7 +511,10 @@ class Aggregate {
         public void collectResults(ResultCollector results)
                 throws CommitFailedException {
             checkArgument(status == Status.MATCH_FOUND);
-            String rootIncludePath = aggregateStack.isEmpty() ?  null : aggregateStack.get(0);
+
+            //If result being collected as part of reaggregation then take path
+            //from the stack otherwise its the current path
+            String rootIncludePath = aggregateStack.isEmpty() ?  currentPath : aggregateStack.get(0);
             currentInclude.collectResults(rootState.rootInclude, rootIncludePath,
                     currentPath, matchedNodeState, results);
         }
