diff --git a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java
index d35915c..7b0934e 100644
--- a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java
+++ b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LuceneIndex.java
@@ -724,15 +724,7 @@ public class LuceneIndex implements AdvanceFulltextQueryIndex {
                 BooleanQuery q = new BooleanQuery();
                 for (FullTextExpression e : and.list) {
                     Query x = getFullTextQuery(e, analyzer, reader);
-                    // Lucene can't deal with "must(must_not(x))"
-                    if (x instanceof BooleanQuery) {
-                        BooleanQuery bq = (BooleanQuery) x;
-                        for (BooleanClause c : bq.clauses()) {
-                            q.add(c);
-                        }
-                    } else {
-                        q.add(x, MUST);
-                    }
+                    q.add(x, MUST);
                 }
                 result.set(q);
                 return true;
diff --git a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java
index 136f973..e0bbf79 100644
--- a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java
+++ b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/LucenePropertyIndex.java
@@ -836,15 +836,7 @@ public class LucenePropertyIndex implements AdvancedQueryIndex, QueryIndex, Nati
                 BooleanQuery q = new BooleanQuery();
                 for (FullTextExpression e : and.list) {
                     Query x = getFullTextQuery(plan, e, analyzer);
-                    // Lucene can't deal with "must(must_not(x))"
-                    if (x instanceof BooleanQuery) {
-                        BooleanQuery bq = (BooleanQuery) x;
-                        for (BooleanClause c : bq.clauses()) {
-                            q.add(c);
-                        }
-                    } else {
-                        q.add(x, MUST);
-                    }
+                    q.add(x, MUST);
                 }
                 result.set(q);
                 return true;
