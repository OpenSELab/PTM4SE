diff --git a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/delegate/NodeDelegate.java b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/delegate/NodeDelegate.java
index 925a88b..c42f7f9 100644
--- a/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/delegate/NodeDelegate.java
+++ b/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/delegate/NodeDelegate.java
@@ -586,6 +586,7 @@ public class NodeDelegate extends ItemDelegate {
         }
 
         // First look for a matching named property definition
+        Tree fuzzyMatch = null;
         for (Tree type : types) {
             Tree definitions = type
                     .getChild(OAK_NAMED_PROPERTY_DEFINITIONS)
@@ -598,10 +599,12 @@ public class NodeDelegate extends ItemDelegate {
             if (definition.exists()) {
                 return definition;
             }
-            if (!exactTypeMatch) {
-                for (Tree def : definitions.getChildren()) {
-                    if (propertyType.isArray() == TreeUtil.getBoolean(def, JCR_MULTIPLE)) {
-                        return def;
+            for (Tree def : definitions.getChildren()) {
+                if (propertyType.isArray() == TreeUtil.getBoolean(def, JCR_MULTIPLE)) {
+                    if (getBoolean(def, JCR_PROTECTED)) {
+                        return null; // no fuzzy matches for protected items
+                    } else if (!exactTypeMatch && fuzzyMatch == null) {
+                        fuzzyMatch = def;
                     }
                 }
             }
@@ -618,16 +621,17 @@ public class NodeDelegate extends ItemDelegate {
             if (definition.exists()) {
                 return definition;
             }
-            if (!exactTypeMatch) {
+            if (!exactTypeMatch && fuzzyMatch == null) {
                 for (Tree def : definitions.getChildren()) {
                     if (propertyType.isArray() == TreeUtil.getBoolean(def, JCR_MULTIPLE)) {
-                        return def;
+                        fuzzyMatch = def;
+                        break;
                     }
                 }
             }
         }
 
-        return null;
+        return fuzzyMatch;
     }
 
     private Tree findMatchingChildNodeDefinition(
