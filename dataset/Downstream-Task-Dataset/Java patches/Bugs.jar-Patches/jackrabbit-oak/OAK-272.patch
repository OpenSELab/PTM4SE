diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/core/AbstractNodeLocation.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/core/AbstractNodeLocation.java
index e70a1b1..89df0ac 100644
--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/core/AbstractNodeLocation.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/core/AbstractNodeLocation.java
@@ -57,15 +57,15 @@ abstract class AbstractNodeLocation<T extends Tree> extends AbstractTreeLocation
 
     @Override
     public TreeLocation getChild(String name) {
-        T child = getChildTree(name);
-        if (child != null) {
-            return createNodeLocation(child);
-        }
-
         PropertyState prop = getPropertyState(name);
         if (prop != null) {
             return createPropertyLocation(this, name);
         }
+
+        T child = getChildTree(name);
+        if (child != null) {
+            return createNodeLocation(child);
+        }
         return new NullLocation(this, name);
     }
 
diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java
index 8bda9f2..efb5ec9 100644
--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/core/TreeImpl.java
@@ -91,7 +91,7 @@ public class TreeImpl implements Tree {
         this.root = checkNotNull(root);
         this.parent = checkNotNull(parent);
         this.name = checkNotNull(name);
-        this.nodeBuilder = parent.nodeBuilder.child(name);
+        this.nodeBuilder = parent.nodeBuilder.getChildNode(name);
         this.pendingMoves = checkNotNull(pendingMoves);
     }
 
@@ -187,11 +187,7 @@ public class TreeImpl implements Tree {
         checkNotNull(name);
         enter();
         TreeImpl child = internalGetChild(name);
-        if (child != null && canRead(child)) {
-            return child;
-        } else {
-            return null;
-        }
+        return canRead(child) ? child : null;
     }
 
     @Override
@@ -438,11 +434,8 @@ public class TreeImpl implements Tree {
         TreeImpl child = this;
         for (String name : elements(path)) {
             child = child.internalGetChild(name);
-            if (child == null) {
-                return null;
-            }
         }
-        return (canRead(child)) ? child : null;
+        return canRead(child) ? child : null;
     }
 
     /**
@@ -526,9 +519,7 @@ public class TreeImpl implements Tree {
     }
 
     private TreeImpl internalGetChild(String childName) {
-        return nodeBuilder.hasChildNode(childName)
-            ? new TreeImpl(root, this, childName, pendingMoves)
-            : null;
+        return new TreeImpl(root, this, childName, pendingMoves);
     }
 
     private PropertyState internalGetProperty(String propertyName) {
