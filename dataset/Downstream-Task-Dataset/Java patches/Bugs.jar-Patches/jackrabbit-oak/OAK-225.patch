diff --git a/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java b/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java
index 48142ab..dd0580a 100644
--- a/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java
+++ b/oak-core/src/main/java/org/apache/jackrabbit/oak/kernel/TypeCodes.java
@@ -34,7 +34,9 @@ public class TypeCodes {
 
     static {
         for (int type = PropertyType.UNDEFINED; type <= PropertyType.DECIMAL; type++) {
-            String code = PropertyType.nameFromValue(type).substring(0, 3).toLowerCase(Locale.ENGLISH);
+            String code = type == PropertyType.BINARY
+                    ? ":blobId"  // See class comment for MicroKernel and OAK-428
+                    : PropertyType.nameFromValue(type).substring(0, 3).toLowerCase(Locale.ENGLISH);
             TYPE2CODE.put(type, code);
             CODE2TYPE.put(code, type);
         }
@@ -61,7 +63,10 @@ public class TypeCodes {
      * @return  the location where the prefix ends or -1 if no prefix is present
      */
     public static int split(String jsonString) {
-        if (jsonString.length() >= 4 && jsonString.charAt(3) == ':') {
+        if (jsonString.startsWith(":blobId:")) {  // See OAK-428
+            return 7;
+        }
+        else if (jsonString.length() >= 4 && jsonString.charAt(3) == ':') {
             return 3;
         }
         else {
@@ -82,8 +87,8 @@ public class TypeCodes {
         else {
             Integer type = CODE2TYPE.get(jsonString.substring(0, split));
             return type == null
-                ? PropertyType.UNDEFINED
-                : type;
+                    ? PropertyType.UNDEFINED
+                    : type;
         }
     }
 
