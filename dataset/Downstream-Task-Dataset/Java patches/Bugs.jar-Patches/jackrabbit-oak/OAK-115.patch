diff --git a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexDefinition.java b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexDefinition.java
index 9dd4b00..a89b6ae 100644
--- a/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexDefinition.java
+++ b/oak-lucene/src/main/java/org/apache/jackrabbit/oak/plugins/index/lucene/IndexDefinition.java
@@ -285,7 +285,8 @@ class IndexDefinition {
     private Map<String, PropertyDefinition> collectPropertyDefns(NodeBuilder defn) {
         Map<String, PropertyDefinition> propDefns = newHashMap();
         NodeBuilder propNode = defn.getChildNode(LuceneIndexConstants.PROP_NODE);
-        for (String propName : Iterables.concat(includes, orderedProps)) {
+        //Include all immediate child nodes to 'properties' node by default
+        for (String propName : Iterables.concat(includes, orderedProps, propNode.getChildNodeNames())) {
             NodeBuilder propDefnNode;
             if (relativeProps.containsKey(propName)) {
                 propDefnNode = relativeProps.get(propName).getPropDefnNode(propNode);
@@ -293,7 +294,7 @@ class IndexDefinition {
                 propDefnNode = propNode.getChildNode(propName);
             }
 
-            if (propDefnNode.exists()) {
+            if (propDefnNode.exists() && !propDefns.containsKey(propName)) {
                 propDefns.put(propName, new PropertyDefinition(this, propName, propDefnNode));
             }
         }
