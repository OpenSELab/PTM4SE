diff --git a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java
index b81ab67..c61ad8d 100644
--- a/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java
+++ b/flink-java/src/main/java/org/apache/flink/api/java/typeutils/runtime/PojoSerializer.java
@@ -293,7 +293,14 @@ public final class PojoSerializer<T> extends TypeSerializer<T> {
 				for (int i = 0; i < numFields; i++) {
 					Object value = fields[i].get(from);
 					if (value != null) {
-						Object copy = fieldSerializers[i].copy(fields[i].get(from), fields[i].get(reuse));
+						Object reuseValue = fields[i].get(reuse);
+						Object copy;
+						if(reuseValue != null) {
+							copy = fieldSerializers[i].copy(value, reuseValue);
+						}
+						else {
+							copy = fieldSerializers[i].copy(value);
+						}
 						fields[i].set(reuse, copy);
 					}
 					else {
@@ -484,7 +491,15 @@ public final class PojoSerializer<T> extends TypeSerializer<T> {
 					if (isNull) {
 						fields[i].set(reuse, null);
 					} else {
-						Object field = fieldSerializers[i].deserialize(fields[i].get(reuse), source);
+						Object field;
+
+						Object reuseField = fields[i].get(reuse);
+						if(reuseField != null) {
+							field = fieldSerializers[i].deserialize(reuseField, source);
+						}
+						else {
+							field = fieldSerializers[i].deserialize(source);
+						}
 
 						fields[i].set(reuse, field);
 					}
