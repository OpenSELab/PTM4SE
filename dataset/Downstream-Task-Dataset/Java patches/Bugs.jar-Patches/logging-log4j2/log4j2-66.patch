diff --git a/log4j-nosql/src/main/java/org/apache/logging/log4j/nosql/appender/NoSQLDatabaseManager.java b/log4j-nosql/src/main/java/org/apache/logging/log4j/nosql/appender/NoSQLDatabaseManager.java
index 6f2ea26..d3c5b37 100644
--- a/log4j-nosql/src/main/java/org/apache/logging/log4j/nosql/appender/NoSQLDatabaseManager.java
+++ b/log4j-nosql/src/main/java/org/apache/logging/log4j/nosql/appender/NoSQLDatabaseManager.java
@@ -51,6 +51,7 @@ public final class NoSQLDatabaseManager<W> extends AbstractDatabaseManager {
 
     @Override
     protected void shutdownInternal() {
+        // NoSQL doesn't use transactions, so all we need to do here is simply close the client
         Closer.closeSilent(this.connection);
     }
 
@@ -155,13 +156,10 @@ public final class NoSQLDatabaseManager<W> extends AbstractDatabaseManager {
 
     @Override
     protected void commitAndClose() {
-        try {
-            if (this.connection != null && !this.connection.isClosed()) {
-                this.connection.close();
-            }
-        } catch (Exception e) {
-            throw new AppenderLoggingException("Failed to commit and close NoSQL connection in manager.", e);
-        }
+        // all NoSQL drivers auto-commit (since NoSQL doesn't generally use the concept of transactions).
+        // also, all our NoSQL drivers use internal connection pooling and provide clients, not connections.
+        // thus, we should not be closing the client until shutdown as NoSQL is very different from SQL.
+        // see LOG4J2-591 and LOG4J2-676
     }
 
     private NoSQLObject<W>[] convertStackTrace(final StackTraceElement[] stackTrace) {
