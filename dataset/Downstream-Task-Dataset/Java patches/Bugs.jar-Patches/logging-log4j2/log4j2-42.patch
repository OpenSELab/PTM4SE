diff --git a/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java b/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java
index 6add448..50b0820 100644
--- a/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java
+++ b/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java
@@ -23,24 +23,33 @@ import javax.servlet.FilterRegistration;
 import javax.servlet.ServletContainerInitializer;
 import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
+import javax.servlet.UnavailableException;
 
 /**
  * In a Servlet 3.0 or newer environment, this initializer is responsible for starting up Log4j logging before anything
- * else happens in application initialization.
+ * else happens in application initialization. For consistency across all containers, if the effective Servlet major
+ * version of the application is less than 3.0, this initializer does nothing.
  */
 public class Log4jServletContainerInitializer implements ServletContainerInitializer {
 
     @Override
     public void onStartup(final Set<Class<?>> classes, final ServletContext servletContext) throws ServletException {
-        servletContext.log("Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.");
+        if (servletContext.getMajorVersion() > 2) {
+            servletContext.log("Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.");
 
-        final Log4jWebInitializer initializer = Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);
-        initializer.initialize();
-        initializer.setLoggerContext(); // the application is just now starting to start up
+            final Log4jWebInitializer initializer = Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);
+            initializer.initialize();
+            initializer.setLoggerContext(); // the application is just now starting to start up
 
-        servletContext.addListener(new Log4jServletContextListener());
+            servletContext.addListener(new Log4jServletContextListener());
 
-        final FilterRegistration.Dynamic filter = servletContext.addFilter("log4jServletFilter", new Log4jServletFilter());
-        filter.addMappingForUrlPatterns(EnumSet.allOf(DispatcherType.class), false, "/*");
+            final FilterRegistration.Dynamic filter =
+                    servletContext.addFilter("log4jServletFilter", new Log4jServletFilter());
+            if (filter == null) {
+                throw new UnavailableException("In a Servlet 3.0+ application, you must not define a " +
+                        "log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.");
+            }
+            filter.addMappingForUrlPatterns(EnumSet.allOf(DispatcherType.class), false, "/*");
+        }
     }
 }
