diff --git a/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java b/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java
index 50b0820..7d3ce05 100644
--- a/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java
+++ b/log4j-core/src/main/java/org/apache/logging/log4j/core/web/Log4jServletContainerInitializer.java
@@ -25,6 +25,9 @@ import javax.servlet.ServletContext;
 import javax.servlet.ServletException;
 import javax.servlet.UnavailableException;
 
+import org.apache.logging.log4j.Logger;
+import org.apache.logging.log4j.status.StatusLogger;
+
 /**
  * In a Servlet 3.0 or newer environment, this initializer is responsible for starting up Log4j logging before anything
  * else happens in application initialization. For consistency across all containers, if the effective Servlet major
@@ -34,21 +37,23 @@ public class Log4jServletContainerInitializer implements ServletContainerInitial
 
     @Override
     public void onStartup(final Set<Class<?>> classes, final ServletContext servletContext) throws ServletException {
-        if (servletContext.getMajorVersion() > 2) {
+        if (servletContext.getMajorVersion() > 2 && servletContext.getEffectiveMajorVersion() > 2) {
             servletContext.log("Log4jServletContainerInitializer starting up Log4j in Servlet 3.0+ environment.");
 
+            final FilterRegistration.Dynamic filter =
+                    servletContext.addFilter("log4jServletFilter", new Log4jServletFilter());
+            if (filter == null) {
+                servletContext.log("WARNING: In a Servlet 3.0+ application, you should not define a " +
+                        "log4jServletFilter in web.xml. Log4j 2 normally does this for you automatically. Log4j 2 " +
+                        "web auto-initialization has been canceled.");
+                return;
+            }
+
             final Log4jWebInitializer initializer = Log4jWebInitializerImpl.getLog4jWebInitializer(servletContext);
             initializer.initialize();
             initializer.setLoggerContext(); // the application is just now starting to start up
 
             servletContext.addListener(new Log4jServletContextListener());
-
-            final FilterRegistration.Dynamic filter =
-                    servletContext.addFilter("log4jServletFilter", new Log4jServletFilter());
-            if (filter == null) {
-                throw new UnavailableException("In a Servlet 3.0+ application, you must not define a " +
-                        "log4jServletFilter in web.xml. Log4j 2 defines this for you automatically.");
-            }
             filter.addMappingForUrlPatterns(EnumSet.allOf(DispatcherType.class), false, "/*");
         }
     }
