diff --git a/camel-core/src/main/java/org/apache/camel/model/OnExceptionDefinition.java b/camel-core/src/main/java/org/apache/camel/model/OnExceptionDefinition.java
index 50a41a3..f8e42b9 100644
--- a/camel-core/src/main/java/org/apache/camel/model/OnExceptionDefinition.java
+++ b/camel-core/src/main/java/org/apache/camel/model/OnExceptionDefinition.java
@@ -144,7 +144,7 @@ public class OnExceptionDefinition extends ProcessorDefinition<OnExceptionDefini
             return CamelContextHelper.mandatoryLookup(context, redeliveryPolicyRef, RedeliveryPolicy.class);
         } else if (redeliveryPolicy != null) {
             return redeliveryPolicy.createRedeliveryPolicy(context, parentPolicy);
-        } else if (!outputs.isEmpty() && parentPolicy.getMaximumRedeliveries() > 0) {
+        } else if (!outputs.isEmpty() && parentPolicy.getMaximumRedeliveries() != 0) {
             // if we have outputs, then do not inherit parent maximumRedeliveries
             // as you would have to explicit configure maximumRedeliveries on this onException to use it
             // this is the behavior Camel has always had
