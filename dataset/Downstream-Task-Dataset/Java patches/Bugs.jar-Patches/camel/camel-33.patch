diff --git a/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java
index b4e3289..9a01a55 100644
--- a/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java
+++ b/camel-core/src/main/java/org/apache/camel/processor/MarshalProcessor.java
@@ -55,9 +55,15 @@ public class MarshalProcessor extends ServiceSupport implements Processor, Trace
         Message out = exchange.getOut();
         out.copyFrom(in);
 
-        dataFormat.marshal(exchange, body, buffer);
-        byte[] data = buffer.toByteArray();
-        out.setBody(data);
+        try {
+            dataFormat.marshal(exchange, body, buffer);
+            byte[] data = buffer.toByteArray();
+            out.setBody(data);
+        } catch (Exception e) {
+            // remove OUT message, as an exception occurred
+            exchange.setOut(null);
+            throw e;
+        }
     }
 
     @Override
diff --git a/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java b/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java
index 414b088..b8c5e5f 100644
--- a/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java
+++ b/camel-core/src/main/java/org/apache/camel/processor/UnmarshalProcessor.java
@@ -27,6 +27,7 @@ import org.apache.camel.Traceable;
 import org.apache.camel.spi.DataFormat;
 import org.apache.camel.support.ServiceSupport;
 import org.apache.camel.util.ExchangeHelper;
+import org.apache.camel.util.IOHelper;
 import org.apache.camel.util.ObjectHelper;
 import org.apache.camel.util.ServiceHelper;
 
@@ -56,10 +57,12 @@ public class UnmarshalProcessor extends ServiceSupport implements Processor, Tra
 
             Object result = dataFormat.unmarshal(exchange, stream);
             out.setBody(result);
+        } catch (Exception e) {
+            // remove OUT message, as an exception occurred
+            exchange.setOut(null);
+            throw e;
         } finally {
-            if (stream != null) {
-                stream.close();
-            }
+            IOHelper.close(stream, "input stream");
         }
     }
 
