diff --git a/camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java b/camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java
index 1c19945..fb9c533 100644
--- a/camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java
+++ b/camel-core/src/main/java/org/apache/camel/component/bean/BeanInfo.java
@@ -311,22 +311,27 @@ public class BeanInfo {
             methods.addAll(extraMethods);
         }
 
-        // it may have duplicate methods already, even from declared or from interfaces + declared
         Set<Method> overrides = new HashSet<Method>();
-        for (Method source : methods) {
-            for (Method target : methods) {
-                // skip ourselves
-                if (ObjectHelper.isOverridingMethod(source, target, true)) {
-                    continue;
-                }
-                // skip duplicates which may be assign compatible (favor keep first added method when duplicate)
-                if (ObjectHelper.isOverridingMethod(source, target, false)) {
-                    overrides.add(target);
+
+        // do not remove duplicates form class from the Java itself as they have some "duplicates" we need
+        boolean javaClass = clazz.getName().startsWith("java.") || clazz.getName().startsWith("javax.");
+        if (!javaClass) {
+            // it may have duplicate methods already, even from declared or from interfaces + declared
+            for (Method source : methods) {
+                for (Method target : methods) {
+                    // skip ourselves
+                    if (ObjectHelper.isOverridingMethod(source, target, true)) {
+                        continue;
+                    }
+                    // skip duplicates which may be assign compatible (favor keep first added method when duplicate)
+                    if (ObjectHelper.isOverridingMethod(source, target, false)) {
+                        overrides.add(target);
+                    }
                 }
             }
+            methods.removeAll(overrides);
+            overrides.clear();
         }
-        methods.removeAll(overrides);
-        overrides.clear();
 
         // if we are a public class, then add non duplicate interface classes also
         if (Modifier.isPublic(clazz.getModifiers())) {
