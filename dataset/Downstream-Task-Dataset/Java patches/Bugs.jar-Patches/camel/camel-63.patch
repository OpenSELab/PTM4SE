diff --git a/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java b/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java
index 41f97ce..ef64c2d 100644
--- a/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java
+++ b/camel-core/src/main/java/org/apache/camel/model/ExpressionNode.java
@@ -143,5 +143,14 @@ public class ExpressionNode extends ProcessorDefinition<ExpressionNode> {
                 expression = clause.getExpressionType();
             }
         }
+
+        if (expression != null && expression.getExpression() == null) {
+            // use toString from predicate or expression so we have some information to show in the route model
+            if (expression.getPredicate() != null) {
+                expression.setExpression(expression.getPredicate().toString());
+            } else if (expression.getExpressionValue() != null) {
+                expression.setExpression(expression.getExpressionValue().toString());
+            }
+        }
     }
 }
diff --git a/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java b/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java
index b423afa..52b0d1c 100644
--- a/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java
+++ b/camel-core/src/main/java/org/apache/camel/model/language/ExpressionDefinition.java
@@ -243,20 +243,17 @@ public class ExpressionDefinition implements Expression, Predicate {
      * Returns some descriptive text to describe this node
      */
     public String getLabel() {
-        String language = getExpression();
-        if (ObjectHelper.isEmpty(language)) {
-            Predicate predicate = getPredicate();
-            if (predicate != null) {
-                return predicate.toString();
-            }
-            Expression expressionValue = getExpressionValue();
-            if (expressionValue != null) {
-                return expressionValue.toString();
-            }
-        } else {
-            return language;
+        Predicate predicate = getPredicate();
+        if (predicate != null) {
+            return predicate.toString();
         }
-        return "";
+        Expression expressionValue = getExpressionValue();
+        if (expressionValue != null) {
+            return expressionValue.toString();
+        }
+
+        String exp = getExpression();
+        return exp != null ? exp : "";
     }
 
     /**
