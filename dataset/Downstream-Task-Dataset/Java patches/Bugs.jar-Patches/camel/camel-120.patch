diff --git a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java
index 303feb1..3c5a3f1 100644
--- a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java
+++ b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilder.java
@@ -90,4 +90,5 @@ public interface ErrorHandlerBuilder extends ErrorHandlerFactory {
      * @return a clone of this {@link ErrorHandlerBuilder}
      */
     ErrorHandlerBuilder cloneBuilder();
+    
 }
diff --git a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java
index 0cf9d57..4d06b7f 100644
--- a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java
+++ b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderRef.java
@@ -50,6 +50,18 @@ public class ErrorHandlerBuilderRef extends ErrorHandlerBuilderSupport {
         }
         super.addErrorHandlers(routeContext, exception);
     }
+    
+    @Override
+    public boolean removeOnExceptionList(String id) {
+        for (RouteContext routeContext : handlers.keySet()) {
+            if (getRouteId(routeContext).equals(id)) {
+                handlers.remove(routeContext);
+                break;
+            }
+        }
+        return super.removeOnExceptionList(id);
+    }
+    
 
     public Processor createErrorHandler(RouteContext routeContext, Processor processor) throws Exception {
         ErrorHandlerBuilder handler = handlers.get(routeContext);
diff --git a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java
index 747a6dd..365ebc0 100644
--- a/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java
+++ b/camel-core/src/main/java/org/apache/camel/builder/ErrorHandlerBuilderSupport.java
@@ -21,6 +21,7 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
+import org.apache.camel.CamelContext;
 import org.apache.camel.model.OnExceptionDefinition;
 import org.apache.camel.processor.ErrorHandler;
 import org.apache.camel.processor.ErrorHandlerSupport;
@@ -94,4 +95,28 @@ public abstract class ErrorHandlerBuilderSupport implements ErrorHandlerBuilder
         ObjectHelper.notNull(exceptionPolicyStrategy, "ExceptionPolicyStrategy");
         this.exceptionPolicyStrategy = exceptionPolicyStrategy;
     }
+    
+    /**
+     * Remove the OnExceptionList by look up the route id from the ErrorHandlerBuilder internal map
+     * @param id the route id
+     * @return true if the route context is found and removed
+     */
+    public boolean removeOnExceptionList(String id) {
+        for (RouteContext routeContext : onExceptions.keySet()) {
+            if (getRouteId(routeContext).equals(id)) {
+                onExceptions.remove(routeContext);
+                return true;
+            }
+        }
+        return false;
+    }
+    
+    protected String getRouteId(RouteContext routeContext) {
+        CamelContext context = routeContext.getCamelContext();
+        if (context != null) {
+            return routeContext.getRoute().idOrCreate(context.getNodeIdFactory());
+        } else {
+            return routeContext.getRoute().getId();
+        }
+    }
 }
diff --git a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java
index deba649..bd4488c 100644
--- a/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java
+++ b/camel-core/src/main/java/org/apache/camel/impl/DefaultCamelContext.java
@@ -71,6 +71,7 @@ import org.apache.camel.SuspendableService;
 import org.apache.camel.TypeConverter;
 import org.apache.camel.VetoCamelContextStartException;
 import org.apache.camel.builder.ErrorHandlerBuilder;
+import org.apache.camel.builder.ErrorHandlerBuilderSupport;
 import org.apache.camel.component.properties.PropertiesComponent;
 import org.apache.camel.impl.converter.BaseTypeConverterRegistry;
 import org.apache.camel.impl.converter.DefaultTypeConverter;
@@ -147,7 +148,6 @@ import org.apache.camel.util.TimeUtils;
 import org.apache.camel.util.URISupport;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
-
 import static org.apache.camel.util.StringQuoteHelper.doubleQuote;
 
 /**
@@ -928,6 +928,11 @@ public class DefaultCamelContext extends ServiceSupport implements ModelCamelCon
     }
 
     public synchronized boolean removeRoute(String routeId) throws Exception {
+        // remove the route from ErrorHandlerBuilder if possible
+        if (getErrorHandlerBuilder() instanceof ErrorHandlerBuilderSupport) {
+            ErrorHandlerBuilderSupport builder = (ErrorHandlerBuilderSupport)getErrorHandlerBuilder();
+            builder.removeOnExceptionList(routeId);
+        }
         RouteService routeService = routeServices.get(routeId);
         if (routeService != null) {
             if (getRouteStatus(routeId).isStopped()) {
