diff --git a/camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java b/camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java
index 5b2d872..e33d21d 100644
--- a/camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java
+++ b/camel-core/src/main/java/org/apache/camel/component/seda/SedaEndpoint.java
@@ -85,7 +85,7 @@ public class SedaEndpoint extends DefaultEndpoint implements BrowsableEndpoint,
     }
 
     public Producer createProducer() throws Exception {
-        return new SedaProducer(this, getQueue(), getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull());
+        return new SedaProducer(this, getWaitForTaskToComplete(), getTimeout(), isBlockWhenFull());
     }
 
     public Consumer createConsumer(Processor processor) throws Exception {
diff --git a/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java b/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java
index d39e39f..3614460 100644
--- a/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java
+++ b/camel-core/src/main/java/org/apache/camel/component/seda/SedaProducer.java
@@ -32,6 +32,10 @@ import org.apache.camel.util.ExchangeHelper;
  * @version 
  */
 public class SedaProducer extends DefaultAsyncProducer {
+    /**
+     * @deprecated Better make use of the {@link SedaEndpoint#getQueue()} API which delivers the accurate reference to the queue currently being used.
+     */
+    @Deprecated
     protected final BlockingQueue<Exchange> queue;
     private final SedaEndpoint endpoint;
     private final WaitForTaskToComplete waitForTaskToComplete;
@@ -39,17 +43,24 @@ public class SedaProducer extends DefaultAsyncProducer {
     private final boolean blockWhenFull;
 
     /**
-     * @deprecated use the other constructor
+     * @deprecated Use {@link #SedaProducer(SedaEndpoint, WaitForTaskToComplete, long, boolean) the other constructor}.
      */
     @Deprecated
     public SedaProducer(SedaEndpoint endpoint, BlockingQueue<Exchange> queue, WaitForTaskToComplete waitForTaskToComplete, long timeout) {
-        this(endpoint, queue, waitForTaskToComplete, timeout, false);
+        this(endpoint, waitForTaskToComplete, timeout, false);
     }
-    
-    public SedaProducer(SedaEndpoint endpoint, BlockingQueue<Exchange> queue, WaitForTaskToComplete waitForTaskToComplete,
-                        long timeout, boolean blockWhenFull) {
+
+    /**
+     * @deprecated Use {@link #SedaProducer(SedaEndpoint, WaitForTaskToComplete, long, boolean) the other constructor}.
+     */
+    @Deprecated
+    public SedaProducer(SedaEndpoint endpoint, BlockingQueue<Exchange> queue, WaitForTaskToComplete waitForTaskToComplete, long timeout, boolean blockWhenFull) {
+        this(endpoint, waitForTaskToComplete, timeout, blockWhenFull);
+    }
+
+    public SedaProducer(SedaEndpoint endpoint, WaitForTaskToComplete waitForTaskToComplete, long timeout, boolean blockWhenFull) {
         super(endpoint);
-        this.queue = queue;
+        this.queue = endpoint.getQueue();
         this.endpoint = endpoint;
         this.waitForTaskToComplete = waitForTaskToComplete;
         this.timeout = timeout;
@@ -125,7 +136,7 @@ public class SedaProducer extends DefaultAsyncProducer {
                 if (!done) {
                     exchange.setException(new ExchangeTimedOutException(exchange, timeout));
                     // remove timed out Exchange from queue
-                    queue.remove(copy);
+                    endpoint.getQueue().remove(copy);
                     // count down to indicate timeout
                     latch.countDown();
                 }
@@ -183,6 +194,7 @@ public class SedaProducer extends DefaultAsyncProducer {
      * @param exchange the exchange to add to the queue
      */
     protected void addToQueue(Exchange exchange) {
+        BlockingQueue<Exchange> queue = endpoint.getQueue();
         if (blockWhenFull) {
             try {
                 queue.put(exchange);
