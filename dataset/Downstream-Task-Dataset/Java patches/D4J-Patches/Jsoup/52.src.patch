diff --git a/src/main/java/org/jsoup/helper/DataUtil.java b/src/main/java/org/jsoup/helper/DataUtil.java
index 6567e36..99c7976 100644
--- a/src/main/java/org/jsoup/helper/DataUtil.java
+++ b/src/main/java/org/jsoup/helper/DataUtil.java
@@ -109,7 +109,13 @@ public final class DataUtil {
                     foundCharset = getCharsetFromContentType(meta.attr("content"));
                 }
                 if (foundCharset == null && meta.hasAttr("charset")) {
+                    try {
+                        if (Charset.isSupported(meta.attr("charset"))) {
                     foundCharset = meta.attr("charset");
+                        }
+                    } catch (IllegalCharsetNameException e) {
+                        foundCharset = null;
+                    }
                 }
             }
             // look for <?xml encoding='ISO-8859-1'?>
diff --git a/src/main/java/org/jsoup/nodes/XmlDeclaration.java b/src/main/java/org/jsoup/nodes/XmlDeclaration.java
index 619cd14..24a9f16 100644
--- a/src/main/java/org/jsoup/nodes/XmlDeclaration.java
+++ b/src/main/java/org/jsoup/nodes/XmlDeclaration.java
@@ -43,17 +43,29 @@ public class XmlDeclaration extends Node {
      @return XML declaration
      */
     public String getWholeDeclaration() {
-        return attributes.html().trim(); // attr html starts with a " "
+        final String decl = this.name;
+        if(decl.equals("xml") && attributes.size() > 1 ) {
+            StringBuilder sb = new StringBuilder(decl);
+            final String version = attributes.get("version");
+            if( version != null ) {
+                sb.append(" version=\"").append(version).append("\"");
+            }
+            final String encoding = attributes.get("encoding");
+            if( encoding != null ) {
+                sb.append(" encoding=\"").append(encoding).append("\"");
+            }
+            return sb.toString();
+        }
+        else {
+            return this.name;
+        }
     }
 
 	void outerHtmlHead(Appendable accum, int depth, Document.OutputSettings out) throws IOException {
         accum
             .append("<")
             .append(isProcessingInstruction ? "!" : "?")
-            .append(name);
-        attributes.html(accum, out);
-        accum
-            .append(isProcessingInstruction ? "!" : "?")
+                .append(getWholeDeclaration())
             .append(">");
     }
 
diff --git a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
index 3ccd7df..99807fc 100644
--- a/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
+++ b/src/main/java/org/jsoup/parser/XmlTreeBuilder.java
@@ -1,6 +1,5 @@
 package org.jsoup.parser;
 
-import org.jsoup.Jsoup;
 import org.jsoup.helper.Validate;
 import org.jsoup.nodes.*;
 
@@ -74,10 +73,8 @@ public class XmlTreeBuilder extends TreeBuilder {
             // so we do a bit of a hack and parse the data as an element to pull the attributes out
             String data = comment.getData();
             if (data.length() > 1 && (data.startsWith("!") || data.startsWith("?"))) {
-                Document doc = Jsoup.parse("<" + data.substring(1, data.length() -1) + ">", baseUri, Parser.xmlParser());
-                Element el = doc.child(0);
-                insert = new XmlDeclaration(el.tagName(), comment.baseUri(), data.startsWith("!"));
-                insert.attributes().addAll(el.attributes());
+                String declaration = data.substring(1);
+                insert = new XmlDeclaration(declaration, comment.baseUri(), data.startsWith("!"));
             }
         }
         insertNode(insert);
