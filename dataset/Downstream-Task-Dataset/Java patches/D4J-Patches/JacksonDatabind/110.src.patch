diff --git a/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java b/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java
index f16d95e42..3228bacda 100644
--- a/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java
+++ b/src/main/java/com/fasterxml/jackson/databind/deser/impl/JavaUtilCollectionsDeserializers.java
@@ -44,7 +44,6 @@ public abstract class JavaUtilCollectionsDeserializers
     /* 02-Mar-2019, tatu: for [databind#2265], need to consider possible alternate type...
      *    which we essentially coerce into the other one
      */
-    private final static Class<?> CLASS_UNMODIFIABLE_LIST_ALIAS;
     private final static Class<?> CLASS_UNMODIFIABLE_MAP;
 
     static {
@@ -56,7 +55,6 @@ public abstract class JavaUtilCollectionsDeserializers
         CLASS_SINGLETON_LIST = list.getClass();
         CLASS_UNMODIFIABLE_LIST = Collections.unmodifiableList(list).getClass();
         // for [databind#2265]
-        CLASS_UNMODIFIABLE_LIST_ALIAS = Collections.unmodifiableList(new LinkedList<Object>()).getClass();
         
         Map<?,?> map = Collections.singletonMap("a", "b");
         CLASS_SINGLETON_MAP = map.getClass();
@@ -77,7 +75,7 @@ public abstract class JavaUtilCollectionsDeserializers
         } else if (type.hasRawClass(CLASS_SINGLETON_SET)) {
             conv = converter(TYPE_SINGLETON_SET, type, Set.class);
         // [databind#2265]: we may have another impl type for unmodifiable Lists, check both
-        } else if (type.hasRawClass(CLASS_UNMODIFIABLE_LIST) || type.hasRawClass(CLASS_UNMODIFIABLE_LIST_ALIAS)) {
+        } else if (type.hasRawClass(CLASS_UNMODIFIABLE_LIST)) {
             conv = converter(TYPE_UNMODIFIABLE_LIST, type, List.class);
         } else if (type.hasRawClass(CLASS_UNMODIFIABLE_SET)) {
             conv = converter(TYPE_UNMODIFIABLE_SET, type, Set.class);
