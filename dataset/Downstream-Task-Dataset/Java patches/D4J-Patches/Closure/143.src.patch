diff --git a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java
index aa29e5f0..13cb6268 100644
--- a/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java
+++ b/src/com/google/javascript/jscomp/AbstractCommandLineRunner.java
@@ -868,8 +868,7 @@ abstract class AbstractCommandLineRunner<A extends Compiler,
           } else if (defValue.length() > 1
               && ((defValue.charAt(0) == '\'' &&
                   defValue.charAt(defValue.length() - 1) == '\'')
-                  || (defValue.charAt(0) == '\"' &&
-                      defValue.charAt(defValue.length() - 1) == '\"'))) {
+            )) {
             // If the value starts and ends with a single quote,
             // we assume that it's a string.
             String maybeStringVal =
diff --git a/src/com/google/javascript/jscomp/RemoveConstantExpressions.java b/src/com/google/javascript/jscomp/RemoveConstantExpressions.java
index 17d55c9f..fee9c287 100644
--- a/src/com/google/javascript/jscomp/RemoveConstantExpressions.java
+++ b/src/com/google/javascript/jscomp/RemoveConstantExpressions.java
@@ -88,8 +88,7 @@ final class RemoveConstantExpressions implements CompilerPass {
 
       Node exprBody = node.getFirstChild();
       if (!NodeUtil.nodeTypeMayHaveSideEffects(exprBody)
-          || exprBody.getType() == Token.NEW
-          || exprBody.getType() == Token.CALL) {
+      ) {
         changeProxy.replaceWith(parent, node, getSideEffectNodes(exprBody));
       }
     }
