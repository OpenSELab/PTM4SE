,closed_at,created_at,issue_comments,issue_desc,issue_id
0,2020-08-24 01:52:29,2020-08-23 13:06:15,Fix pre-commit cache key in GitHub Actions,Fix pre-commit cache key to include full Python version as per https : //github.com/pre-commit/pre-commit/issues/1575 # issuecomment-678792700 and https : //pre-commit.com/ # github-actions-example .,3740.0
1,2020-07-31 01:48:46,2020-07-31 01:41:47,cleaner message when CLI ca n't load app,"When loading the app fails for the ` -- help ` command , only the error message is shown , then the help text . The full traceback is still shown for other exceptions . Also show the message when loading fails while getting a command , instead of only `` command not found '' . The error message goes to ` stderr ` to match other error behavior , and is in red with an extra newline to make it more obvious next to the help text . Also fixes an issue with the ` test_apps ` fixture that caused an imported app to still be importable after the test was over and the path was reset . Now the module cache is reset as well . This was causing an issue with the new tests , because previous tests had imported ` test_apps/helloworld/wsgi ` , one of the default imports that is tried if ` FLASK_APP ` is n't set , which caused the test to import an app successfully even though it should have failed and shown an error . This also revealed an issue with an existing test relying on the cached behavior . fixes # 2741",3711.0
2,2020-08-01 14:48:58,2020-07-30 19:11:22,Common API Between Flask + Blueprint,Resolves # 3215,3709.0
3,2020-07-29 08:32:41,2020-07-29 08:29:53,Bump pytest from 5.4.3 to 6.0.0,"Bumps [ pytest ] ( https : //github.com/pytest-dev/pytest ) from 5.4.3 to 6.0.0 . < details > < summary > Release notes < /summary > < p > < em > Sourced from < a href= '' https : //github.com/pytest-dev/pytest/releases '' > pytest 's releases < /a > . < /em > < /p > < blockquote > < h2 > 6.0.0 < /h2 > < h1 > pytest 6.0.0 ( 2020-07-28 ) < /h1 > < p > ( < strong > Please see the full set of changes for this release also in the 6.0.0rc1 notes below < /strong > ) < /p > < h2 > Breaking Changes < /h2 > < ul > < li > < p > < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/5584 '' > # 5584 < /a > : < strong > PytestDeprecationWarning are now errors by default. < /strong > < /p > < p > Following our plan to remove deprecated features with as little disruption as possible , all warnings of type < code > PytestDeprecationWarning < /code > now generate errors instead of warning messages. < /p > < p > < strong > The affected features will be effectively removed in pytest 6.1 < /strong > , so please consult the < a href= '' https : //docs.pytest.org/en/latest/deprecations.html '' > Deprecations and Removals < /a > section in the docs for directions on how to update existing code. < /p > < p > In the pytest < code > 6.0.X < /code > series , it is possible to change the errors back into warnings as a stopgap measure by adding this to your < code > pytest.ini < /code > file : < /p > < pre lang= '' { .sourceCode '' data-meta= '' .ini } '' > < code > [ pytest ] filterwarnings = ignore : :pytest.PytestDeprecationWarning < /code > < /pre > < p > But this will stop working when pytest < code > 6.1 < /code > is released. < /p > < p > < strong > If you have concerns < /strong > about the removal of a specific feature , please add a comment to < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/5584 '' > # 5584 < /a > . < /p > < /li > < li > < p > < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7472 '' > # 7472 < /a > : The < code > exec_ ( ) < /code > and < code > is_true ( ) < /code > methods of < code > _pytest._code.Frame < /code > have been removed. < /p > < /li > < /ul > < h2 > Features < /h2 > < ul > < li > < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7464 '' > # 7464 < /a > : Added support for NO_COLOR and FORCE_COLOR environment variables to control colored output. < /li > < /ul > < h2 > Improvements < /h2 > < ul > < li > < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7467 '' > # 7467 < /a > : < code > -- log-file < /code > CLI option and < code > log_file < /code > ini marker now create subdirectories if needed. < /li > < li > < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7489 '' > # 7489 < /a > : The pytest.raises function has a clearer error message when < code > match < /code > equals the obtained string but is not a regex match . In this case it is suggested to escape the regex. < /li > < /ul > < h2 > Bug Fixes < /h2 > < ul > < li > < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7392 '' > # 7392 < /a > : Fix the reported location of tests skipped with < code > @ pytest.mark.skip < /code > when < code > -- runxfail < /code > is used. < /li > < /ul > < /blockquote > < /details > < details > < summary > Changelog < /summary > < p > < em > Sourced from < a href= '' https : //github.com/pytest-dev/pytest/blob/master/CHANGELOG.rst '' > pytest 's changelog < /a > . < /em > < /p > < /details > < details > < summary > Commits < /summary > < ul > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/41a453959441d9b03cba3e47730efca27fa2f252 '' > < code > 41a4539 < /code > < /a > Add link to 6.0.0rc1 changelog < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/45ced1dc056d586fe3714823fa033cab27055c9f '' > < code > 45ced1d < /code > < /a > Update doc/en/announce/release-6.0.0.rst < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/1e4b8d447cfaaf4ee7c4636d2a03cf484d06f1cd '' > < code > 1e4b8d4 < /code > < /a > Prepare release version 6.0.0 < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/38029828d1d6bdc15b63a873142b1e91265e1a1c '' > < code > 3802982 < /code > < /a > Support generating major releases using issue comments ( < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7548 '' > # 7548 < /a > ) < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/c2c0b7a5426ed74ba0df1bbc4997ffe45e302ccf '' > < code > c2c0b7a < /code > < /a > Merge pull request < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7545 '' > # 7545 < /a > from asottile/pylib_in_docs < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/9818899df4eacb65a4ec1397a93b5ebcf43e825c '' > < code > 9818899 < /code > < /a > remove usage of pylib in docs < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/3a060b77e81ebf990159e59cc8f8de26ad998e12 '' > < code > 3a060b7 < /code > < /a > Revert change to traceback repr ( < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7535 '' > # 7535 < /a > ) < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/7ec6401ffabf79d52938ece5b8ff566a8b9c260e '' > < code > 7ec6401 < /code > < /a > Change pytest deprecation warnings into errors for 6.0 release ( < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7362 '' > # 7362 < /a > ) < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/a9799f0b35fe8fcc88ebd19b007cd2c6ac6b2a4f '' > < code > a9799f0 < /code > < /a > Merge pull request < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7531 '' > # 7531 < /a > from bluetech/changelog-mypy-version < /li > < li > < a href= '' https : //github.com/pytest-dev/pytest/commit/102360b49051e7d2407003445157b0115ae18234 '' > < code > 102360b < /code > < /a > Merge pull request < a href= '' https : //github-redirect.dependabot.com/pytest-dev/pytest/issues/7519 '' > # 7519 < /a > from hroncok/pytest_warning_captured_deprecated < /li > < li > Additional commits viewable in < a href= '' https : //github.com/pytest-dev/pytest/compare/5.4.3 ... 6.0.0 '' > compare view < /a > < /li > < /ul > < /details > < br / > [ ! [ Dependabot compatibility score ] ( https : //api.dependabot.com/badges/compatibility_score ? dependency-name=pytest & package-manager=pip & previous-version=5.4.3 & new-version=6.0.0 ) ] ( https : //dependabot.com/compatibility-score/ ? dependency-name=pytest & package-manager=pip & previous-version=5.4.3 & new-version=6.0.0 ) Dependabot will resolve any conflicts with this PR as long as you do n't alter it yourself . You can also trigger a rebase manually by commenting ` @ dependabot rebase ` . [ // ] : # ( dependabot-automerge-start ) If all status checks pass Dependabot will automatically merge this pull request . [ // ] : # ( dependabot-automerge-end ) -- - < details > < summary > Dependabot commands and options < /summary > < br / > You can trigger Dependabot actions by commenting on this PR : - ` @ dependabot rebase ` will rebase this PR - ` @ dependabot recreate ` will recreate this PR , overwriting any edits that have been made to it - ` @ dependabot merge ` will merge this PR after your CI passes on it - ` @ dependabot squash and merge ` will squash and merge this PR after your CI passes on it - ` @ dependabot cancel merge ` will cancel a previously requested merge and block automerging - ` @ dependabot reopen ` will reopen this PR if it is closed - ` @ dependabot close ` will close this PR and stop Dependabot recreating it . You can achieve the same result by closing it manually - ` @ dependabot ignore this major version ` will close this PR and stop Dependabot creating any more for this major version ( unless you reopen the PR or upgrade to it yourself ) - ` @ dependabot ignore this minor version ` will close this PR and stop Dependabot creating any more for this minor version ( unless you reopen the PR or upgrade to it yourself ) - ` @ dependabot ignore this dependency ` will close this PR and stop Dependabot creating any more for this dependency ( unless you reopen the PR or upgrade to it yourself ) - ` @ dependabot use these labels ` will set the current labels as the default for future PRs for this repo and language - ` @ dependabot use these reviewers ` will set the current reviewers as the default for future PRs for this repo and language - ` @ dependabot use these assignees ` will set the current assignees as the default for future PRs for this repo and language - ` @ dependabot use this milestone ` will set the current milestone as the default for future PRs for this repo and language - ` @ dependabot badge me ` will comment on this PR with code to add a `` Dependabot enabled '' badge to your readme Additionally , you can set the following in your Dependabot [ dashboard ] ( https : //app.dependabot.com ) : - Update frequency ( including time of day and day of week ) - Pull request limits ( per update run and/or open at any time ) - Automerge options ( never/patch/minor , and dev/runtime dependencies ) - Out-of-range updates ( receive only lockfile updates , if desired ) - Security updates ( receive only security updates , if desired ) < /details >",3705.0
4,2020-07-29 02:44:24,2020-07-26 13:29:56,remove unnecessary docstrings from tests,Remove docstrings with tests which contain no information except for what is already in the name of the test .,3699.0
5,2020-07-23 23:52:53,2020-07-23 23:51:02,remove lowest version test until next release,"The next major release will depend on the next major releases of all the other libraries , which is equivalent to devel right now . Remove lowest , to be added back after the release .",3694.0
6,2020-07-21 04:16:20,2020-07-21 04:13:53,Update Discord invite links,Replace old invite links with the newly created unique URL .,3691.0
7,2020-07-23 23:57:20,2020-07-11 19:25:38,make_response uses headers.update,fixes # 3628 Changed ` make_response ` to use ` headers.update ` instead of ` headers.extend ` .,3684.0
8,2020-07-08 13:56:12,2020-07-08 13:54:01,Some small doc fixes,Small text adjustments .,3680.0
9,2020-07-05 00:28:29,2020-07-03 10:26:59,Added very small clarification to quickstart.rst,"Added little bit clarification to quickstart.srt so that it 'd be easy to understand for persons who do n't have English as native language . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3674.0
10,2020-07-02 21:38:19,2020-07-02 21:01:28,API docs - changed flask.request description,"- the link should point to the flask 's Request - longer description is unnecessary , as it 's all explained above in flask.Request A bit unsure on ` : class : ` correct usage here .",3673.0
11,2020-07-28 21:17:38,2020-06-30 17:18:23,Error Docs Revision/Consolidation,"This patch is a revision/addition to PR # 3594 which addresses issue # 3573 . I fixed up grammar/spelling issues and organized the information for readability . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3669.0
12,2020-06-24 16:56:42,2020-06-21 08:35:41,Removed misleading DEBUG variable from examples,"Describe what this patch does to fix the issue . The configuragion documentation states that `` While it is possible to set : data : ` ENV ` and : data : ` DEBUG ` in your config or code , this is strongly discouraged. ` So , I believe using the ` DEBUG ` setting in the examples is misleading , as people are led to believe that that is needed to activate the debug mode . Indeed , basically every tutorial on Flask that you find around has the ` DEBUG ` variable in the configuration . I propose we get rid of all of them .",3662.0
13,2020-06-18 14:23:50,2020-06-18 03:01:07,[ docs ] streaming contents : use app.response_class,Examples should use app.response_class to encourage code that does n't need to be changed should the response class be customized later on .,3659.0
14,2020-06-06 04:48:37,2020-06-06 03:42:42,update code-block typo,Describe what this patch does to fix the issue : Fixes a type that was showing the rst for the code block instead of the actual code as a code block,3642.0
15,2020-06-07 23:47:13,2020-05-31 21:01:01,security.rst : Add section on copy/paste security,"Closes https : //github.com/pallets/flask/issues/3612 Adds a section on copy and pasting security . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3633.0
16,2020-05-23 21:12:23,2020-05-23 21:07:13,use GitHub Actions for CI,* * add function REGEXP for sqlite3 which can support regex search . * * When using such sql and this PR can fix the error . References : https : //www.sqlite.org/lang_expr.html # regexp https : //stackoverflow.com/questions/5365451/problem-with-regexp-python-and-sqlite,3621.0
17,2020-05-23 21:05:39,2020-05-23 21:03:59,use pip-compile to pin dev requirements,* * add function REGEXP for sqlite3 which can support regex search . * * When using such sql and this PR can fix the error . References : https : //www.sqlite.org/lang_expr.html # regexp https : //stackoverflow.com/questions/5365451/problem-with-regexp-python-and-sqlite,3620.0
18,2020-05-18 22:04:41,2020-05-18 21:59:52,add readthedocs config,# # # Expected Behavior Custom handler exception should execute and leave the console alone # # # Environment * Python version : 3.7.7 * Flask version : 1.1.2 * Werkzeug version : 1.0.1,3616.0
19,2020-07-24 16:23:21,2020-05-02 11:39:23,consolidate error handling docs,"Removing apierrors.rst and errorpages.rst from patterns and integrating the content into errorhandling.rst . Content has also been added and edited . With a info about blueprint error handling in errorhandling.rst as well a link to blueprints . NB : I 've never edited Sphinx , so feedback is very welcome Fixes # 3573",3594.0
20,2020-07-06 17:45:04,2020-04-20 19:20:59,Officially support using pathlib.Path for static_folder .,"* No longer causes ` AttributeError : 'PosixPath ' object has no attribute 'rstrip ' ` . * This was broken by e6178fe489b7828acc2bb8fd4b56a70b11ab6c6a which was released in 1.1.2 . * Add a regression test that now passes . See # 3557 . ( That issue was repurposed for migrating to pathlib internally , which this PR does not resolve . Merely officially supporting Paths for ` static_folder ` need not require that . ) < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3579.0
21,2020-04-16 17:52:06,2020-04-16 16:26:40,Adding error message to an assert,"Adding an error message to an assertion that I have experienced on two separate occasions , that all custom exceptions must inherit from the builtin Exception class . This PR will throw the new message to those who decide to create exceptions that are n't subclasses of Exception , e.g . BaseException",3574.0
22,2020-04-08 01:01:56,2020-04-08 00:59:20,use ast to parse FLASK_APP,"This had the nice side effect of parsing keyword arguments too . Refactored ` call_factory ` to use ` inspect.signature ` , even though it will go away in 2.1 because it was easier to figure out the args and kwargs checks . closes # 3553",3564.0
23,2020-04-07 22:57:46,2020-04-07 22:55:50,deprecate passing script_info to factory,closes # 3552,3563.0
24,2020-04-07 20:40:40,2020-04-07 19:46:11,Remove simplejson and deprecate encoding options,"* Remove simplejson . Remove UTF encoding guessing , which the built-in module handles now . Simplify ` htmlsafe_dumps ` to use ` str.translate ` instead of multiple ` str.replace ` . * Issue deprecation warning if ` encoding ` is passed to ` dumps ` , ` dump ` , ` loads ` , or ` load ` . This was deprecated in the built-in module back in 3.1 . The only valid encodings for JSON are UTF-8 ( with/without BOM ) , UTF-16 ( BE/LE ) , and UTF-32 ( BE/LE ) . ` json.loads ` accepts bytes and ` json.loads ` accepts binary files in these encodings without any special handling on our part . ` dumps ` can be encoded after calling , and ` dump ` can be passed a binary file wrapped with ` io.TextIOWrapper ` . * Rewrite docs for consistency . * Fix imports and references of ` Markup ` to be from MarkupSafe instead of Flask or Jinja . See the individual commits for easier diffs . closes # 3555",3562.0
25,2020-07-18 17:14:09,2020-04-07 10:13:38,Stop change CWD to .env/.flaskenv location,"By [ the current implementation ] ( https : //github.com/pallets/flask/blob/master/src/flask/cli.py # L630 ) , if ` .env ` or ` .flaskenv ` was found in the top-level directory , Flask will change the current work directory to the directory that contains the ` .env ` or ` .flaskenv ` file . When the user accidentally put a ` .env ` or ` .flaskenv ` in the top-level directory , then executing ` flask run ` in the current directory ( contains ` app.py ` ) will throw out NoAppException . See more in # 3561 .",3560.0
26,2020-04-04 19:13:36,2020-04-04 18:58:38,Drop Python 2,- Remove ` _compat ` module and other compat code . - Run [ pyupgrade ] ( https : //github.com/asottile/pyupgrade ) . - Use f-strings everywhere . - Remove deprecated code from 1.1.x . - Remove old docs .,3554.0
27,2020-04-03 14:33:21,2020-03-20 09:46:49,Clarify that static_folder must be a relative path,Also hint at ` root_path ` parameter rather than mentioning in plain text .,3541.0
28,2020-04-02 19:55:50,2020-03-05 00:00:37,Move HTML escaping example back to Variable Rules .,"Demonstration of markupsafe 's escape function was in the Minimal Application example , but the minimal example does not accept user input . closes # 3527",3529.0
29,2020-03-11 14:31:21,2020-02-25 14:40:56,Make code more easy to read,"Describe what this patch does to fix the issue . When I read the code , I feel something is hard to understand . So I change it .",3513.0
30,2020-02-10 21:15:25,2020-02-10 20:17:19,View returned none exception contains endpoint name,"Describe what this patch does to fix the issue . Adds request.endpoint to the error message . Link to any relevant issues or pull requests . fixes https : //github.com/pallets/flask/issues/3445 < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3498.0
31,2020-02-11 01:56:12,2020-02-10 00:13:54,CLI checks for cryptography library,"The check was already happening in Werkzeug , this updates the Flask CLI so it does n't require PyOpenSS .",3492.0
32,2020-02-11 02:13:25,2020-02-06 20:15:39,Incorrect grammar,"The original sentence has incorrect grammar . The change corrects the grammar error and expresses the intended meaning better < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3480.0
33,2020-02-11 02:12:50,2020-01-22 15:15:59,Add missing import for escape in doc,"` flask.escape ` used in [ Variable Rule ] ( https : //flask.palletsprojects.com/en/1.1.x/quickstart/ # variable-rules ) section but does n't import , this PR will add the missing import statement . Fix # 3471",3473.0
34,2020-02-11 01:29:10,2020-01-04 14:59:18,Remove comment about extensions being reviewed by the core team,This PR removes the comment in the foreword that tells Flask extensions are reviewed by Flask maintainers,3462.0
35,2020-02-12 15:09:32,2019-12-26 01:36:30,Fix a bug that the static endpoint will unexpectedly catch all,"Fixes # 3452 Strip the ending slash when passed to ` os.path.basename ` , so that the last part can be used for static url path correctly . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3456.0
36,2020-02-11 01:28:15,2019-12-19 20:45:46,fix docstring and remove redundant parentheses,"Hi ! This fixes a docstring and remove redundant parentheses , if you want me to submit as separated PR or you need me to do something else just let me know .",3453.0
37,2020-02-10 21:15:25,2019-12-14 23:05:13,Suggestion : Improve traceback for routes that return None,"< ! -- * * This issue tracker is a tool to address bugs in Flask itself . Please use the # pocoo IRC channel on freenode or Stack Overflow for general questions about using Flask or issues not related to Flask . * * -- > < ! -- If you 'd like to report a bug in Flask , fill out the template below . Provide any extra information that may be useful / related to your problem . Ideally , create an [ MCVE ] ( https : //stackoverflow.com/help/mcve ) , which helps us understand the problem and helps check that it is not caused by something in your code . -- > # # # Expected Behavior When a user creates a route that returns None flask raises > ` TypeError : The view function did not return a valid response . The function either returned None or ended without a return statement. ` The problem is that it does n't include the route that actually caused the error . It 's obviously not a huge deal , just a little tedious to go search through all of the routes . full traceback : # # # Environment * Python version : 3.6 * Flask version : 1.1.1 * Werkzeug version : 0.16",3445.0
38,2020-02-11 01:27:51,2019-11-22 16:13:37,Updated Issue Template,"* Mentioned Pallets Discord as a way of getting help * Updated it to use the new format , to fix the warning that shows right now",3437.0
39,2019-11-19 17:08:08,2019-11-19 07:41:51,send_file does n't allow StringIO,"fixes # 3358 Due to the way ` send_file ` works , passing a text mode file-like object , such as ` io.StringIO ` in Python 3 , would respond with 200 OK and an empty file , while printing a traceback to the terminal . Even in Python 2 , this only worked by accident , and would probably fail if given a ` StringIO.StringIO ` object with Unicode data that did not encode with the system encoding . It appears ` send_file ` was only intended to work with binary mode data . Now , if the object is an instance of ` io.TextIOBase ` it raises a ` ValueError ` . This does n't help for file-like objects that do n't use the ` io ` ABCs ( including Python 2 ) , but it should cover most cases .",3435.0
40,2019-11-19 02:22:39,2019-11-18 20:40:47,lazy load app on reload only,"fixes # 3431 fixes # 3430 If neither ` -- eager-loading ` or ` -- lazy-loader ` are passed to ` flask run ` , the default is now to eager load on the first run , then lazy load on reloads . This makes the command fail immediately if there is already an error , and the server remains up if errors are introduced later .",3434.0
41,2019-11-19 17:37:22,2019-11-15 04:41:16,Update old pocoo links everywhere,"Update documentation link and project page link for Flask , Werkzeug , and Jinja . pocoo.org -- > palletsprojects.com continue # 3426",3427.0
42,2019-10-29 01:26:16,2019-10-29 00:44:10,[ BUG FIX ] Test test_send_from_directory_bad_request fails in Python 3.8 .,"The patch changes the exception test based on the python version . If python version is greater than or equal to ` 3.8 ` , the exception raised is ` NotFound ` . Otherwise , it is a ` BadRequest ` . fixes # 3402",3410.0
43,2019-11-19 03:09:31,2019-10-26 06:23:17,Change docs to use f-strings,"I noticed old printf style string formatting in quite a few places in the documentation . When I cloned to fix the quick start guide , I noticed it was already changed to f-strings style formatting in quickstart so I changed the rest too .",3406.0
44,2019-11-19 03:05:02,2019-10-18 23:08:46,Declare support for Python 3.8,"Hello , Python 3.8 is released , so I believe that it would be nice to declare support for it . Python 3.8.0 release announcement : https : //discuss.python.org/t/python-3-8-0-is-now-available/2478 Best regards ! P.S . Unfortunately , Azure Pipelines do n't support Python 3.8 yet . https : //github.com/microsoft/azure-pipelines-image-generation/issues/1317",3401.0
45,2019-10-18 16:28:38,2019-10-15 13:57:08,Support loading configuration from text files,"TOML is a very popular format now , and is taking hold in the Python ecosystem via pyproject.toml ( among others ) . This allows toml config files via , app.config.from_file ( `` config.toml '' , toml.loads ) it also allows for any other file format whereby there is a loader that takes a string and returns a mapping . This is an alternative to # 3386 .",3398.0
46,2019-10-13 02:03:35,2019-10-13 01:56:35,explain escape at top of quickstart,"* introduce escape , and explain why it 's omitted in examples * clean up imports in examples closes # 3354 closes # 3378",3391.0
47,2019-10-06 20:26:01,2019-10-06 17:58:31,Add hyperlink of contributing-testsuite in CONTRIBUTING,Add hyperlink of ` contributing-testsuite ` in CONTRIBUTING.rst and remove the duplicate dot .,3382.0
48,2019-10-08 16:11:19,2019-10-05 22:15:53,fix typo in request context docs,"Fixed typos I saw in the Request Context documentation . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3381.0
49,2019-09-24 13:41:49,2019-09-24 13:41:30,update docs for new theme,Apply the update docs config and theme to the 0.12.x branch so it can be built on Read the Docs . related to # 3350,3376.0
50,2019-09-23 19:10:30,2019-09-23 19:02:05,reword extension python version item,"Based on https : //github.com/pallets/flask/pull/3374 # discussion_r327215251 . This is n't a hard requirement , so I 'm using `` should '' instead of `` must '' .",3375.0
51,2019-09-23 15:33:51,2019-09-23 15:26:15,Remove old things from docs,"* Explain that we do n't do approved extensions anymore , but the guidelines are still applicable . Refresh the guidelines . * Remove mention of old snippet site . * Remove mention of old extensions list . * Update mailing list and Discord links . * Update deprecated Werkzeug imports . closes # 3356 , closes # 3373",3374.0
52,2019-10-13 02:20:32,2019-09-22 11:00:01,get_cookie_name in SessionInterface for easier overriding in SecureCookieSessionInterface,"Most of the other arguments passed into `` response.set_cookie ( ) `` in `` SecureCookieSessionInterface.save_session ( ) `` use the overridable methods of `` SessionInterface `` to fill in each argument . Except for the cookie name , which is statically set to `` app.session_cookie_name `` . Sometimes a cookie name needs to be set dynamically based on the current request , for example , a cookie name that is dependent on the current subpath in the URL . At the moment , the best way of doing this is to override the `` save_session ( ) `` method of `` SecureCookieSessionInterface `` and make it dynamically pass in the cookie name to `` response.set_cookie ( ) `` . To avoid having to override the whole of `` save_session ( ) `` , this pull request adds in an overridable `` get_cookie_name ( ) `` method on `` SessionInterface `` to match the other `` get_xxx ( ) `` methods of that class . Note : I originally posted a question about this in Stackoverflow ( _ [ `` Something like get_cookie_name in Flask 's SessionInterface ? `` ] ( https : //stackoverflow.com/questions/55281983/something-like-get-cookie-name-in-flasks-sessioninterface ) _ ) and also asked the question ( using the Stackoverflow link ) in the Flask Discord chat . I was not satisfied with the response I got , so I 've opened up this pull request . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3369.0
53,2019-09-02 16:05:06,2019-09-02 15:39:59,Update testing.rst,"It now describes how to install flaskr using pip so that all tests pass . All tests in examples/tutorial/tests failed because the module flaskr could not be loaded , so I added a line describing how to install flaskr as an editable module . This should fix # 2833 .",3349.0
54,2019-09-23 19:24:09,2019-08-28 22:54:24,Fix the contibution docs,"The guidelines for the first time setup of Flask for development lacks any details about the installation of pre-commit module . The command to install the pre-commit hooks is not set as a code block and is rendered as a quote . As someone who decided to make a few contributions on the framework , this is a quite irritating start of the journey 😄 I 've added a link to the official guide for the installation of the pre-commit and fixed the markdown to make the command a code block .",3344.0
55,2019-08-01 19:56:31,2019-08-01 14:59:28,Fix github link generator for docs,Using packaging.version to check whether the version is dev version . resolve # 3320,3321.0
56,2019-08-01 20:07:53,2019-07-30 12:51:44,Fix typo in urlprocessors.rst,Remove the duplicate word 'automatically ' from the sentence : > They can automatically inject values into a call for : func : ` ~flask.url_for ` automatically .,3317.0
57,2019-07-25 18:33:37,2019-07-24 07:59:31,clean up outdated code,it is now required that Werkzeug > = 0.15,3315.0
58,2019-07-22 20:30:44,2019-07-18 04:59:26,Update outdated extension doc,Remove links and descriptions relate to abandoned `` Flask Extension Registry '' in the documentation . resolve # 3304,3305.0
59,2019-07-10 19:42:59,2019-07-10 18:47:10,pass sys.argv to flask cli,closes # 3297 Can be removed when pallets/click # 536 is fixed .,3299.0
60,2019-07-08 17:37:17,2019-07-08 17:31:36,restore and deprecate json_available,"` flask.json_available ` was removed because it was marked deprecated in the code and does n't do anything . ` flask.json ` is always available , and libaries that were n't sure about that should have used ` try/except ImportError ` while it was relevant . However , since a few dormant but popular extensions use it , it 's added back in for now . Anything doing ` if json_available ` or ` if json_available == True ` , such as Flask-Testing and Flask-DebugToolbar , will show a ` DeprecationWarning ` . ` is ` ca n't be overridden , so that wo n't show a warning , but I do n't think things that were using this flag did that . I 've marked it for removal in 2.0.0 , which will be a pretty big change anyway . Please reach out to extensions you use if you see this warning and offer to help maintain it if it 's an extension you want to continue using as Flask moves forward . closes # 3288",3292.0
61,2019-07-07 19:43:26,2019-07-07 19:40:29,Comment out helpful tips in ISSUE_TEMPLATE so they 're visible only when editing,The comments are now visible only to the issue creator and do not need to be manually removed before submitting the issue .,3290.0
62,2019-07-02 18:43:48,2019-07-02 18:39:57,show warning for old logger config,"Adds a warning for # 3282 when config for the ` `` flask.app '' ` or ` `` flask '' ` loggers is found and the logger for ` app.name ` * is n't * configured . > UserWarning : 'app.logger ' is named 'example ' for this application , but configuration was found for 'flask.app ' , which no longer has an effect . The logging configuration should be moved to 'example ' . closes # 3283",3284.0
63,2019-07-02 00:42:51,2019-07-01 22:03:32,use app.name as app.logger name,"# 2436 greatly simplified how logging is set up in Flask . Part of that removed the ` LOGGER_NAME ` config and hard-coded ` `` flask.app '' ` . However , # 2866 points out that due to this it is no longer possible to distinguish logs when dispatching multiple apps . This partially reverts the logger name behavior change from 1.0 . There is still no config , but the logger 's name is now the same as ` app.name ` ( basically the value passed to ` Flask ( import_name ) ` ) . The information that 's currently logged does make sense as coming from the user 's project rather than Flask itself , although we may introduce the ` `` flask.app '' ` logger again in the future for logging things truly internal to Flask and not the user 's app . This may require projects to update their logging config to reference their app 's name instead of ` `` flask.app '' ` . Closes # 2866",3282.0
64,2019-07-01 16:38:44,2019-07-01 14:37:26,Make the changelog UTF-8 compatible,Resolves # 3279,3281.0
65,2019-07-01 17:47:33,2019-07-01 14:26:08,Fixes for PEP451 import loaders and pytest 5.x,- pytest 5.x drops python2 compatibility and therefore only implements PEP 451 - pytest 5.x made the repr of ` ExcInfo ` less confusing ( fixed tests depending on the old format ) Resolves # 3275 Resolves # 3277,3278.0
66,2019-06-27 15:04:32,2019-06-27 14:59:51,send_file quotes `` : / '' in UTF-8 filename,"fixes # 3074 Through https : //tools.ietf.org/html/rfc8187 # section-3.2.1 , `` : '' and `` / '' are not part of ` attr-char ` and should be quoted .",3273.0
67,2019-06-26 21:43:37,2019-06-26 21:37:42,do n't clear BadRequestKeyError args,"Fixes # 3249 . Sets ` BadRequestKeyError.show_exception ` to include the exception message in the description , rather than clearing ` args ` to hide it . The attribute was introduced by pallets/werkzeug # 1595 , which will be released as Werkzeug 0.15.5 . Using Werkzeug > = 0.15.0 , < = 0.15.4 will still have the arguments cleared , so users will need to upgrade both libraries to get the fix .",3272.0
68,2019-06-23 22:43:48,2019-06-23 22:40:05,update project metadata,"More updates to files based on common Pallets format ( based on Werkzeug for now ) . Removed old build files , updated links in docs , reformatted changelog .",3270.0
69,2019-06-21 16:07:06,2019-06-21 15:54:22,use dashes for command names,"Use dash to separate command name , and explicitly name the command , to be consistent with Click 7 behavior . closes # 2931 closes # 3075",3269.0
70,2019-06-21 15:34:00,2019-06-19 22:43:12,always pass InternalServerError instance to 500 handler,"Due to multiple PRs over the last 5 years , the error handler behavior has slowly changed with the goal of being more consistent . However , after # 2314 was merged in 1.0.0 , these changes all cascaded together to make some inconsistent behavior finally visible . After * extensive * discussion in # 1281 , # 1291 , and # 1429 , the goal was to make error handlers trigger for exceptions in MRO order , rather than registration order . It formalized the idea that HTTP exception classes and status codes were aliases . Registering a handler for ` 401 ` was the same as ` Unauthorized ` . However , it ( unintentionally ? ) preserved some old behavior where user errors would only be looked up against a ` 500 ` error handler , not a ` InternalServerError ` handler , even though the goal was for these to be aliases . # 2314 ensured a more consistent lookup order between blueprints and app error handlers for codes and exception classes . # 2362 simplified the code even more , and made it more correct for subclass handling . A side effect of these refactors was that it fixed the preserved behavior , so 500 and ` InternalServerError ` handlers were equivalent . All these changes had the goal of making error handler registration and triggering more intuitive , and making maintenance easier . When an unhandled exception is raised , ` handle_exception ` is triggered so that a final , generic internal server error is returned . Previously , the behavior was to pass the unhandled exception to the 500 error handler , rather than the generic ` InternalServerError ` . Now that 500 and ` InternalServerError ` were the same thing and were both considered as handlers for generic error , users who registered a handler for ` InternalServerError ` or the ` HTTPException ` base class were surprised to get other random exceptions passed to the handler , rather than strict subclasses ( # 2778 , # 2841 ) . A fix was proposed in # 2983 which continued to preserve the old behavior by making a handler for ` 500 ` receive any error , while a handler for ` InternalServerError ` only received ` InternalServerError ` . I think this made the code harder to reason about , both for maintainers and for app devs . Instead , I 'm going the opposite direction and ensuring that those handlers only ever receive ` InternalServerError ` instances . For unhandled errors , the exception has a new ` original_exception ` attribute that has the original unhandled error . This will be formalized in Werkzeug 1.0.0 , until then ` getattr ` can be used to check if the attribute is set . The upside of this is that it is safe to assume that all codes and classes are aliases , and will only receive matching classes of errors , which seems to have been the intention of previous discussions , and makes the most sense to me . The downside is that there is no way for this to be 100 % backwards compatible for 500 handlers that were written assuming any exception would be passed to them , and I could n't think of a way to have a useful deprecation warning transition . ` e ` will always look like ` InternalServerError ` , possibly making existing generic error pages less useful . However , with the availability of ` e.original_exception ` , it should be straightforward to get the intended behavior back . Code should n't * fail * in the mean time , only be less specific . I think the benefit of more consistent behavior outweighs the drawback . closes # 2778 closes # 2841 closes # 2983 While fixing this , I noticed that ` finalize_request ` was only called if a 500 error handler was found . If no custom handler was registered , then an unhandled error would skip ` after_request ` functions , saving the session , and sending the ` request_finished ` signal . This is now fixed , so ` finalize_request ` is always called . To clear up related confusion about very generic error handlers such as ` HTTPException ` and ` Exception ` , more docs have been added to the ` errorhandling.rst ` page . ` handle_exception ` has much clearer explanations of what it does too .",3266.0
71,2019-06-12 15:17:26,2019-06-12 14:49:10,fix tests failing with server name warnings,"After pallets/werkzeug # 1577 , mismatched configured and real server names will show a warning in addition to raising 404 . This caused tests that did this deliberately to fail . This patch removes the pytest fixture we were using to fail on warnings , instead using the standard ` -Werror ` option . This speeds up the tests by ~3x .",3261.0
72,2019-06-12 18:07:05,2019-06-12 13:59:17,adds api error handling example to documentation,"Describe what this patch does to fix the issue . This adds documentation to the error handling page . I was having a hard time finding anything on the proper use of abort with the flask error handler . After settling on a good pattern , I added it here . Link to any relevant issues or pull requests . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3260.0
73,2019-06-12 21:10:42,2019-06-07 20:54:42,Added : param to the _get_exc_class_and_code method docstring,Describe what this patch does to fix the issue . Added : param to the _get_exc_class_and_code method docstring Link to any relevant issues or pull requests . This fixes # 3252,3253.0
74,2019-06-12 21:02:57,2019-06-02 17:47:22,Added : param to the Blueprint concstructor docstring,Added the params list to the Blueprint documentation . closes # 3216,3248.0
75,2019-06-01 16:28:30,2019-06-01 16:23:01,fix string concats left over by black,Added the params list to the Blueprint documentation . closes # 3216,3247.0
76,2019-06-01 16:12:50,2019-06-01 15:35:40,apply reorder-python-imports pre-commit config,Added the params list to the Blueprint documentation . closes # 3216,3246.0
77,2019-06-01 15:10:33,2019-06-01 15:01:31,move to src directory,Added the params list to the Blueprint documentation . closes # 3216,3245.0
78,2019-06-01 12:59:02,2019-05-31 19:37:44,Clarify documentation about how url_for uses configuration values ( # 2759 ),This attempts to clarify the documentation as discussed in # 2759 and # 3219 .,3244.0
79,2019-05-31 20:47:33,2019-05-31 19:04:15,Guard against missing request context in logging docs .,Wrapped request context use with ` has_request_context ` in logging docs . Fixes https : //github.com/pallets/flask/issues/2838,3243.0
80,2019-06-01 12:57:07,2019-05-31 18:08:54,`` # 3211 : Do n't require ssl module '',"This addresses # 3211 by guarding the ssl import with an except ImportError , and then raising click.BackParameter ( ) if SSL is not present when -- cert is passed to the CLI . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3242.0
81,2019-06-01 13:36:24,2019-05-31 17:52:46,Add pre-commit config for flake8,Updated pre-commit for flake8 config,3241.0
82,2019-05-31 18:06:55,2019-05-31 17:23:19,Fix testing documentation to demonstrate using test client with teardown,"Change the example in `` Testing Flask Applications '' to demonstrate using test client with teardown . ( by using with statement ) # 2949 < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3240.0
83,2019-05-31 17:44:22,2019-05-31 15:55:35,Move python properties to decorator syntax,"Change python properties to decorator syntax . Does # 3218 < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3237.0
84,2019-05-31 17:05:01,2019-05-31 15:51:25,Do not register empty CLI groups from Blueprint,"( Fixes # 3224 ) Check if the CLI group is empty during Blueprint registration , and exit early if it is .",3236.0
85,2019-05-31 16:50:59,2019-05-31 14:58:14,Better error message when view return type is not supported,"Before , returning a ` bool ` from a route caused the error Fixes # 3214 < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3235.0
86,2019-05-31 17:58:41,2019-05-31 14:55:00,Convert make_test_environ_builder into class ( fixes # 3207 ),"Added a new class ` flask.testing.EnvironBuilder ` inheriting from ` werkzeug.test.EnvironBuilder ` . Logic from ` make_test_environ_builder ( ) ` moved to the constructor of that class , and changed to simply instantiate the class , while issuing a ` DeprecationWarning ` . I did explore making ` json_dumps ( ) ` a regular method rather than a static method , to pick up ` app ` , but if anything was expecting to call ` EnvironBuilder.json_dumps ( ) ` as a static method then this would break . Requires funky descriptor tricks to work both as a static method and an instance method under Python 2 and so did n't seem worth the code it would take . closes # 3207",3232.0
87,2019-05-31 11:18:41,2019-05-31 11:02:46,Fix style issues on master using Black,Should have added this in 33379155f613dbdb4fe6d0918a5038a989fc18bf !,3229.0
88,2019-05-23 14:55:07,2019-05-23 14:50:09,"Add pre-commit to dev dependencies , document it and Black in CONTRIBUTING","Now that we have a Black pre-commit hook ( # 3138 ) , ensure pre-commit gets installed on `` pip install -e . [ dev ] `` and document use of Black ( rather than `` try to follow pep8 '' ) in CONTRIBUTING .",3213.0
89,2019-05-23 15:22:07,2019-05-19 15:18:21,FakeSignal should stub connect_via method,"Blinker has a [ ` connect_via ( ) ` ] ( https : //pythonhosted.org/blinker/ # blinker.base.Signal.connect_via ) method . ` _FakeSignal ` should stub this method , as well as the others .",3208.0
90,2019-05-31 17:58:49,2019-05-19 04:09:39,Convert make_test_environ_builder into EnvironBuilder subclass,"Werkzeug 's ` EnvironBuilder ` gained a ` json_dumps ` attribute , but Flask does n't have an ` EnvironBuilder ` subclass right now to take advantage of that , and there 's no way to configure the ` Client ` to use a different builder class anyway . Might be good to refactor ` flask.testing.make_test_environ_builder ` to be an ` EnvironBuilder ` subclass at some point , rather than a factory wrapper . _Originally posted by @ davidism in https : //github.com/pallets/flask/pull/3181 # issuecomment-493489553_",3207.0
91,2019-05-17 16:04:37,2019-05-17 15:48:03,do n't push app context for test client json,"Allow passing ` app ` to ` json.dumps ` ( and ` json.loads ` for symmetry , though it 's not required for this ) , and use it instead of ` current_app ` when available . ` make_test_environ_builder ` can pass the app it was passed , rather than pushing an app context in order to configure the JSON encoder . closes # 2900",3206.0
92,2019-05-17 00:32:46,2019-05-16 20:55:49,azure pipelines ci on 1.0.x branch,backporting from master includes some tweaks to try to get coverage on build page,3204.0
93,2019-05-16 19:12:07,2019-05-16 18:09:58,add Azure Pipelines to test coverage,No functional changes,3203.0
94,2019-05-16 18:54:34,2019-05-14 20:16:56,Fix various small spelling errors .,"This patch fixes a few small spelling errors throughout the documentation . I did n't change common programming or Python jargon . For example , I did n't change virtualenv ( to `` virtual environment '' ) , `` runtime '' , or `` auto escaping '' . I turned ReST to REST because the latter spelling seems to have taken over .",3199.0
95,2019-05-19 04:44:22,2019-05-13 08:53:55,Support dataclass in JSONEncoder ( if available ),Support dataclass to be encoded with jsonify using ` dataclasses.as_dict ( ) ` .,3195.0
96,2019-05-18 15:44:04,2019-05-07 21:50:16,Make jinja_options a dict rather than ImmutaleDict,This allows changing jinja environment options from the flask app : The above example will be valid when Jinja2 v2.11 will be released ( including https : //github.com/pallets/jinja/pull/997 ),3190.0
97,2019-05-19 04:19:58,2019-05-06 20:10:04,Simplify flask.cli.main,"Werkzeug > =0.15 's reloader now properly detects ` python -m module ` . Fixes # 3022 The PR https : //github.com/pallets/flask/pull/3181 is the one updating Werkzeug to > =0.15 , so it should be merged first .",3185.0
98,2019-05-06 20:34:47,2019-05-06 19:41:04,Pre-commit : Black,Reformat everything with [ black ] ( https : //github.com/python/black ) .,3183.0
99,2019-05-19 04:27:32,2019-05-06 19:16:05,Remove ending slash from static_url_path,"Describe what this patch does to fix the issue . Fixes # 3134 where flask fails if ` static_url_path ` ends with a slash , e.g . ` /foo/ ` Because the ` / < path : filename > ` param already starts with a slash , it is imperative the the ` static_url_path ` prefix does NOT end with a forward slash .",3182.0
100,2019-05-19 04:10:13,2019-05-06 19:10:37,Use Werkzeug 's JSONMixin class ( moved from Flask ) and update tests,"Fixes # 3125 Worked on with @ seawolf42 : smile : - Remove Flask 's JSONMixin class to use Werkzeug 's , which in version > =0.15 imported Flask 's JSONMixin . - Update minimum Werkzeug version to > =0.15 - Remove one test that no longer applies ( referencing app 's debug mode - not applicable in Werkzeug environment ) - Update two test cases to remove app custom encoder and decoder and instead compare raw responses .",3181.0
101,2019-05-17 21:18:41,2019-05-06 18:30:19,Fix MethodView inheritance Error ( # 3138 ),* Describe what this patch does to fix the issue . * Fix the error that ` methods ` variable in ` MethodView ` wo n't be inherited when it 's not overwritten . * Link to any relevant issues or pull requests . * closes # 3138,3179.0
102,2019-05-06 17:46:39,2019-05-06 16:55:15,Create CODE_OF_CONDUCT.md,Ticket is referenced in [ # Issue 1 ] ( https : //github.com/pallets/meta/issues/1 ) in the Meta repo . I spoke with @ davidism and the decision was to use Contributor Covenant . It has easy GitHub integration and quality content .,3178.0
103,2019-05-06 19:23:35,2019-05-06 15:12:50,fix RST line too long,Lines in RST files should be no longer than 80 characters,3175.0
104,2019-05-17 20:32:41,2019-05-06 15:02:42,Allow mode='rt ' on open_resource ( ) helper,closes # 3163,3174.0
105,2019-05-16 14:36:03,2019-05-04 20:25:21,add test output and a run against Python RC,Also triggers on maintenance branches now !,3172.0
106,2019-05-04 14:51:58,2019-05-04 14:50:12,Set up Azure Pipelines,Also triggers on maintenance branches now !,3170.0
107,2019-05-17 02:23:20,2019-05-03 19:03:12,Fix dev-server warning message readability ( # 3168 ),"fixes # 3168 New , more explicit warning message on ` app.run ( debug=True ) ` : ! [ image ] ( https : //user-images.githubusercontent.com/13977519/57159683-cfef8f80-6de6-11e9-89c1-8884fab7f2e0.png ) < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3169.0
108,2019-05-17 02:23:33,2019-05-02 01:06:37,Improve warning about dev server use in production,"I 'm preparing for my PyCon tutorial , for which I 'm trying to look at things from the perspective of a beginner . The output of ` flask run ` is actually very confusing if you do n't have a bit of background . Here is an example : Thoughts ?",3168.0
109,2019-05-16 17:45:50,2019-04-24 18:28:24,Update documentation on gunicorn deployment and app discovery,"- Added that an empty ` FLASK_APP ` environment variable will also look for an ` app ` package in addition to the two files . - Added instructions for running Gunicorn with an app factory that lacks an explicit application instance but has a function that returns one . Regarding the Gunicorn update , perhaps the other application servers should have a similar update ? It looks like uWSGI takes the same type of arguments as Gunicorn . Perhaps others more familiar with those apps can offer how to handle the same type of application I 've updated the Gunicorn documentation for ?",3162.0
110,2019-05-16 17:23:18,2019-04-23 17:56:40,Improved CONTRIBUTING.rst,,3159.0
111,2019-05-25 21:09:18,2019-04-16 22:41:22,Fix teardown bug in FlaskClient,"* Fixes pytest-dev/pytest-flask # 42 Entering a client preserves all context from being poped , but exiting only poped one preserved context . This PR pops all preserved context .",3157.0
112,2019-05-17 01:17:46,2019-04-14 14:55:48,More explicit explanation : session testing,Use a more explicit explanation on how to write code to test own code when sessions are needed . The previous code was not fully explicit that the client is supposed to be called after the session transaction and not during . That caused https : //stackoverflow.com/questions/55500672/flask-testing-endpoint-with-session-data-the-call-has-no-session and what it duplicates . This patch makes the documentation on this part more explicit and more idiot-proof . * * Note : * * Due to I ca n't test the documentation locally,3154.0
113,2019-05-16 16:55:31,2019-04-07 12:13:49,Replaced deprecated sample code in proxy-setup docs,Altered the proxy-setup docs to replace deprecated sample code as per issue # 3139 It 's my first PR so if there 's anything I 've done wrong then give me a shout ! closes # 3139,3142.0
114,2019-05-16 16:49:00,2019-04-03 08:47:28,Update CONTRIBUTING.rst discord link + style info,"Describe what this patch does to fix the issue . Link to any relevant issues or pull requests . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3137.0
115,2019-05-16 16:52:14,2019-03-23 23:11:40,Fix some HTML injection paths in examples,These are unlikely to be copy-pasted by users but it 's best practice to avoid it and other examples do .,3129.0
116,2019-05-25 18:23:01,2019-03-18 19:44:49,fix 'static_url_path ' defaulting for empty paths,"the documentation of the application object specifies static parameters : static_url_path – can be used to specify a different path for the static files on the web . * * Defaults to the name of the static_folder folder . * * static_folder – the folder with static files that should be served at static_url_path . Defaults to the 'static ' folder in the root path of the application . so by my understanding , ` app=Flask ( __name__ , static_folder= '' ) ` should allow for arbitrary ( absolute ) path structure for all static files . it does n't . but the following does : ` app=Flask ( __name__ , static_folder= '' , static_url_path= '' ) ` given the above doc strings , that appears inconsistent for this specific case ( ` static_folder= '' ` ) , stepping through the codebase yielded : < Rule '// < filename > ' ( GET , OPTIONS , HEAD ) - > static > ` re.compile ( '^\\|// ( ? P < filename > [ ^/ ] . * ? ) $ ' ) ` which is an expression that can never be satisfied by a valid url please consider this trivial patch . i hope the tests are appropriate too , it was difficult to know how much of the mechanism to incorporate for such a small change commit message : -prefix a path delimiter iff there 's a path to delimit -ensures a valid default static route rule is created on application intialisation for the case 'static_folder= '' '' ' and implicit 'static_url_path' todo * add a changelog entry if this patch changes code",3124.0
117,2019-05-16 15:52:24,2019-03-09 00:59:04,Fix code snippet in config.rst for env vars Fixes # 3117,Changes the snippet in the config documentation to no longer assign a bool as the default value from os.environ.get ( ),3118.0
118,2019-03-06 13:40:22,2019-03-06 02:42:04,doc : Improve description for valid view func return value,* improve wording . * remove unnecessary spaces . Alternate fix of # 3112,3113.0
119,2019-05-24 17:39:12,2019-03-03 17:42:17,Allow dictionaries return values as JSON,"This is something I 've been experimenting with in Quart and I do n't see a downside . I ca n't find any old issues relating to this ( although I 've found it hard to search for ) . This is roughly an issue , but as a pull request ( branch ) you can take the code and try it out . Obliviously if you consider this a good idea I 'll add much more testing and documentation . This supports an increasingly common use-case whereby JSON is the primary response ( rather than a templated string ) . Given Flask simplifies returning HTML responses , it seems fitting that it should also do so for JSON responses . In practice it allows , # # # Note This does n't support returning anything other than an associate array at the top level in the JSON response . I 'm ok with this as in practice APIs are only extensible if the top level is an associate array .",3111.0
120,2019-06-13 19:46:54,2019-02-24 22:05:08,moving match_request to RequestContext.push to enable ModelConverter,"` match_request ` will be called in ` RequestContext.push ` after ` current_app ` , ` request ` , and ` session ` are already populated . closes # 3088",3104.0
121,2019-02-24 14:33:44,2019-02-24 10:41:27,Fix typos in the documentation,"` match_request ` will be called in ` RequestContext.push ` after ` current_app ` , ` request ` , and ` session ` are already populated . closes # 3088",3103.0
122,2019-02-23 00:32:13,2019-02-23 00:03:22,Fix formatting issue in quickstart guide,"Due to a formatting issue in the reStructuredText input , the HTML output produced a description list ( ` < dl > ` ) within the ordered list .",3101.0
123,2019-01-25 13:56:54,2019-01-25 08:46:28,_compat.py : Use feature detection instead of version detection,"Describe what this patch does to fix the issue . When run on Python 3 , linters such as Pylint and Flake8 will correctly flag __unicode__ and __long__ as _undefined names_ because _compat.py does not currently follow the Python porting best practice [ ___use feature detection instead of version detection___ ] ( https : //docs.python.org/3/howto/pyporting.html # use-feature-detection-instead-of-version-detection ) . This PR allows this codebase to pass those Pylint and Flake8 tests without adding any linter directives . flake8 testing of https : //github.com/pallets/flask on Python 3.7.1 $ __flake8 . -- count -- select=E901 , E999 , F821 , F822 , F823 -- show-source -- statistics__ Link to any relevant issues or pull requests . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",3082.0
124,2019-05-19 04:57:10,2019-01-08 08:06:12,Allow customizing url map class,"For speeding up url route matching , I defined a custom rule class and a custom url map class . But ` Flask ` currently only allows modifying url rule class , it should support modify url map class too .",3069.0
125,2019-01-07 21:20:01,2019-01-07 21:12:16,remove encoding from method override pattern,"Environ values are already native strings , so calling ` encode ` is either misleading on Python 2 ( because it 's already mixed bytes ) , and incorrect on Python 3 ( because it becomes bytes , when it should be a string ) . closes # 2981",3068.0
126,2019-01-06 23:11:31,2019-01-06 23:11:14,clarify where to call flask run from in tutorial,closes # 2967,3067.0
127,2019-01-06 18:45:15,2019-01-06 18:44:20,disable slow travis osx env,closes # 2967,3066.0
128,2019-01-06 18:34:53,2019-01-06 18:27:26,use `` -m virtualenv '' in installation doc,"On Fedora , ` yum install python-virtualenv ` installs virtualenv for Python 2 , but it does n't add the ` virtualenv ` command to the path . Use ` python2 -m virutalenv ` instead of the ` virutalenv ` command . closes # 3035",3065.0
129,2019-01-05 23:06:42,2019-01-05 23:01:37,fix docs build,"On Fedora , ` yum install python-virtualenv ` installs virtualenv for Python 2 , but it does n't add the ` virtualenv ` command to the path . Use ` python2 -m virutalenv ` instead of the ` virutalenv ` command . closes # 3035",3064.0
130,2019-01-05 23:07:07,2019-01-05 20:53:22,clear KeyError in production for Werkzeug 0.15,"Werkzeug 0.15 adds the ` KeyError ` message to ` BadRequestKeyError ` . Flask was previously adding this manually . Now it should * clear * the message when not in development mode . 1.0.x will keep compatibility with Werkzeug 0.14 and 0.15 , 1.1 will bump the version requirement .",3063.0
131,2019-01-04 22:35:15,2019-01-04 22:25:27,Add comment about using factory function in __init__.py,"If the tutorial is followed , a factory function is created in ` __init__.py ` . As far as I understand this requires the factory function to be imported and then used to create the application in a ` yourapplication.wsgi ` file . This pull request adds a comment about this .",3062.0
132,2019-01-05 23:44:54,2019-01-04 01:25:53,Add support for PathLike objects in static file helpers,"See : https : //www.python.org/dev/peps/pep-0519/ This is mostly encountered with pathlib in python 3 , but this API suggests any PathLike object can be treated like a filepath with ` __fspath__ ` function .",3059.0
133,2019-01-06 18:25:47,2018-12-31 08:28:33,Fix syntax warning in docstring,This fixes the ` SyntaxWarning ` introduced in CPython master . This is similar to https : //github.com/pallets/jinja/issues/646 where ` DeprecationWarning ` is now converted to ` SyntaxWarning ` . I have added ` r ` to convert the docstring as raw string that fixes the issue . Before patch warning : Relevant CPython issue : https : //bugs.python.org/issue32912,3056.0
134,2019-01-06 18:09:18,2018-12-29 12:10:22,Fix DeprecationWarning on collections import in flask.sessions,This fixes # 3053 by moving the import to _compat . This can be directly imported since it 's the only file but moving it to _compat makes it easier to use it in future for these cases and also goes in line with fixes in jinja2 and werkzeug for similar issues . Let me know if this needs to be changed . Thanks for Flask : ),3054.0
135,2019-01-06 17:54:59,2018-12-27 23:08:39,"[ Docs ] Improve tojson docs ( additions , clarifications , & fixes )",( See individual commit messages for explanations . ),3051.0
136,2019-01-06 16:00:23,2018-12-23 16:24:21,Add Python 3.7 to CI .,Python 3.7.0 has been released at 2018-06-27 . So I think we need to add it to CI .,3044.0
137,2019-01-06 16:11:40,2018-12-14 17:00:49,Fix typos found while completing the Flask tutorial,Fix minor typos in ` blog.rst ` and ` database.rst ` .,3031.0
138,2019-01-06 15:07:59,2018-12-07 16:08:41,Clarify prefixing of urls for blueprint endpoints,"Clarify that blueprint endpoint * names * are prefixed by the name of the blueprint , but the url for the endpoint is not automatically prefixed .",3019.0
139,2019-01-06 14:38:15,2018-12-01 01:05:07,Use imperative tense for CLI help text,Fix # 3005 Continue # 3009,3011.0
140,2019-01-06 14:26:08,2018-11-13 21:48:09,[ Docs ] Add Single-Page Web Application pattern,Added instructions on how to serve single page applications as a Flask Pattern in the docs . I tried it out for React Router and everything works as expected . Thanks to David for helping us get started at the PyCon Canada Sprints !,2996.0
141,2018-11-13 18:55:35,2018-11-12 22:02:00,Handle errors during create_url_adapter,"If create_url_adapter raises ( which it can if werkzeug can not bind environment , for example on ~non-ASCII~ non-printable Host header ) , we should handle it as other routing exceptions rather than raising through . This allows us to return a HTTP 400 , rather than a 500 from unhandled exception . This came up in https : //github.com/pallets/werkzeug/issues/640 Do we need to add it to any documentation or changelogs ?",2994.0
142,2018-11-13 19:09:32,2018-11-12 20:49:50,Update documentation for users to use flask-caching instead of Werkzeug cache,Update the documentation to point users to use flask-caching instead of the deprecated Werkzeug cache . I have linked to [ flask-caching 's documentation ] ( https : //flask-caching.readthedocs.io/en/latest/ ) instead of copying flask-caching example code .,2993.0
143,2018-11-07 20:04:11,2018-11-07 19:31:33,Fixes for sentry docs,Followup to # 2990,2991.0
144,2018-11-07 19:25:53,2018-11-07 15:37:32,Update sentry error handling documentation,"Updates error handling Sentry documentation examples : - Update ` getsentry.com ` URLs to ` sentry.io ` - Change examples to use the Sentry Python SDK : ` sentry-sdk ` - Removed the app factory pattern example ( new sdk uses signals , not app object ) - Added a custom exception handling example -- - Related : # 2917 < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",2990.0
145,2019-01-07 17:58:33,2018-11-01 20:42:50,Do not handle RoutingExceptions with app error handlers,Fixes https : //github.com/pallets/flask/issues/2984,2986.0
146,2018-10-27 20:56:10,2018-10-27 12:35:16,Use https for external links wherever possible,Update docs to use https for external links wherever possible . Please also consider supporting https on all the subdomains of pocoo.org in near future : - ),2969.0
147,2019-01-06 23:43:15,2018-10-24 23:15:34,Docs : replace MongoKit by MongoEngine on docs,"Docs chapter `` Patterns for Flask '' has a section dedicated to MongoKit , but MongoKit lib seems unmaintained and is not compatible with recent versions of PyMongo . This commit replaces MongoKit guide with a new one using MongoEngine . Closes # 2907",2964.0
148,2018-10-24 16:06:40,2018-10-24 15:12:15,Fix # 2961：ignore colon followed by slash when split app_import_path,"Flask currently supports importing app through a combination of module path and app variable name , such as '/usr/app.py : my_app ' . When the module path contains a colon , it will conflict with this import way and a ` flask.cli.NoAppException ` will be raised . A file path on a Windows system may contain a colon followed by a slash . So we solved this problem on Windows by ignoring the colon followed by a slash when we split ` app_import_path ` . Fix issue # 2961 .",2963.0
149,2018-10-23 15:27:47,2018-10-23 14:33:13,Cache return values to avoid repeated function calls .,"I know this PR is too trivial , so you can close it at will . I just think ` Flask ` as a famous framework needs to be stricter with itself .",2962.0
150,2019-01-07 15:02:03,2018-10-20 18:16:01,Fix # 2943 : Allow bytesio partial content,"In ` helpers.py ` when ` file ` is a ` BytesIO ` , ` fsize ` was not setted . It should be setted . Issue : https : //github.com/pallets/flask/issues/2943 - [ x ] add tests that fail without the patch - [ x ] ensure all tests pass with `` pytest `` - [ x ] add documentation to the relevant docstrings or pages - [ x ] add `` versionadded `` or `` versionchanged `` directives to relevant docstrings - [ x ] add a changelog entry if this patch changes code",2957.0
151,2019-05-19 19:03:46,2018-10-11 12:13:39,Fix # 2937 : Ensure the consistency in load_dotenv 's return type,"In the `` flask.cli `` module , the `` load_dotenv `` function is not consistent in its return type . It should either return True or False depending on whether it has loaded the file or not , respectively . fixes https : //github.com/pallets/flask/issues/2937 Commit checklist : - [ x ] add tests that fail without the patch - [ x ] ensure all tests pass with `` pytest `` - [ x ] add documentation to the relevant docstrings or pages - [ x ] add `` versionadded `` or `` versionchanged `` directives to relevant docstrings - [ x ] add a changelog entry if this patch changes code",2939.0
152,2019-05-19 19:03:46,2018-10-10 11:17:22,load_dotenv returns true even if no file exists,"# # # Expected Behavior If no file is loaded/exists , ` flask.cli.load_dotenv ` should return False . # # # Actual Behavior This code : does not fail . # # # Environment * Python version : 3.5.5 * Flask version : 1.0.2 * Werkzeug version : 0.14.1",2937.0
153,2018-11-04 03:32:34,2018-10-05 22:56:39,copy_current_request_context copies old session object,"# # # Expected Behavior When using ` copy_current_request_context ` in the middle of a request , I 'm expecting it to copy the current state of ` flask.request ` and ` flask.session ` at the time it 's called . # # # Actual Behavior The current state of ` flask.request ` is copied , but ` flask.session ` is from before the current request and does n't contain changes made during the current request , before ` copy_current_request_context ` was called . To me this seems like unexpected behaviour . If it 's not I 'd like to understand a bit more about why , and also to find out whether there 's any workaround or alternative approach I can take . # # # Example Here 's a fully functional example you can save and run . It adds a test value to ` flask.request ` and ` flask.session ` during the request , then uses ` copy_current_request_context ` to decorate a method that will retrieve those same values in another thread . Two requests are made ; on the first request the copied context can find the new value added to ` flask.request ` but can not find the value added to ` flask.session ` . On the second request , the copied context can find the value added to ` flask.request ` , and now finds the value that was previously added to ` flask.session ` in the first request . # # # Environment * Python version : 3.7.0 * Flask version : Flask==1.0.2 * Werkzeug version : Werkzeug==0.14.1 Also , for whatever it 's worth : I 'm investigating this as part of improving this project : https : //github.com/dchevell/flask-executor",2935.0
154,2019-01-07 15:23:00,2018-10-04 12:52:24,Fix issue # 2933 : Make sure the attachment filename is text type .,"1 . If attachment filename is bytes type and contains non-ascii coded bytes , then the following ASCII encoding process will raise a `` UnicodeDecodeError `` exception . 2 . Since the following exception handling uses `` unicodedata `` for normalization , this also implies that the attachment filename is a `` unicode `` when encoding . https : //github.com/pallets/flask/blob/363205bdc3abcfeed08c7e85e397fb7a7dc9ef07/flask/helpers.py # L570-L577 3 . Since `` UnicodeDecodeError `` exception was raised , we can see that an ASCII decoding process was also performed implicitly when encoding bytes string . So this solution wo n't introduce unnecessary overhead . fixes # 2933",2934.0
155,2019-05-19 18:40:55,2018-09-28 20:30:27,Fix # 2926 ` Default port overrides requesting a system assigned port `,"Fix # 2926 In ` app.py ` , compare possible port values with ` None ` explicitly , instead of relying on bool casting . Thanks to this , ` 0 ` is treated as legitimate port value , and not overwritten by the default value .",2928.0
156,2019-01-06 22:51:55,2018-09-21 13:55:19,Docs : fix some typos in config.rst,Fix some typos in config.rst,2918.0
157,2018-11-28 13:25:22,2018-09-21 05:19:19,Docs : fix some errors in errorhandling.rst,1 . Grammar error : 'return ' should be 'returns ' ; 'would is ' should be 'would be ' . 2 . Reloader is used to reload and fork process if modules were changed rather than when an exception occurred . 3 . The sample code is not concise enough .,2917.0
158,2018-09-21 10:33:56,2018-09-19 21:42:50,Make script output into comments to not break syntax highlighting,"http : //flask.pocoo.org/docs/1.0/quickstart/ # url-building In the URL Building section of the quickstart , the script output is shown right after the code . This breaks syntax highlighting for the whole code-block . To fix this , I have made the output into comments .",2916.0
159,2018-09-17 15:56:26,2018-09-17 15:51:01,Update Sphinx conf for recent theme changes,"Without CONTRIBUTING.rst filoe , documentation is not buildable : docs/contributing.rst:1 : WARNING : Problems with `` include '' directive path : InputError : [ Errno 2 ] No such file or directory : 'CONTRIBUTING.rst ' .",2912.0
160,2018-09-17 13:39:46,2018-09-17 08:35:28,fix issue : no theme named 'flask ' found,"While build docs , some errors occurred . For details , see https : //github.com/pallets/pallets-sphinx-themes/issues/15 # # Reason If we use a theme of a sphinx extension which does n't add themes into `` sphinx.html_themes `` entry points , at the same time we do n't declare it as our extensions , `` sphinx `` will not find the theme . # # Solutions There are two solutions : 1 . The sphinx extension adds its themes into `` sphinx.html_themes `` entry points . 2 . In the `` docs `` ' `` conf.py `` , we declare the sphinx extension as our extensions . I think solution * * 2 * * will be more applicable .",2910.0
161,2019-05-24 14:32:46,2018-08-31 22:11:54,Fix # 2897 - Add ` extra_files ` option to ` flask run ` CLI,Fix # 2897 To define a list of files the reloader should watch additionally to the modules as in `` extra_files `` argument used in the `` app.run `` and `` werkzeug.serving.run_simple `` you can either use the `` -- extra-files `` ( or multiple `` -f `` ) option or define the `` FLASK_RUN_EXTRA_FILES `` environment variable . On command line the same can be achieved with `` flask run -f /path/to/file1 -f /path/to/file2 `` .,2898.0
162,2019-05-24 14:32:46,2018-08-31 15:17:43,Define reloader extra_files in ` flask run ` CLI,"# # # Expected Behavior I expected to have ` FLASK_RUN_EXTRA_FILES ` to be processed in the same way of ` FLASK_RUN_PORT ` and ` FLASK_RUN_HOST ` When using the old style ` app.run ` we can define an ` extra_files ` to be watched for changes by the reloader , that is useful for example , if you have a static settings file like ` settings.toml ` ( using [ dynaconf ] ( https : //dynaconf.readthedocs.io/en/latest/guides/flask.html ) ) or another kind of static config or themed templates loaded from other paths # # # Actual Behavior In the ` run ` command https : //github.com/pallets/flask/blob/master/flask/cli.py # L775 the argument ` extra_files ` is not being passed to ` wekzeug.run_simple ` https : //github.com/pallets/werkzeug/blob/master/werkzeug/serving.py # L738 # # # Suggestion Add ` FLASK_RUN_EXTRA_FILES= '' path1 , path2 , path '' ` to flask run command . or Map all variables from ` werkzeug.run_simple ` - https : //github.com/pallets/werkzeug/blob/master/werkzeug/serving.py # L738 In to ` FLASK_RUN_ * ` prefixed env var or ` WERKZEUG_RUN_ * ` prefixed env var . # # # Environment * Python version : 3.6 * Flask version : 1.0.2 * Werkzeug version : 0.14.1",2897.0
163,2018-09-09 08:41:57,2018-07-29 02:24:34,Add prefix for all commands in documentation,This patch does the following things : * Add `` $ '' prefix for all command except Windows-specific commands . * Add `` > '' prefix for all Windows commands . * Change `` # '' to `` $ '' in some commands .,2877.0
164,2019-01-06 23:00:01,2018-07-27 09:38:09,Update docs on larger applications WRT tutorial,"The wording of the docs makes it sound like the tutorials use the simple structure for a flask application , which they no longer do . This commit re-words the docs to make it clearer .",2875.0
165,2018-07-20 17:28:05,2018-07-20 17:22:52,📚 Improve docs about ScriptInfo,Improve documentation for the CLI using application factories and how/when the ScriptInfo object is passed with Application Discovery .,2870.0
166,2018-07-20 17:42:09,2018-07-11 14:54:46,[ docs ] Fix broken Sphinx cross-references ; use : doc : tags where necessary,"This PR… * Fixes broken cross-references to other documentation * Fixes all warnings from Sphinx when building the docs * Makes an explicit call-out to contributing guidelines in README I hit the broken cross-references when reading the docs , when opening the link to the uWSGI docs from the Standalone WSGI Containers page would give me a 404 error . It seems like there was some rearranging at some point and this was probably overlooked , so this should fix the broken links and make a better experience for others browsing the docs . : slightly_smiling_face : Additionally , in an oversight , I missed the contributing guidelines in the root directory of the repository but I did scan the README . When I came back to this , I found the contributing guidelines , but I would have noticed them quicker and submitted this PR a day earlier if I had seen them mentioned in the README . So I thought an explicit call-out to the existing contributing guidelines ( which were well-written and very helpful to me ) in the README might be useful for others too . I successfully ran the tests on the docs and I was able to build them locally on my workstation . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",2861.0
167,2019-01-06 22:43:17,2018-07-06 20:21:18,Update docs to be more clear about from config instantiation,"This PR updates documentation to be more clear that ` config.from_object ` does not instantiate the object . It also provides examples as to how to use ` @ property ` in a configuration class . Addresses # 2853 . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",2854.0
168,2018-06-29 05:23:09,2018-06-29 03:19:21,: art : Use ` itervalues ` instead of ` iteritems ` when ` key ` is not necessary,"This pull request uses the already implemented ` itervalues ` from ` _compat.py ` module instead of the ` iteritems ` for iterating the * * values * * from a given dict ( line 58 ) . As a consequence , the unused variable ` k ` is now removed since it 's not necessary for iterating over the dict values .",2848.0
169,2018-06-28 14:22:18,2018-06-27 11:37:55,: fire : Remove code supposed to be removed at v1.0,"This PR removes a small piece of backward compatibility code from ` flask/__init__.py ` that accordingly to the comment on ( ex- ) line 47 should `` go away '' in version 1.0 of Flask . However , if for some reason it must * * not * * be deleted , at least the commented line must be deleted or updated with a better description . - : heavy_check_mark : Tests ran successfuly",2842.0
170,2018-06-20 13:51:00,2018-06-20 12:42:32,Update docs - add command for listing rules .,This PR adds a command to list rules in blueprints documentation . Current documentation not contains this information and it was confusing for users .,2837.0
171,2019-01-07 00:30:12,2018-06-11 17:52:43,Fixes issue # 2824 flask -- version,"Fixes issue [ 2824 ] ( https : //github.com/pallets/flask/issues/2824 ) Now when you run command it shows you the Werkzeug version as well . I changed the order as well to be Python , Flask and Werkzeug as it is shown in the issue template . Let me know if it has to be done in some other way .",2825.0
172,2018-05-31 16:10:18,2018-05-31 03:47:24,Add test for routes command when no routes registered,Add test for # 2752,2811.0
173,2018-05-28 13:57:16,2018-05-28 13:39:53,encode filenames as ascii instead of latin-1,"closes # 2766 This produces the ` filename * ` header more often ( since only ASCII characters are allowed now ) , but is compatible with Gunicorn and any other WSGI servers that are more strict about header encoding .",2804.0
174,2018-06-03 09:39:18,2018-05-22 10:41:34,Update CHANGES.rst,Add the link of pull so that it ’ s easy for readers to check the changes in code .,2795.0
175,2018-05-21 04:28:26,2018-05-21 02:27:12,Fix typos in CHANGES.rst,gevent.wsgi is deprecated since gevent 1.1 and removed in gevent 1.3. gevent.pywsgi should be used instead,2792.0
176,2018-05-17 13:24:22,2018-05-17 12:29:51,AttributeError : 'module ' object has no attribute 'SSLContext ',We 're still using Python 2.7.6 for some projects which causes the exception listed below when trying to execute ` flask run ` . The problem appears to be when the run command executes ` flask.cli._validate_key ` which then checks for Python version 2.7 or above before attempting to access ` ssl.SSLContext ` . The problem with that is that SSLContext was only added in 2.7.9 so the check needs to be more exact by checking for versions 2.7.9 and above . Relevant tests already fail under Python 2.7.6 and have been updated so this patch does n't require any additional tests as far as I can tell . Let me know if that is not the case .,2789.0
177,2019-05-24 21:47:49,2018-05-15 02:17:23,Add Blueprint level cli registration -- # 1357,"So , this tries to address the ability to easily add commands to blueprints , and let them get stacked into the applications cli group in one of three ways . The default is nested , with name taken from the bp name , giving you ` flask user create ` : bp = Blueprint ( 'user ' , __name__ ) bp.cli.command ( 'create ' ) Optionally you can override that grouping name , giving you ` flask librarian create ` : bp = Blueprint ( 'user ' , __name__ , cli_group='librarian ' ) bp.cli.command ( 'create ' ) Or , you can specify ` None ` as the group , which applies it directly to the root app 's cli group giving ` flask add_user ` : bp = Blueprint ( 'user ' , __name__ , cli_group=None ) bp.cli.command ( 'add_user ' ) The tests show each of these options . Let me know your thoughts and I 'll add the documentation changes required if everyone think 's it 's useful to proceed . ` cli_group ` can also be specified when registering on the app : ` app.register_blueprint ( bp , cli_group= '' librarian '' ) ` to override the bp level ` cli_group ` choice . closes # 1357",2784.0
178,2018-05-13 13:18:09,2018-05-12 08:35:41,Remove now obsolete 'audit ' command from Makefile,"When 'audit ' was removed from setup.py , the corresponding shortcut was left in the Makefile . This commit removes the audit shortcut from Makefile . Closes # 2773 .",2774.0
179,2018-06-14 11:31:01,2018-05-08 16:10:09,Add option to not overwrite debug flag in cli,"This is intended for custom CLIs that may load a config file which already sets the debug flag and does not make use of the ` FLASK_ * ` env vars at all . Filed against 1,0-maintenance since this is functionality that was present before and was lost between 0.12 and 1.0 .",2765.0
180,2018-05-09 03:11:48,2018-05-08 16:08:28,docs : installation : Fix `` now you can continue '' link,"At the end of the installation docs we currently point the reader back into the middle of the installation doc itself , which is probably not very helpful to the reader since they just finished reading that . Instead , point to the next section in the docs ( Quickstart ) .",2764.0
181,2019-06-01 12:59:15,2018-05-06 06:13:32,Flask in subpath does n't work as expected,# # # Expected Behavior Flask should work on subpath with proper url generation by ` url_for ` . So url in example below should be : ` /myapp/static/css/bootstrap.min.css ` # # # Environment * Python version : 3.6.4 * Flask version : 1.0.2 * Werkzeug version : 0.14.1,2759.0
182,2018-05-09 03:27:17,2018-05-03 00:11:00,Fixed LaTeX errors on documentation PDF generation,"This PR fixes problems with the generation of the PDF documentation from LaTeX files . First issue was a problematic emoji character in the documentation , which the LaTeX distribution used in the build process did n't understand . The least invasive fix was to replace it with a space . Alternative fixes would be removal of the character causing errors or adapting the build process . Second issue was the missing ` \ifsphinxpdfoutput ` macro . In this case it was only used to check if the output is PDF , which is now handled with an appropriate if statement . Relevant issues : https : //github.com/pallets/flask/issues/2514 https : //github.com/pallets/flask-docs/issues/3",2754.0
183,2018-05-02 13:16:11,2018-05-02 09:10:40,Check whether there are registered routes,Fixed issue # 2751 .,2752.0
184,2018-05-02 13:04:32,2018-05-01 05:39:25,Fix blueprint route for `` '',"1. url_prefix = '/posts' 2. rule = `` Expected result ` /posts ` , instead got ` /posts/ ` .",2748.0
185,2018-04-29 21:57:24,2018-04-29 20:28:47,Update quickstart.rst,- Fixes the syntax error on the quickstart doc by escaping the single quote . - Adds request import and removes duplicated word,2745.0
186,2018-04-28 14:01:43,2018-04-28 13:55:15,"Only trap key errors by default in debug , not all BadRequest errors","closes # 2735 In order to make debugging key errors from ` request.form ` easier , # 2348 trapped ` BadRequest ` errors by default in debug mode . However , this caught * all * ` BadRequest ` errors , not just ` BadRequestKeyError ` . This changes the behavior so ` BadRequestKeyError ` is caught in debug mode , but ` abort ( 400 ) ` still passes through .",2739.0
187,2018-04-27 19:46:38,2018-04-27 19:32:09,merge slashes between blueprint prefix and rule,"closes # 2731 When registering a blueprint , strip ` / ` from the right side of the prefix and the left side of each rule , then join to ensure there 's only one slash . # 2629 only considered the prefix , and only stripped one slash .",2738.0
188,2018-04-27 17:11:42,2018-04-27 09:45:59,Added short note about Werkzeug redirect behaviour,Addresses issue [ # 2601 ] ( https : //github.com/pallets/flask/issues/2601 ) with a short note about Werkzeug redirect behaviour in the documentation . closes # 2601,2729.0
189,2018-04-29 21:27:05,2018-04-26 23:03:09,Use env var to disable loading dotenv,Fix issue : https : //github.com/pallets/flask/issues/2722,2724.0
190,2018-04-26 19:07:02,2018-04-24 15:52:06,Add project_urls so that PyPI will show GitHub stats .,"Current Flask in PyPI : https : //pypi.org/project/Flask/ There is a `` GitHub statistics '' section , that is because the old homepage in setup.py is set to GitHub repo . But now , homepage url is replaced by pallets project page . When releasing a new version to PyPI , that section will go . Warehouse can get the package 's GitHub info from homepage url and project_urls . Let 's add it back .",2720.0
191,2018-04-19 13:57:12,2018-04-19 13:29:16,Minor session serializer fixes .,"A couple of minor fixes for the extensible session serializer added by # 2352 . There were two issues observed : 1 . The example usage of `` register ( ) `` passes and `` index `` to the `` force `` argument . 2 . It is not possible to insert a tag as the penultimate item in the order list . Regarding the latter , ` a.append ( x ) ` is not the same as ` a.insert ( -1 , x ) ` - it is ` a.insert ( len ( a ) , x ) ` . It would be good to get these out before the release of 1.0.0 so that the index default is correct . - [ x ] add tests that fail without the patch - [ x ] ensure all tests pass with `` pytest `` - [ x ] add documentation to the relevant docstrings or pages - [ ] ~~add `` versionadded `` or `` versionchanged `` directives to relevant docstrings~~ - [ ] ~~add a changelog entry if this patch changes code~~ * Not required as the feature is unreleased ? *",2711.0
192,2018-04-18 20:07:37,2018-04-18 20:07:26,backport # 2709 use theme provided by pallets-sphinx-themes,backport # 2790 for 0.12,2710.0
193,2018-04-18 19:13:05,2018-04-18 17:55:26,use theme provided by pallets-sphinx-themes,"[ pallets-sphinx-themes ] ( https : //github.com/pallets/pallets-sphinx-themes ) replaces the flask-docs theme overrides . flask-docs needs to be updated to not override everything for Flask , other projects will transition later . Replaces ` conf.py ` and ` Makefile ` with modern versions . ` conf.py ` is organized a little more cleanly . No longer modifies ` sys.path ` or uses local ` _themes ` directory , it 's all provided by pallets-sphinx-themes entry points . All PyPI links now point to Warehouse .",2709.0
194,2018-04-18 20:45:36,2018-04-18 15:31:00,Add a message ` Serving Flask app ( module `` app.py '' will be lazily loaded ) ` to ` flask run ` related to # 2706,When running ` flask run ` having ` FLASK_DEBUG=1 ` the ` lazy_loader ` options defaults to True and it causes the ` app ` to be loaded only when first request comes causing errors to be raised only to werkzeug debugger ( on browser ) # problem When starting the command ` flask run ` you see ` Serving Flask app .. ` message even if the ` app ` module can not be located because the error will only raise later . It can cause confusion and the false impression that the ` app ` module was successfully found . To be noticed and have it explicitly in logs I added : ` * Serving Flask app `` app.py '' ( lazy loading ) ` to the messages Relates to # 2706,2707.0
195,2018-04-18 15:00:28,2018-04-18 14:45:01,Different app discovery behavior on commands run and shell,"The commands ` run ` and ` shell ` are behaving differently to locate the ` app ` , I can send a PR but first I want to confirm if this is a problem or expected behavior . # # # Expected Behavior Assuming the tree # # # Environment * Python version : 3.6.0 * Flask version : 0.12.2 & 0.13.dev ( master branch ) * Werkzeug version : 0.14.1",2706.0
196,2018-04-12 18:28:50,2018-04-12 18:09:00,add javascript ajax example,"I removed the jQuery example when rewriting the tutorial . This adds a more general JavaScript example back in , demonstrating the same simple ` add ` endpoint but with ` XMLHttpRequest ` , ` fetch ` , and ` jQuery ` .",2699.0
197,2018-04-10 19:58:46,2018-04-10 19:58:00,backport # 2691 detect UTF encodings when loading json,See # 2691 . Closes # 2692 .,2695.0
198,2018-04-10 19:31:52,2018-04-10 19:29:05,backport # 2359 fix python -m import warning,See # 2359 . Closes # 2666 .,2694.0
199,2018-04-10 18:26:16,2018-04-10 18:20:35,add Response.max_cookie_size config,Allow configuring pallets/werkzeug # 1109 in Flask . Add ` MAX_COOKIE_SIZE ` config and ` Response.max_cookie_size ` property to control when Werkzeug warns about large cookies that may be ignored by browsers .,2693.0
200,2018-04-10 16:47:15,2018-04-10 16:38:05,detect UTF encodings when loading json,"` request.get_json ` no longer accepts arbitrary encodings . Incoming JSON must be encoded using a UTF-8 , -16 , or -32 codec . The current JSON spec says UTF-8 is the only valid encoding , although Flask is more forgiving . ` json.detect_encoding ` is added to automatically detect which UTF encoding was used , including BOM and endianness .",2691.0
201,2018-04-09 08:27:26,2018-04-09 08:14:47,document blueprint static folder without prefix,"closes # 348 Documents that blueprint static URL is only accessible if the blueprint has a prefix , otherwise the application static URL takes precedence .",2686.0
202,2018-04-09 07:22:17,2018-04-09 07:13:09,rework context docs,"closes # 1151 Mostly keeps the same sections and concepts . References to old version behavior is removed since it 's no longer relevant . Added more explanation about what to do about `` no app / request context '' errors , since it comes up constantly on Stack Overflow . Added more cross references and cleaned up many API docs as well to make them more consistent . Added documentation for ` _AppCtxGlobals ` rather than recreating it in the ` g ` docs . Added documentation about the ` test_request_context ` arguments . This is an inherently advanced topic , so I do n't think there 's any way to make it completely clear to all readers . Hopefully it 's at least easier to follow to get an idea of how the process works .",2685.0
203,2018-04-09 08:09:04,2018-03-29 20:58:11,rewrite tutorial docs and example,"This is a complete rewrite of the tutorial , both the docs and the example code . The goal is to provide a better foundation for new developers to work with . There 's a bit more code , and it 's a bit more complex , but I 'm hoping it sets up patterns and concepts better so that developers start with better habits . * Use the application factory and blueprints from the start . * Use the instance folder for config and the database . * Multiple users , stored in the database with hashed passwords . * Delete posts . * Build a Wheel file , install it in another virtualenv . * Override ` SECRET_KEY ` using config in the instance folder . * Use other WSGI server in production ( Waitress , since it works on Windows ) . * 100 % test coverage using pytest and coverage . * All described code links to the API docs . * General reorganization . I 've removed all the other examples . I 'm going to add a JavaScript example back in but wanted to rewrite it as well . That will be the next PR . The other examples are all covered by the tutorial now . Added a ` gh ` Sphinx role that adds links to GitHub files . It will select the correct tag on GitHub based on the docs version being built . I 'll expand this to work with issues and extract it to pallets-sphinx-themes at some point . You can find the rendered docs here : http : //flask-dev.davidism.com/tutorial/ . The only change is in the installation instructions , Flask needs to be installed from GitHub since 1.0 is n't released yet . You can find the example project on my branch : https : //github.com/davidism/flask/tree/tutorial/examples/tutorial . closes # 2513",2676.0
204,2018-03-22 19:06:06,2018-03-22 14:41:15,Add tip for dotenv,"Add a tip for installing python-dotenv when there are env files ( .env , .flaskenv )",2668.0
205,2018-04-09 10:00:14,2018-03-19 15:59:20,Fix the bug of cache function in ` get_json ` method .,"The BUG is : The cache object cache the * * value * * for the first call . Then the succedent call get the * * same value * * in the first time , no matter what are the arguments . This PR fixed this BUG Link to https : //github.com/pallets/flask/issues/2651 < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- > BTW : This is my first PR on github . If have any problem in this PR , please tell me in detail . Thx : -）",2665.0
206,2018-04-09 08:37:33,2018-03-18 13:49:41,Add tips for 413 connection reset issue,"When uploading files exceed the limit set by ` MAX_CONTENT_LENGTH ` , the flask development server will reset the connection instead of return a 413 response . This behavior confused a lot of people : - https : //stackoverflow.com/questions/7371660/flask-resets-the-connection-instead-of-returning-a-413-when-the-file-is-to-big - https : //stackoverflow.com/questions/19911106/flask-file-upload-limit - https : //stackoverflow.com/questions/30414696/upload-file-larger-than-max-content-length-in-flask-results-connection-reset",2662.0
207,2018-02-28 16:03:05,2018-02-28 15:56:50,remove old extension docs,* Remove ` flask.ext ` from api docs . * Remove section about ` flaskext_compat.py ` . * No longer need to fall back to ` _request_ctx_stack ` and ` teardown_request ` . * General rewrite of extensions introduction . closes # 2644,2647.0
208,2018-02-28 15:00:16,2018-02-28 14:53:46,do n't use Flask ( __name__ ) in conftest,"Pytest puts all test directories on ` sys.path ` . Flask determines the ` root_path ` by import , so the path of the app in ` tests/conftest.py ` will think the root is ` examples/tutorial/tests/ ` if the example also has a ` conftest.py ` .",2646.0
209,2018-02-24 16:10:26,2018-02-24 16:04:26,rewrite quickstart Unique URLs section,closes # 2632,2637.0
210,2018-02-20 00:14:12,2018-02-19 23:42:59,add test_cli_runner for testing app.cli commands,"Using a regular ` CliRunner ` requires passing a ` ScriptInfo ` instance that knows how to load the app being tested , otherwise ` app.cli ` commands will fail . This adds ` app.test_cli_runner ` , which creates an instance of ` app.test_cli_runner_class ` , which defaults to ` FlaskCliRunner ` . This runner 's ` invoke ` method adds ` obj=ScriptInfo ( create_app=lambda : app ) ` so that invoking commands works as expected . It also sets the command to ` app.cli ` by default , so ` invoke ( args= [ 'my-command ' , ... ] ) ` can invoke commands by name to test that they were actually registered .",2636.0
211,2018-02-23 16:47:21,2018-02-19 20:29:27,Require opt-in for subdomain matching,This fixes # 998 . An argument can be made that this should actually land in Werkzeug instead . Question is if we want a new release for this or not . Can be worked around in Flask for now .,2635.0
212,2018-02-13 01:33:08,2018-02-12 22:32:34,Fix docs for test_request_context,"This corrects the docstring for ` test_request_context ` to say that it returns a ` RequestContext ` , rather than a WSGI environment ; this is in line with the rest of the documentation , as well as the function 's actual behaviour . Fixes # 2627 .",2630.0
213,2018-02-24 00:00:31,2018-02-12 10:56:05,prevent double slash /a//b when blueprint prefix ends with slash,"Simple example file as below : With the old code , there is one rule like this ` < Rule '/a//b/ ' ( HEAD , OPTIONS , GET ) - > ` . With the new code , that rule would be change to ` < Rule '/a/b/ ' ( HEAD , OPTIONS , GET ) - > ` .",2629.0
214,2018-02-08 21:12:26,2018-02-08 20:54:31,update metadata,"* new readme , use it for setup.py long_description * links in changes * revert copyright year to project start , add missing header to files * add travis osx build , optional * build docs separately in travis",2624.0
215,2018-02-06 16:14:10,2018-02-06 16:07:04,bump dependency versions,closes # 2586,2622.0
216,2018-01-29 02:56:46,2018-01-29 02:49:48,document testing cli commands,closes # 2511,2611.0
217,2018-01-28 22:48:39,2018-01-28 22:44:29,add note about syntax errors in custom scripts,"closes # 2424 If you use a custom entry point and introduce a module-level error , the reloader ca n't recover . Mention this as a reason to use the ` flask ` command . Unrelated , mention which version of PyCharm adds Flask support .",2610.0
218,2018-01-23 23:20:16,2018-01-23 14:02:31,Added support for cookie SameSite attribute,"New Feature : Support for the cookie 's SameSite attribute . Support for cookie 's SameSite attribute was lately added to Werkzeug 0.14.0. , so implementing this feature in Flask . simply set the SESSION_COOKIE_SAMESITE to `` Strict '' or `` Lax '' , and your cookie will have the SameSite attribute set . Please check https : //www.owasp.org/index.php/SameSite for more info .",2607.0
219,2018-01-23 18:09:43,2018-01-22 20:22:28,add HTTPS support for flask run command,closes # 2594 Preferred use case is to manually generate a cert and key and pass them . An interesting config is using ` .flaskenv ` and setting ` FLASK_RUN_CERT ` and ` FLASK_RUN_KEY ` instead of passing them in the command line .,2606.0
220,2018-01-23 23:39:43,2018-01-22 03:10:48,Update cli help for FLASK_ENV,This PR replace FLASK_DEBUG with FLASK_ENV in command and change the cli help string .,2603.0
221,2018-01-10 23:46:43,2018-01-10 23:43:01,clean up FLASK_ENV docs,# # # Expected Behaviour I expect to be able to pass the ` flask run ` command any of the options which are valid for the ` Flask.run ( ) ` method : # # # Environment * Python version : 3.5.2 * Flask version : 0.12.2 * Werkzeug version : 0.12.2,2593.0
222,2018-01-10 22:02:00,2018-01-10 21:57:34,reset standard os env after each test,"Uses monkeypatch to unset env vars for the test session , and also reset them after each test in case they were changed without cleanup . This does n't affect Travis , but local tests will now pass if you happen to have a var set or a ` .flaskenv ` file . closes # 2589",2592.0
223,2018-01-10 20:14:45,2018-01-10 20:08:38,match run command behavior in app.run,output extra server information handle env var changed by load_dotenv enable threading by default closes # 2590,2591.0
224,2018-01-06 09:49:51,2018-01-06 09:36:34,Remove python 2.6 and 3.3 everywhere .,Remove the classifier for 2.6 and 3.3 . Cleanup related 2.6 and 3.3 information everywhere . Related issues : 1 . # 2555 2. pallets/meta # 24,2583.0
225,2018-01-06 09:49:02,2018-01-06 09:24:12,cleanup werkzeug import,Flask now requires werkzeug > = 0.9 . There is no need to try import these werkzeug modules .,2582.0
226,2018-01-05 15:55:41,2018-01-05 15:45:39,silence ENOTDIR when loading config file,closes # 2545,2581.0
227,2018-01-04 21:04:30,2018-01-04 20:58:36,improve documentation for session attributes,closes # 2545,2580.0
228,2018-01-06 16:07:57,2017-12-25 19:50:33,Add Support for FLASK_ENV,This PR introduces ` FLASK_ENV ` which should mirror the conventions from node as much as possible . The idea here is that we no longer try to map the development mode from the production mode by the ` DEBUG ` setting . This is intended because we want users to be able to are in a non debug development mode . The docs are updated to largely refer to ` FLASK_ENV ` only . One change to node is that we default to production instead of defaulting to development . This is done because most people will not set the environment and we do not want users to accidentally have debug features on . This refs # 2569,2570.0
229,2018-01-04 17:39:48,2017-12-20 12:52:25,Docs : Update CLI for factory pattern,"Since we have implemented application discover , there is no need to create an application instance manually for ` flask run ` . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",2565.0
230,2017-12-17 21:11:53,2017-12-16 17:47:01,Better appveyor config,Make appveyor configuration cleaner .,2559.0
231,2018-01-05 21:32:58,2017-12-16 15:19:46,add appveyor configuration,Make appveyor configuration cleaner .,2558.0
232,2017-12-16 14:13:55,2017-12-15 03:45:42,Fix sentry raven install docs,The documentation for installing Sentry 's raven client was incorrect . It should state that the client must be installed with the extra flask dependencies as mentioned in getsentry/raven-python # 1075,2556.0
233,2017-12-16 15:06:55,2017-12-14 21:08:08,remove tests and docs for python 2.6 and 3.3,"pallets/meta # 24 I 'll test 2.6 and 3.3 before I release 1.0 , which will be the last version to support these .",2555.0
234,2017-12-14 20:21:35,2017-12-14 07:04:17,fix non-passing tests for logging on pytest > = 3.3.0,"This fixes issue # 2550 , where some tests fail when using newer pytest ( after version 3.2.5 ) . The reason for this issue is that pytest added a plugin that instantiates a handler for the logging module , while the tests were expecting no handlers . The PR solves the issue by temporarily disabling the logging module and removing any handlers for all tests on the file",2554.0
235,2018-01-04 20:56:38,2017-12-03 07:50:18,update pycharm instructions,Update Pycharm instructions to run via module name # 2535,2541.0
236,2017-12-16 15:08:32,2017-12-01 08:12:48,Docs : update built-in server description,Update documentation for # 2529 .,2536.0
237,2018-01-28 19:27:07,2017-11-24 23:06:26,Improved bad factory error handling,This does some bad string parsing to not accidentally silence other errors ( Probably not ideal but that 's the best I can come up with ),2530.0
238,2017-10-25 11:09:42,2017-10-25 05:59:57,Remove IRC notifications from Travis CI,"Fixes # 2481 . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",2504.0
239,2017-10-30 20:48:29,2017-10-19 19:47:53,Improvements in the final sections of appfactories.rst,"This fixes a self-reported issue . The final sections of ` appfactories.rst ` stood out to me while I was going through the docs . Made some minor changes to sentences so that they flow better . The punctuation is also more consistent now ( in the final list ) . With regards to : > The following changes are straightforward and possible : '' possible '' was removed because it felt like it was implied in the context ( why suggest them if they 're not possible ? ) . I did not get the same feeling about the implementation part , so I added an explicit `` to implement '' ( because that 's what the straightforwardness refers to ) .",2500.0
240,2017-10-11 14:03:33,2017-10-11 13:55:52,Fixed grammar/typos,Remove extra parenthesis from RequestFormatter constructor .,2491.0
241,2017-10-10 18:59:29,2017-10-10 18:21:24,Rewrite CLI errors and docs,"Reword the CLI loader errors to use current examples and try to describe the issues more accurately . Refactor the loader code . Entirely rewrite the CLI docs . Wording is tightened up , sections are reorganized . Section about app detection quickly explains basics and shows typical values , then explains full rules . closes # 2027",2490.0
242,2017-09-12 10:55:41,2017-09-12 04:37:03,[ ImgBot ] optimizes images,"Hey there . I 've just optimized all of your images . They are the same dimensions and quality as before , only they take up less space now . \docs\_static\no.png ( 18.3 % ) ) \docs\_static\touch-icon.png ( 64.21 % ) ) \docs\_static\flaskr.png ( 8.32 % ) ) \docs\_static\pycharm-runconfig.png ( 14.65 % ) ) \docs\_static\debugger.png ( 2.79 % ) ) \docs\_static\flask.png ( 30.15 % ) ) \docs\_static\yes.png ( 13 % ) ) \docs\_static\logo-full.png ( 29.33 % ) ) Describe what this patch does to fix the issue . Link to any relevant issues or pull requests . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",2470.0
243,2017-10-07 17:52:45,2017-09-07 04:31:47,Add additional information in the url_rule docs,"Small doc change because it is not documented anywhere else and may be confusing . If a user is making use of the ` @ errorhandler ( 405 ) ` decorator , and they wish to include an Allow header ( as per HTTP spec ) , they may be confused to find that url_rule is None ( when they were attempting to get the allowed methods ) . While an experienced Flask user knows why this wo n't work , it may be unclear to a new user who is attempting to conform to HTTP . This doc change aims to clarify that : because the request was never successfully matched , it was never bound to a URL rule . In order to access the valid methods , they must examine ` routing_exception ` instead . Doc change only , no uncommented code is affected .",2467.0
244,2017-10-09 15:18:35,2017-08-19 03:46:06,Blueprint view function name should not contain dots,"I want to use ` before_request ` function to my ` blueprint ` . here is my usecase : I know my view function endpoint name is not normative . I think Blueprint endpoints should not contain dots . view function name can instead endpoint when endpoint is none , so view function name should not contain dots either . sorry for my bad English . I 'm shame it !",2450.0
245,2017-08-14 06:01:11,2017-08-11 05:13:44,Add version warning to Flaskr tutorial,"Adds a warning to the Flaskr tutorial to tell folks looking at a specific version of the docs , to be sure to check out the same tag in the repository , otherwise the tutorial may be different than the example . Issues with docs/code version mismatches reported in https : //github.com/pallets/flask/issues/2437 and https : //github.com/pallets/flask/issues/1902",2445.0
246,2017-08-14 06:01:46,2017-08-06 00:07:36,corrected indentations for pypi description,corrected wrong indentations in 'And Easy to Setup ' section 's paragraph .,2442.0
247,2017-07-31 20:23:45,2017-07-28 22:14:05,Simplify logging,"Based on discussion in # 2023 and # 641 , Flask interferes too much with logging . This patch greatly reduces the logging configuration that Flask does . * Remove ` LOGGER_NAME ` and ` LOGGER_HANDLER_POLICY ` configuration . * ` app.logger ` is always named ` 'flask.app ' ` . Use the ` 'flask ' ` namespace to allow other logging from Flask in the future . * Do n't use a ` Logger ` subclass to override ` getEffectiveLevel ` . Call ` setLevel ` when the logger is first accessed , based on ` app.debug ` , instead of checking ` debug ` for every message . * Only one handler with one format is added , instead of different formats for production and development . * A handler is only added if there are no handlers configured that would handle the logger 's ` getEffectiveLevel ` . * Handlers are never removed . * The ` default_handler ` is accessible so that it can be passed to ` removeHandler ` in case the user wants to get rid of the default handler after it is configured . * The proxy stream to ` environ [ 'wsgi.errors ' ] ` is exposed as ` wsgi_errors_stream ` , in case the user wants to use it in their own configuration . * Logging documentation is split from error handling documentation and reorganized to address the key concepts . * Added documentation for injecting request information into messages . * Logging tests are split into a separate module . * Some previously miscategorized tests are correctly organized .",2436.0
248,2017-07-29 20:09:17,2017-07-27 11:56:15,make_test_environ_builder : use url_scheme from path if provided,When providing https url in path ( `` https : //example.com/ '' ) we hope that we will get https scheme in environment,2430.0
249,2017-07-16 20:55:19,2017-07-15 05:51:09,Add .env support,"If installed , [ python-dotenv ] ( https : //github.com/theskumar/python-dotenv # readme ) is used to load environment variables from ` .env ` and ` .flaskenv ` files . Manual vars override ` .env ` , which overrides ` .flaskenv ` . ` .flaskenv ` is intended for public vars , ` .env ` is intended for private vars that wo n't be committed to the repository . The working directory is set to the location of the files , with the assumption that they are in the top level of the project , to facilitate local package imports ( # 2383 ) . The files are only loaded when calling the ` flask ` command or ` app.run ` , and can be disabled by passing ` load_dotenv=False ` to a custom ` FlaskGroup ` or ` app.run ` . If a user wants to load dotenv files in production , they can call ` flask.cli.load_dotenv ` manually from a ` wsgi.py ` file . Closes # 2375 Based off # 2164 -- - Example , assuming python-dotenv is installed : ` flaskr/app.py ` :",2416.0
250,2017-07-15 02:59:51,2017-07-15 02:52:04,FLASK_APP does n't require .py extension for local packages,"This drops the requirement where ` FLASK_APP ` had to point to a ` .py ` file for packages that were not installed in develop mode . If the file is not importable , it will fail later in the loading process . Also adds some more tests for the loading mechanism and refactors the tests with ` pytest.mark.parametrize ` . Closes # 2377",2414.0
251,2017-07-13 15:42:54,2017-07-13 15:15:21,support passing environ to test client,"This allows passing an ` EnvironBuilder ` or ` dict ` as the only argument to ` flask.testing.FlaskClient.open ` , similar to ` werkzeug.test.Client.open ` . Since ` FlaskClient ` does some other configuration for the environ , this makes sure that a passed environ is copied and modified appropriately . closes # 2411",2412.0
252,2017-07-10 14:20:01,2017-07-08 00:50:56,Clarify docs and tests for exception handling in Flask.teardown_appcontext ( ),I had asked to clarify the behavior for in the IRC channel on [ 2017-07-01 ] ( https : //botbot.me/freenode/pocoo/2017-07-01/ ? tz=America/Los_Angeles ) and [ 2017-07-03 ] ( https : //botbot.me/freenode/pocoo/2017-07-03/ ? tz=America/Los_Angeles ) but did not get a reply . So I 've updated the documentation and regression tests to prove and clarify that [ Flask.teardown_appcontext ( ) ] ( http : //flask.pocoo.org/docs/0.11/api/ # flask.Flask.errorhandler ) only receives * * unhandled * * exceptions . - [ x ] Added tests that fail without the patch - [ x ] Ensured all tests pass with `` pytest `` - [ x ] Added documentation to the relevant docstrings or pages Since the application code was _not_ modified : * No `` versionadded `` or `` versionchanged `` directives were added * No changelog entry was added,2409.0
253,2017-06-28 15:00:09,2017-06-28 15:00:04,clean up secret key docs,consistent key across docs and examples set test key in conftest,2399.0
254,2017-06-27 14:50:21,2017-06-27 14:29:56,fix variable substitution in error message,@ davidism looks like you 've made a small mistake in how the module variable is replaced in the error message when you edited my commit from a few days ago . This should address it .,2398.0
255,2017-06-26 16:47:37,2017-06-26 16:39:48,Un-deprecate Request.json,"After much discussion in # 1421 , I was not convinced there was a direct need to deprecate ` Request.json ` . It 's existence is consistent with other parts of the API and it does not interfere with other properties . Note that it still may be deprecated in the future if a need arises , but that 's not now .",2397.0
256,2017-06-26 16:23:07,2017-06-26 16:23:01,Remove old 0.7 upgrade script,# 2385,2396.0
257,2017-06-26 16:18:21,2017-06-26 15:54:37,Remove deprecated flask.ext,"` flask.ext ` was deprecated a year ago when 0.12 was released . We 've contacted as many extensions as possible to fix docs and examples , I update Stack Overflow questions as I come across them , and most new questions do not use the old form . It 's safe to remove at this point and should not be present in 1.0 . # 2385",2395.0
258,2017-06-26 15:29:43,2017-06-26 15:09:08,Remove deprecated code,* ` Flask.error_handlers ` * ` Flask.static_path ` * ` Request.module ` # 2385,2394.0
259,2017-06-26 14:35:20,2017-06-26 09:04:51,Remove deprecated code from app.py,Refs issue # 2385 - Removed deprecated ` init_jinja_globals ` method - Removed deprecated ` _get_request_globals_class ` and ` _set_request_globals_class `,2393.0
260,2017-06-16 14:00:27,2017-06-15 19:01:32,Import app from wsgi.py or app.py if FLASK_APP is not defined,Fixes # 2376 This patch adds support for looking for the Flask app instance in ` wsgi.py ` or ` app.py ` modules ( in that order ) when ` FLASK_APP ` is not defined .,2378.0
261,2017-06-15 01:42:15,2017-06-14 19:39:26,Correctly JSON-encode datetimes aware of non-UTC timezones,"http_date ( ) requires timetuple in UTC , but JSONEncoder.default ( ) was passing a local timetuple instead . This fixes # 2372 . < ! -- Commit checklist : * add tests that fail without the patch * ensure all tests pass with `` pytest `` * add documentation to the relevant docstrings or pages * add `` versionadded `` or `` versionchanged `` directives to relevant docstrings * add a changelog entry if this patch changes code Tests , coverage , and docs will be run automatically when you submit the pull request , but running them yourself can save time . -- >",2374.0
262,2017-06-14 19:56:43,2017-06-14 19:17:48,Reconfigure app when debug is set by run command,"` app.jinja_env ` is a property that creates the environment on first access . If ` app.debug ` is not configured explicitly before accessing ` app.jinja_env ` , ` env.auto_reload ` will be calculated as ` False ` . The ` run ` command 's ` debug ` flag can change the app 's debug flag , at which point ` auto_reload ` needs to be reconfigured . This extracts the logic for ` auto_reload ` to ` Flask.templates_auto_reload ` . It adds a new method to be called by ` app.run ` or ` ScriptInfo.load_app ` that will reconfigure the app if ` debug ` is set by the command . continues # 1910 closes # 1907",2373.0
263,2017-06-15 01:42:15,2017-06-14 18:11:04,JSONEncoder encodes aware datetime objects in non-UTC timezone incorrectly as being in GMT .,"`` flask.json.JSONEncoder ( ) `` encodes aware datetime objects in non-UTC timezone incorrectly using local time tuple with GMT . # # # Expected Behavior The following code segment should print `` `` Sun , 01 Jan 2017 20:34:56 GMT '' `` ( 12:34:56 PST8PDT is 20:34:56 GMT ) : # # # Actual Behavior The preceding code segment prints `` `` Sun , 01 Jan 2017 12:34:56 GMT '' `` instead , that is , local timetuple ( ) appended with GMT . # # # Environment * Python version : 3.5.3 * Flask version : 0.12.2 * Werkzeug version : 0.12.2",2372.0
264,2017-06-14 14:41:44,2017-06-14 14:18:26,document ` Flask.register_blueprint ` arguments,closes # 1809,2371.0
265,2017-06-09 17:30:32,2017-06-09 14:22:52,Add basic how-to on using envvars for config,Addresses issue # 2329 -- adds basic how-to on configuring a Flask application using environmental variables .,2366.0
266,2017-06-06 16:22:50,2017-06-06 16:22:43,mention csp for javascript : uri xss,closes # 2174,2364.0
267,2017-06-06 14:52:56,2017-06-06 14:52:41,document inherited attributes for Flask and Blueprint,Sphinx autodoc ` : inherited-members : ` does n't include attributes . The only solution is to duplicate the ` _PackageBoundObject ` attributes and their docs in the ` Flask ` and ` Blueprint ` classes . The duplicated attributes can be removed once sphinx-doc/sphinx # 741 is fixed . closes # 480,2363.0
268,2017-06-05 13:34:50,2017-06-05 13:26:59,Remove error handler cache,"Caching handlers for the exception MRO caused issues with some inheritance setups . I do n't expect hierarchies to be deep enough for this to affect most cases , but if performance is an issues handlers should be explicitly registered for each class they apply to . closes # 2267 , closes # 1433",2362.0
269,2017-06-04 19:38:34,2017-06-04 19:31:53,Be smarter about adding `` .cli '' to reloader command,"` python -m flask.cli ` raises an import warning on > 2.6 . It 's only needed on 2.6 , ` python -m flask ` works otherwise . closes # 2357",2359.0
270,2017-06-04 19:02:41,2017-06-04 18:55:06,JSON support for test client and Response,"Continues # 1984 . * ` json ` argument to test client request methods serializes data as JSON and sets content type . * Extract request JSON methods to mixin , apply to Response .",2358.0
271,2017-06-03 19:26:15,2017-06-02 18:16:30,Only open session if request does not have open session,"When using ` stream_with_context ` , a new session was being opened based on the original request data . If the view containing the generator had modified the session , those changes were not visible . This does not enable modifying the session in the generator , as the headers will have already been sent . ( Possibly does not apply to server-side sessions , but you would still need to manually save the session in the generator . ) Closes # 1348 .",2354.0
272,2017-06-02 17:23:52,2017-06-02 16:08:37,Clarify documentation for json parsing,Documentation does not currently mention that is_json accepts mimetypes that are not strictly application/json .,2353.0
273,2017-06-02 17:07:57,2017-06-02 06:12:33,Make session serializer extensible,"Continues # 1452 . Refactors ` flask.session.TaggedJSONSerializer ` to a new ` flask.json.tag ` module . Creates a ` JSONTag ` interface and a ` TaggedJSONSerializer.register ` method to register new tags . ~~~python from flask.json.tag import JSONTag class TagOrderedDict ( JSONTag ) : __slots__ = ( 'serializer ' , ) key = ' od' def check ( self , value ) : return isinstance ( value , OrderedDict ) def to_json ( self , value ) : return [ [ k , self.serializer.tag ( v ) ] for k , v in iteritems ( value ) ] def to_python ( self , value ) : return OrderedDict ( value ) app.session_interface.serializer.register ( TagOrderedDict , 0 ) ~~~ Since ` register ` takes an index , it can be used to override existing tags ( although it would be slightly more efficient to subclass ` TaggedJSONSerializer ` instead ) . This can address # 1908 by adding a higher-priority ` dict ` serializer that uses a different format to support non-string keys . Closes # 1438 , # 1511 , # 1908 . ~Still needs : ~ - [ x ] refactor to move the ` serializer ` argument to ` self.serializer ` instead . It was an attempt at optimization but did n't change anything . - [ x ] refactor ` TagDict ` to split the logic between addressing # 1511 and regular dict passthrough , as # 1452 originally did . This was another optimization attempt that did n't help , it just made the code more confusing . - [ x ] more tests - [ x ] documentation",2352.0
274,2017-06-01 04:04:21,2017-06-01 01:09:53,show nice message when registering error handler for unknown code,"When registering an error handler for a code that 's not registered in ` werkzeug.exceptions ` , a ` KeyError ` is raised . This changes the error to show a helpful `` use a HTTPException subclass '' as well . Documentation is updated to describe this behavior and other clean up . The supported pattern for unknown codes is : ~~~python class UnknownError ( HTTPException ) : code = 999 description = `` A very large error occurred . '' app.register_error_handler ( UnknownError , handle_999 ) raise UnknownError ~~~ If a standard code does not work , submit a patch to add it to Werkzeug . closes # 1837",2350.0
275,2017-05-30 02:53:19,2017-05-30 02:11:10,make debugging bad key errors easier,"* ` TRAP_BAD_REQUEST_ERRORS ` is enabled by default in debug mode * ` BadRequestKeyError ` has the key in the description in debug mode If ` app.debug ` is true but we 're not running in the interactive debugger , this now raises a 500 error ( the traceback in the console has the key error though ) . Can get the old behavior by setting ` TRAP_BAD_REQUEST_ERRORS = False ` . This error is one of the most recurring questions about Flask on Stack Overflow . Making the error visible will hopefully answer a lot of questions before they 're asked . closes # 382",2348.0
276,2017-05-29 20:42:07,2017-05-29 20:35:44,deprecate app session methods in favor of session_interface,"` Flask.save_session ` , ` open_ ` , and ` make_null_ ` are deprecated in favor of using a custom ` session_interface ` . Their docs already recommended doing that . Marked as deprecated in 1.0 , removed in 1.1. ref # 1182",2347.0
277,2017-05-29 17:16:29,2017-05-29 17:10:30,use existing response.vary property to set vary header,closes # 2345,2346.0
278,2017-05-28 21:17:57,2017-05-28 21:12:27,APPLICATION_ROOT defaults to '/ ',"All places that use ` APPLICATION_ROOT ` were using the pattern ` app.config.get ( 'APPLICATION_ROOT ' ) or '/ ' ` . This sets the default config to ` '/ ' ` to simplify things , since it was the implicit default and did n't do anything special if it was n't set .",2344.0
279,2017-05-28 17:42:17,2017-05-28 17:29:14,update development resources,"* fix tox to test examples again 😞 * add detox env for faster testing , ` tox -e detox ` , although sometimes there are weird failures that work fine with plain ` tox ` * clean up makefile , add tox target * add extra group for installing dev requirements , ` pip install -e `` . [ dev ] '' * clean up contributing doc , build with docs * expand issue template * add pull request template",2343.0
280,2017-05-28 01:09:35,2017-05-27 22:03:42,# 2341 : Accept default argument value when args lenght equal 1,Fix issue https : //github.com/pallets/flask/issues/2341,2342.0
281,2017-05-28 01:10:08,2017-05-27 21:36:21,"If FLASK_APP accept one argument and I do not send it , the default value is not correct , instead I get a ScriptInfo object .","An example is in the Flickr app [ link here ] ( https : //github.com/pallets/flask/blob/master/examples/flaskr/flaskr/factory.py # L19 ) As a newcomer it is confusing when I follow the [ README.md ] ( https : //github.com/pallets/flask/blob/master/examples/flaskr/README # L24 ) , but the when running the app it results in the following error . ! [ image ] ( https : //cloud.githubusercontent.com/assets/11146130/26524504/51b31274-4302-11e7-8dd6-21426b08bbbf.png )",2341.0
282,2017-05-27 17:52:46,2017-05-27 17:44:23,Reduce ci matrix,"An example is in the Flickr app [ link here ] ( https : //github.com/pallets/flask/blob/master/examples/flaskr/flaskr/factory.py # L19 ) As a newcomer it is confusing when I follow the [ README.md ] ( https : //github.com/pallets/flask/blob/master/examples/flaskr/README # L24 ) , but the when running the app it results in the following error . ! [ image ] ( https : //cloud.githubusercontent.com/assets/11146130/26524504/51b31274-4302-11e7-8dd6-21426b08bbbf.png )",2340.0
283,2017-05-26 13:17:41,2017-05-26 13:17:16,cleanup # 2326,https : //blog.travis-ci.com/2017-05-11-introducing-build-stages,2338.0
284,2017-05-25 16:52:47,2017-05-25 01:54:12,PyCharm Run Configuration Guide,"A guide showing how to get the ` flask run ` cli functionality directly within PyCharm -- addresses issue # 2198 . Even when PyCharm implements smoother integration , we 're probably still going to need a variation of this to address factories/etc .",2332.0
285,2017-05-24 22:57:57,2017-05-24 22:45:32,"Reduce test envs , add coverage reports , other test fixups","* reduce number of tox and travis envs , was taking way too long to run ( ~50 minutes ) * bump minimum werkzeug version to fix tests . I do n't find this particularly controversial , but someone else can bump it back down if 0.9 from 2013 is too recent . * use archive packages from github for devel , cloning was taking too long * cache pip pacakges on travis * collect branch coverage * collect coverage of test code * report coverage across envs * test building docs , do n't linktest by default * enable codecov integration",2331.0
286,2017-05-25 00:00:20,2017-05-24 20:56:13,Minor edits to tutorial for clarity .,Minor edits/formatting/add links in 8 files in the Flaskr tutorial pages . Intended to aid newbies to follow .,2330.0
287,2017-05-25 21:57:18,2017-05-24 00:15:20,Handle app factory with arguments in FLASK_APP,# 2264,2326.0
288,2017-05-25 00:27:36,2017-05-24 00:05:10,More DRYing up the test suite,I have found more spots in the test suite that could have been `` DRYed '' up .,2325.0
289,2017-05-24 00:31:45,2017-05-23 23:53:24,Fix for Issue 2313 - refactoring gevent tests into class,I have found more spots in the test suite that could have been `` DRYed '' up .,2324.0
290,2017-05-24 00:14:58,2017-05-23 23:43:54,Cleanup test_blueprint.py to use test fixtures,Modify several tests to use the app and client test fixtures .,2323.0
291,2017-05-25 17:46:46,2017-05-23 23:41:58,Do n't overwrite Vary header when setting for cookie access,Closes # 2317,2322.0
292,2017-05-24 00:14:23,2017-05-23 23:27:47,Add test for Blueprint app-wide url processing,"The test add coverage for methods : ` Blueprint.app_url_defaults ` , and ` Blueprint.app_url_preprocessing ` . This PR increases the coverage of blueprint module by 2 % .",2321.0
293,2017-05-23 23:20:59,2017-05-23 22:32:41,Update click dependency info .,"Flask requires click > = 4.0 , not 2.0 as ` click.echo ` does n't have ` color ` argument in 2.0 See https : //lgtm.com/projects/g/pallets/flask/snapshot/d8cd0c47028efe0b0efe052bccc8bd52de87be7c/files/flask/cli.py # L163",2320.0
294,2017-05-23 23:24:30,2017-05-23 20:53:45,Support ` create_app ` without script_info or with script_info as named argument,# 2266,2319.0
295,2017-05-23 20:31:56,2017-05-23 20:25:05,Fix a small oversight in the testing docs,The ` request ` fixture is not needed anymore .,2318.0
296,2017-05-25 17:46:46,2017-05-23 19:08:12,Do n't overwrite Vary header when setting for cookie access,"If the ` Vary ` header is already set , the current session code just adds another header line . What it should do is update the existing header by splitting , adding the new option to the set , joining , and setting the new value . See Django 's [ ` patch_vary_headers ` ] ( https : //github.com/django/django/blob/1ce04bcce0076360623ae164afd3541a5c031af2/django/contrib/sessions/middleware.py # L45 ) . Related to # 2288",2317.0
297,2017-05-23 19:46:31,2017-05-23 18:52:53,Adds provide_automatic_options to Class-based Views,"If the ` Vary ` header is already set , the current session code just adds another header line . What it should do is update the existing header by splitting , adding the new option to the set , joining , and setting the new value . See Django 's [ ` patch_vary_headers ` ] ( https : //github.com/django/django/blob/1ce04bcce0076360623ae164afd3541a5c031af2/django/contrib/sessions/middleware.py # L45 ) . Related to # 2288",2316.0
298,2017-05-23 22:33:59,2017-05-23 18:35:43,Added documentation for PowerShell environment variables,"This is just a small addition to the documentation , closing # 2281 . I included a dummy path in order to fit the appearance of the Windows CLI prompts .",2315.0
299,2017-05-23 18:51:17,2017-05-23 17:42:18,Added support for generic HTTPException handlers on app and blueprints,"Resolves issue # 941 , replaces pr # 2082 and # 2144 , code based on # 2144 , tangentially related to # 1383 Error handlers are now returned in order of blueprint : code , app : code , blueprint : HTTPException , app : HTTPException , None Corresponding tests also added . Resubmit of # 2304",2314.0
300,2017-05-23 19:00:35,2017-05-23 16:37:45,Use the yield syntax in pytest 's fixtures,"Hi , Pytest 's documentation recommends the use of the yield syntax over teardown functions . I did not modify the flaskr example as it is being handled by # 2307 . Also , I 'm not familiar enough with Flask 's tests to refactor the last two uses of ` request.addfinalizer ` : - [ tests/conftest.py # L126 ] ( https : //github.com/pallets/flask/blob/master/tests/conftest.py # L126 ) - [ tests/test_instance_config.py # L131 ] ( https : //github.com/pallets/flask/blob/master/tests/test_instance_config.py # L131 )",2311.0
301,2017-05-25 21:44:24,2017-05-23 03:54:19,Add http headers security notes,Add notes about the following http headers and protocols : - SSL/HTTPS - Security Headers - Content Security Policy ( CSP ) - HTTP Strict Transport Security ( HSTS ) - X-FRAME-OPTIONS ( Clickjacking protection ) - X-Content-Type-Options - Cookie options - HTTP Public Key Pinning ( HPKP ),2309.0
302,2017-05-23 18:50:31,2017-05-23 00:46:44,For Issue # 2286 : Update unittest references,"These changes look to replace references to ` unittest ` in the documentation with ` pytest ` . In particular , for ` docs/testing.rst ` , code examples have been updated to reflect the current state of ` test_flaskr.py ` : https : //github.com/pallets/flask/blob/master/examples/flaskr/tests/test_flaskr.py",2307.0
303,2017-05-23 22:18:40,2017-05-23 00:32:30,DRYing up the test suite using pytest fixtures,Using pytest fixtures for test cases . Resolves # 2287,2306.0
304,2017-05-23 18:19:58,2017-05-23 00:07:52,Updating contributing rst,Using pytest fixtures for test cases . Resolves # 2287,2305.0
305,2017-05-23 15:34:23,2017-05-22 23:20:02,Added tests for make_response and get_debug_flag to improve coverage of helpers.py,"Got less coverage improvement than I was hoping , but it did get a bit more .",2303.0
306,2017-05-23 01:08:41,2017-05-22 23:20:00,Added uWSGI and example usage to stand-alone WSGI containers documentation,Talked with @ davidism and decided to add section for uWSGI HTTP router / server via embedded mode .,2302.0
307,2017-05-23 01:06:31,2017-05-22 22:58:12,Add coverage for Blueprint request process methods,"Add test to cover following methodss to the ` Blueprint ` object : ` before_request ` , ` after_request ` , ` before_app_request ` , ` before_app_first_request ` , ` after_app_request ` . This PR increases the coverage of flask.blueprints by 6 % .",2301.0
308,2017-05-22 22:29:47,2017-05-22 21:36:28,Add coverage for Blueprint.add_app_template_global,"This tests the ` Blueprint.add_app_template_global ` mothod , which internally calls the ` Blueprint.app_template_global ` method . The methods are used to registering a function to the jinja template environment . This PR increases the test coverage for module ` flask.blueprint ` by 4 % .",2299.0
309,2017-05-22 21:02:00,2017-05-22 20:18:11,Add coverage for Blueprints . ( app_ ) context_processor,Test both context_processor and app_context_processor functions . Two context parameters are added into the context : one added to the blueprint locally ; another added to the app globally . The test asserts the behaviors in both blueprint scope and the app scope . The coverage for flask.blueprints is increased by 3 % .,2298.0
310,2017-05-22 23:13:28,2017-05-22 19:35:25,Auto-detect create_app ( ) in find_best_app ( ) # 2265,Resubmit for # 2265 ( git issues ),2297.0
311,2017-05-22 19:28:06,2017-05-22 19:22:00,Added reference and link to Werkzeug debugger documentation,Resubmit for # 2265 ( git issues ),2296.0
312,2017-05-22 19:30:52,2017-05-22 19:01:07,Add coverage for Blueprint.app_errorhandler,This test case registers an application-wise error handler from a Blueprint . Verifies the error handler by aborting the flask app from the application itself as well as from another registered Blueprint .,2295.0
313,2017-05-22 18:43:58,2017-05-22 18:29:33,Debug mode 2261,# 2261,2293.0
314,2017-05-20 20:45:49,2017-05-20 19:16:04,Set `` Vary : Cookie '' header when session is accessed,"Based on [ Django 's behavior ] ( https : //github.com/django/django/blob/1ce04bcce0076360623ae164afd3541a5c031af2/django/contrib/sessions/middleware.py # L45 ) , order is delete cookie if empty , append vary header if accessed , set cookie if modified . continues # 1026",2288.0
315,2017-05-23 18:53:39,2017-05-19 18:51:30,Rewrite the testing docs,The testing docs still talk about unittest . We need to update these with modern patterns using PyTest and fixtures .,2286.0
316,2017-05-16 00:11:35,2017-05-16 00:00:08,safe_join on Windows uses posixpath,"Python on Windows supports mixed ` / ` and ` \ ` separators , so this does n't break anything . ` / ` is already assumed to be the safe separator anyway . fixes # 2033 , closes # 2059",2284.0
317,2017-05-14 05:13:54,2017-05-14 05:00:23,Refactor session cookie domain,"* Show a warning when the domain is dropped because the domain does not contain a ` . ` , for example for ` localhost ` . * Show a warning when the domain is an IP address . * Allow IP addresses in Chrome by not prepending ` . ` . * Cache result of ` SERVER_NAME ` detection in ` SESSION_COOKIE_DOMAIN ` so it wo n't run every request ( at least within a given process ) . Continues # 2105 .",2282.0
318,2017-05-12 05:50:29,2017-05-12 05:50:22,Clean up deferred callback doc,"Remove doc about writing ` after_this_request ` , following up on # 1965 .",2279.0
319,2017-05-11 21:37:32,2017-05-11 21:35:36,Rewrite installation docs,"Remove doc about writing ` after_this_request ` , following up on # 1965 .",2278.0
320,2017-05-12 05:32:01,2017-05-11 05:55:30,Improve quickstart 's Routing section,"Hi , I 'm a tech writer and I edited a portion of the quickstart as a homework assignment . Maybe you 'll find some of these edits useful . I 'm happy to adjust/correct my changes . Changes : - Edited the entire section for clarity and concision . I rewrote sentences to make them shorter and easier to understand . - Added a code sample to show the path converter type - Removed the HTTP method overview . Although it was well written , the overview was n't necessary in the quickstart . Readers can easily find an overview elsewhere .",2277.0
321,2017-05-05 01:42:34,2017-05-05 01:30:53,Collapse old changelog directives,"I created a Sphinx extension , [ sphinxcontrib-log-cabinet ] ( https : //github.com/davidism/sphinxcontrib-log-cabinet ) , to handle # 1704 . It collects each group of changelog directives , sorts them newest to oldest , then collapses all logs older than the current version . Deprecations are never collapsed . The extension is optional , a warning is printed if it 's not installed but the build continues . The flask-docs build script needs to be updated to install this if we want it to actually take effect . The collapse does n't work on IE because they do n't support ` < details > ` . A later version can add a polyfill for it , but I 'm not too concerned .",2271.0
322,2017-05-22 18:49:13,2017-04-27 19:47:20,Documentation : Term `` development mode '' is unclear,"I 'm doing some work which requires defining some context hooks for our flask app . When reading the documentation for [ request contexts * ] ( http : //flask.pocoo.org/docs/dev/reqcontext/ # callbacks-and-errors ) I came across the passage : > > > In production mode if an exception is not caught , the 500 internal server handler is called . In development mode however ... As a user , I want to know : What is 'development mode ? ' I _think_ it 's debug mode ( e.g . ` app.run ( debug=True ) ` ) . I 've seen several people use the terms interchangeably when searching for help , but not either the flask developers or the official documentation . The flask docs do n't appear to have an index ( is it hidden somewhere ? ) , and quick search does not appear to work . Google site search of the dev docs does not immediately turn up an obvious answer . IMO , this is a bug in the documentation . Assuming for the sake of argument I 'm right about dev=debug , that passage should be either : 0 . `` In development mode ( i.e . with ` debug=True ` ) however ... '' or 1 . The text 'development mode ' is a link to a list of terms & their definitions 2 . Something along those lines . Maybe if I had carefully read all of the docs from beginning to end , or at least carefully read the tutorial twice , I might not be confused about this . But lots of your users wo n't do that . That 's why I call it a bug ( it 's sorta like failing to validate input ) . * I was in fact reading the docs for the version of flask I 'm using , but pointing to dev-version docs b/c I presume they represent the current state of the documentation",2261.0
323,2017-04-26 17:43:18,2017-04-26 17:30:22,Add routes command,"Based on # 1446 , with some ideas from # 2092 . The whole command is basically reworked , but the most important change is that there is a ` match ` sort order to show the order Flask will dispatch in ( which is really just not sorting ) .",2259.0
324,2017-04-25 19:06:40,2017-04-25 19:05:01,Clean up preprocess_request docs,Continues # 1684 . Reduce verbosity of previous PR . Move examples and description of functions out of registry docs to decorator docs .,2258.0
325,2017-04-25 15:46:23,2017-04-25 15:23:42,refactor make_response to be easier to follow,"* be explicit about how tuples are unpacked * allow ` bytes ` for status value * allow ` Headers ` for headers value * use ` TypeError ` instead of ` ValueError ` * errors are more descriptive * document that view must not return ` None ` * update documentation about return values * test more response types * test error messages closes # 1676 ` TypeError ` is more correct by definition ( wrong type to function ) , and I do n't think anyone should be catching that error anyway ( what would it mean to do that ? ) , so I 'm ok if this somehow breaks some code . This is also consistent with what ` force_type ` returns for bad input . I had to get a bit creative with displaying the error from ` force_type ` while injecting a new descriptive message . It would be nice if we could just use ` raise new_error from original_error ` , but that 's Python 3 only . These error messages will hopefully help avoid a class of questions that are frequently asked on Stack Overflow . In particular , there was no error about incorrect types that made it to ` force_type ` , so users trying to return JSON with something like ` return True ` would get a mysterious `` bool object is not callable '' error .",2256.0
326,2017-04-22 21:43:22,2017-04-22 21:00:49,Ensure error while opening session pops context,"Reported in # 1528 . # 1538 provided a solution , but can be simplified by only moving ` ctx.push ( ) ` into the ` try ` block . Errors raised by ` SessionInterface.open_session ` and ` .make_null_session ` will be handled by the normal app error handling mechanism , and the context will be popped at the end of the request .",2254.0
327,2017-04-21 18:16:19,2017-04-21 17:45:51,Continue # 1936 : Add the ability to combine MethodViews,"Merge master into # 1936 . The collection logic is changed to collect all inherited methods , not just ones specified by base class ` methods ` attrs .",2252.0
328,2017-04-21 15:31:12,2017-04-21 14:18:59,Continue # 1489 : Add kwarg to disable auto OPTIONS on add_url_rule,Merge master into # 1489 and do some cleanup .,2249.0
329,2017-04-12 17:12:30,2017-04-12 16:22:22,"filename can be latin-1 , not just ascii","* The filename header , being a header , can include Latin-1 characters , not just ASCII . * Do n't normalize the unicode name until we know the UTF-8 version needs to be sent . Otherwise you create situations where the name * could * be sent as just the single field , but the normalized form does n't encode to Latin-1 . ref # 2223",2238.0
330,2017-04-07 14:10:44,2017-04-07 12:57:57,Add example for virtualenv integration in cli docs,"I try this to config my flask application , It returns the import error ` app.config.from_object ( 'config ' ) ` I try ` app.config.from_object ( 'app.config ' ) ` then it works",2234.0
331,2017-04-06 15:31:26,2017-04-06 15:26:11,Update out of date jsonify documentation,"https : //github.com/pallets/flask/pull/2193 changed the conditions for when jsonify pretty prints , but this comment was n't updated .",2231.0
332,2017-05-25 22:00:03,2017-04-02 16:34:07,Add blueprint and the app factory pattern into the flaskr example,"# # Summary In basic Flask applications , the body data of chunked uploads appears to go missing : that is , they do not appear in ` request.data ` . I have reproduced this with two different WSGI servers ( gunicorn and twisted ) , both of which handle chunked data appropriately . Non-chunked data does not suffer this problem . I 've reproduced this problem on both Python 2.7 and Python 3.6 . # # Reproduction The following Flask application demonstrates the problem : # # References This was spotted at httpbin . See kennethreitz/httpbin # 340 for more .",2228.0
333,2017-04-08 17:54:21,2017-03-23 16:40:06,Fix send_file 's attachment_filename to work with non-ascii filenames,"This commit implements https : //tools.ietf.org/html/rfc2231 # section-4 in order to support sending unicode characters . Tested on both Firefox and Chromium under Linux . ~~This adds unidecode as a dependency , which might be relaxed by using .encode ( 'latin-1 ' , 'ignore ' ) but would n't be as useful.~~ This pull request no longer adds any new dependency . Also , added a test for the correct headers to be added . Previously , using a filename parameter to send_file with unicode characters , it failed with the next error since HTTP headers do n't allow non latin-1 characters . Error on request : Traceback ( most recent call last ) : File `` /usr/lib/python3.6/site-packages/werkzeug/serving.py '' , line 193 , in run_wsgi execute ( self.server.app ) File `` /usr/lib/python3.6/site-packages/werkzeug/serving.py '' , line 186 , in execute write ( b '' ) File `` /usr/lib/python3.6/site-packages/werkzeug/serving.py '' , line 152 , in write self.send_header ( key , value ) File `` /usr/lib64/python3.6/http/server.py '' , line 509 , in send_header ( `` % s : % s\r\n '' % ( keyword , value ) ) .encode ( 'latin-1 ' , 'strict ' ) ) UnicodeEncodeError : 'latin-1 ' codec ca n't encode character '\uff0f ' in position 58 : ordinal not in range ( 256 ) Fixes # 1286",2223.0
334,2017-03-31 16:07:43,2017-03-23 14:47:35,Handle BaseExceptions,This ensures that ` auto_pop ` is called with a non- ` None ` value in the case of a BaseException being thrown .,2222.0
335,2017-03-24 15:59:01,2017-03-21 19:23:08,shorten output when ImportError due to app bug .,Improves output for # 2214 Before :,2217.0
336,2017-05-09 18:04:23,2017-03-19 17:06:20,Issue # 2212 : documentation : virtualenv and python3,"Please note that for clarity , I changed for folder name of the created virtual environment from ` venv ` to ` virtenv ` , seeing the relevant python3-command uses the argument ` venv ` .",2213.0
337,2017-05-19 19:52:03,2017-03-19 16:09:09,Documentation : Installing and virtual environment under python3,"For installing Flask under a virtual environment with python3 , the procedure is somewhat different that what is proposed in the Documentation , under Installation , virtuallenv . See [ Answer by _geckon_ to question _Using Python 3 in virtualenv_ ] ( http : //stackoverflow.com/a/30233408/3493586 ) This is a minor change , just ` python3 -m venv /path/to/new/virtual/environment ` instead of ` virtualenv venv ` I would be willing to contribute with this if assigned the task .",2212.0
338,2017-05-09 15:47:24,2017-03-17 04:43:54,Clarify APPLICATION_ROOT documentation,See # 1714 .,2210.0
339,2017-03-16 20:43:01,2017-03-16 13:39:55,Print a stacktrace on CLI error ( closes # 2208 ),I 've been bitten by this a few times and I believe silently swallowing errors without any debug output is a bad thing to do . This at least prints the resulting stacktrace .,2209.0
340,2017-03-16 20:43:10,2017-03-16 10:56:41,Do not swallow exceptions if CLI fails to load,I think the changes introduced in https : //github.com/pallets/flask/commit/fa6eded6f572dd4bc23b030f025156cdd1e63305 that swallow ALL exceptions if loading a custom CLI command fails are not good for the general development flow . I often do ` flask -- help ` to see whether my custom command comes up fine and when it does n't I do n't get exceptions and I do n't really know what I 've done wrong . I think this ` try-except ` should be removed . I really think the CLI _should_ fail loudly instead of ignoring errors . Let 's discuss this and if you guys agree I 'll make a PR .,2208.0
341,2017-03-13 12:58:25,2017-03-13 12:56:23,Python 3 syntax error in Quickstart docs,I was going through Quickstart examples and I found syntax error in URL Building section . Examples uses old Python 2 syntax for printing ` url_for ` results and crashes if run on Python 3 .,2204.0
342,2017-03-06 13:06:00,2017-03-06 13:01:25,docs : Fix typos/grammar,This PR updates the Sphinx documentation for the ` host ` param for the ` Flask.run ` method per the fix provided by https : //github.com/pallets/flask/pull/2152 . This provides parity with the ` port ` param .,2201.0
343,2017-03-05 12:07:50,2017-03-05 11:59:32,"Close < li > tag in lines ( 16,18 ) ( # 1951 )",Adding a change in the example code that was n't added to the docs . https : //github.com/pallets/flask/commit/c54d67adee6f99113f525b376da4af27c3001321,2199.0
344,2017-03-04 10:29:05,2017-03-03 03:17:56,Add tips for debug config with flask cli,"` app.debug ` and ` app.config [ 'DEBUG ' ] ` are not compatible with the ` flask ` script . The app 's config is not available in ` get_debug_flag ( ) ` when starting the server , is there a way to fix that ?",2196.0
345,2017-03-07 01:09:47,2017-03-01 06:31:52,Do n't rely on X-Requested-With for pretty print json response,` X-Requested-With ` is not reliable nowadays . We should n't rely on it any more . Related issue : https : //github.com/pallets/werkzeug/issues/1077,2193.0
346,2017-02-11 09:43:11,2017-02-11 07:53:34,Migrate various docs links to https,Also fixed a few outdated links,2180.0
347,2017-02-09 14:29:59,2017-02-09 11:40:15,Update 4.4.3 HTTP Methods Example,"I just started learning ` flask ` and following the documentation pdf . When I reached the topic ` 4.4.3 HTTP Methods ` , I encountered this ` ValueError : View function did not return a response ` even though I followed the tutorial . It made me confused and had to search on [ stackoverflow ] ( http : //stackoverflow.com/a/18211982 ) . This might not be a good fix for an example but the previous example did confuse a beginner , me , who followed the documentation . Cheers , swan",2175.0
348,2017-02-09 17:34:17,2017-02-07 20:26:44,py.test = > pytest,"Really a minor thing , only experienced by a newcomer . When following the README or CONTRIBUTE docs , the first test run results in lots of failures . This is because a simple ` py.test ` also discovers the tests in examples/ ( My plan is to contribute more , this is just to get started ; )",2173.0
349,2017-01-17 21:22:17,2017-01-16 08:26:38,use SERVER_NAME to set host and port in app.run ( ),Addresses # 2109,2152.0
350,2017-01-14 20:58:46,2017-01-14 04:34:29,Fix Request Reference,Points flask.Request to appropriate place in the documentation .,2151.0
351,2017-01-13 13:30:22,2017-01-13 10:00:35,Use SOURCE_DATE_EPOCH for copyright year to make build reproducible,"Hi , Whilst working on the `` reproducible builds '' effort [ 0 ] , we noticed that flask-restful could not be built reproducibly . SOURCE_DATE_EPOCH is explained [ 1 ] [ 0 ] https : //wiki.debian.org/ReproducibleBuilds [ 1 ] https : //wiki.debian.org/ReproducibleBuilds/TimestampsProposal",2149.0
352,2017-01-10 18:07:26,2017-01-10 17:55:58,Added python3.6 support for tests,"python 3.6 has deprecated the use of flags not at the start of regular expression , plans for 3.7 is to rasie an exception : [ http : //bugs.python.org/issue22493 ] ( http : //bugs.python.org/issue22493 ) new on 3.6 [ ModuleNotFoundError ] ( https : //docs.python.org/3/library/exceptions.html # ModuleNotFoundError )",2148.0
353,2017-02-28 05:05:10,2017-01-04 11:49:16,Remove extra HTML tag from fileupload docs,"http : //flask.pocoo.org/ ( BTW , can I haz HTTPS please ? ) says : > Latest Version : 0.11 It should say : > Latest Version : 0.12 ( with the correct link ) . : sparkles :",2141.0
354,2016-12-31 15:31:44,2016-12-30 21:24:20,Inherit Werkzeug docs,Fix # 2132,2135.0
355,2017-01-15 04:56:13,2016-12-30 18:48:08,Add larger app ex,"I chose the wrong base : https : //github.com/pallets/flask/pull/2130 Original PR message : > Addresses : # 1902 ( comment ) > > Confirms that the larger application as outlined in the docs , works as expected . For the sake of less confusion , for those working through this example , having src might be helpful . Not everyone will want to work along with the docs . If there are parts of the docs that are not clear , we should fix that as well . ( They seemed clear to me ) . Thiefmaster 's response : > The weird commits in this PR aside ( rebase to upstream/master and force-push to fix ) , I 'm not sure how useful this is to have in the repo ... Especially since having a `` large '' app without an app factory is somewhat questionable ... My response : > @ ThiefMaster Sorry about that . I did n't choose correct base . I was thinking that in order to debug issues that people are having with code examples in the docs , it would be useful to have those examples on-hand . > > I agree . But maybe until we can put something better together for # 2027 , this addition could just be temporary and we could deprecate this `` larger applications '' example at later time .",2131.0
356,2016-12-26 02:50:48,2016-12-25 15:37:43,Fix config.from_pyfile on Python 3,Fix # 2118,2123.0
357,2016-12-21 20:06:48,2016-12-21 19:27:43,Style the flask command consistently,It 's done like this in other parts of this doc .,2120.0
358,2016-12-21 20:07:10,2016-12-21 05:21:01,Update README for minitwit,add step 2 to run minitwit,2119.0
359,2017-04-13 23:45:25,2016-12-19 16:06:43,Added missing testing config,This PR contains an update to docs/testing.rst : The testing documentation was missing ` TESTING ` config from one of the examples . fixes # 1302,2117.0
360,2016-12-21 20:07:58,2016-11-20 23:33:30,use dict instead of if/else logic,added whitespace before key,2093.0
361,2016-12-21 20:08:39,2016-11-17 15:18:53,Ignore cache on request.get_json ( cache=False ) call,Removes usage of ` _cached_json ` property when ` get_json ` is called with disabled cache argument . ( closes # 2087 ),2089.0
362,2017-05-25 21:36:07,2016-11-04 06:03:31,switch to packaged sphinx theme,"I fixed up flask-sphinx-themes so that it 's an installable package . No longer need to copy files or use submodule , just ` pip install Flask-Sphinx-Themes ` .",2080.0
363,2017-04-30 15:48:23,2016-11-02 20:37:55,Mention existence of register_error_handler in errorpages.rst,See https : //github.com/pallets/flask/issues/1837 for context .,2077.0
364,2016-11-02 04:04:20,2016-11-02 03:22:16,Fix LogRecord class reference,See https : //github.com/pallets/flask/issues/1837 for context .,2075.0
365,2016-11-03 17:11:24,2016-11-01 20:46:57,Parameterizing test,See https : //github.com/pallets/flask/issues/1837 for context .,2073.0
366,2016-11-01 14:35:17,2016-11-01 13:57:19,Remove busy-work .,"It is entirely sufficient to walk the MRO of the exception class , no need to check for classes re-appearing later on , no need to add the MRO of any superclass . * Python refuses point-blank to create a class with a circular MRO . * All classes in a superclass MRO * already * appear in the MRO of the derived type . Re-adding the contents of a superclass MRO is doing double work .",2072.0
367,2016-10-31 22:10:27,2016-10-31 20:24:19,Adding coverage generation to tox,Adds the ability to measure code coverage via unit tests .,2071.0
368,2016-10-30 13:34:50,2016-10-30 01:40:17,Fixes import statement in flaskr,"- ` from flaskr.flaskr import app ` in flaskr/ * * init * * .py causes an import error with Python 2 - The relative import now used works for py2 and py3 Ref : https : //github.com/pallets/flask/issues/2058 The issue was that the absolute import ` from flaskr.flaskr import app ` works in python 3 but not python 2 . While there is probably a simple answer why , for now , this relative import works on both .",2068.0
369,2016-11-02 01:52:32,2016-10-28 02:45:11,Capitalize occurrences of 'flask ',"also , minor typo fix .",2067.0
370,2016-10-14 08:13:42,2016-10-14 05:29:03,"add 'caution ' section to docs , workaround for zero-padded file modes","As requested in issue # 2029 , I added a section to the contributing file in case anyone has problems with cloning or pushing the repo . @ untitaker",2057.0
371,2017-05-15 19:41:13,2016-10-11 13:32:48,Updated Celery pattern,The given pattern caused Celery to lose the current Context . Note that I 'm using Celery 3.1.24 . The current pattern may be outdated ( last change was 2013 ),2055.0
372,2016-10-12 06:54:25,2016-10-01 16:54:53,Default environ,"Addresses # 1467 . Now you can pass ` environ_base ` dictionary into ` app.test_client ` . This also allows overriding per ` open ` call ( or ` make_test_environ_builder ` call ) . Perhaps a better solution would be to edit werkzeug directly and add it to that init ( which , in turn , would allow us to remove the subclass init ) . I do n't believe that would cause any unintended behavior , but I 'm open to further conversation on it . -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2047 )",2047.0
373,2016-10-01 16:45:22,2016-10-01 15:54:39,Remove ` -a/ -- app ` from Quickstart documentation,"As mentioned in # 2009 , simplifying the CLI saw the removal of the ` -a/ -- app ` flag . Therefore , the only way to specify the module to import is by setting ` FLASK_APP ` . -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2046 )",2046.0
374,2016-09-24 11:07:19,2016-09-23 18:02:01,Updated mod_wsgi.rst to point to new mod_wsgi repo,The http : //flask.pocoo.org/docs/0.11/deploying/mod_wsgi/ site currently uses the old Google Code page for ` mod_wsgi ` . This PR updates the urls for ` mod_wsgi ` to point to the new [ GitHub repo ] ( https : //github.com/GrahamDumpleton/mod_wsgi ) and [ documentation ] ( http : //modwsgi.readthedocs.io/en/develop/index.html ) . -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2038 ),2038.0
375,2016-09-26 10:43:46,2016-09-20 08:09:13,make use of range requests if available in werkzeug,This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2031 ),2031.0
376,2016-09-12 08:42:24,2016-09-12 07:41:27,Fix typo in docs,Also added one missing comma for readability -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2022 ),2022.0
377,2016-09-12 18:52:42,2016-09-10 00:35:40,Do not cause errors for unknown files for sendfile,Unknown files must not raise errors when send with send-file if the sending happens by filename . This is particularly important for send from directory which can send up loads of unknown files . This regressed at one point in the last two weeks . It came up with woff2 files sent from static folders which are unknown in the default mimetype database . -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2019 ),2019.0
378,2017-04-20 16:10:28,2016-09-09 10:11:30,Add scheme to url_build error handler parameters,` _scheme ` is passed to ` url_for ` but is not forwarded to error handlers if an exception is raised,2017.0
379,2016-09-10 00:36:29,2016-09-08 08:57:41,Corrected after response for error handlers,Before this change after request functions were not correctly invoked for error handlers . -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2013 ),2013.0
380,2016-09-06 20:32:34,2016-09-06 12:19:53,Do n't passthrough_errors unless instructed .,Fix # 2005 Revert # 1679 and # 1996 -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2006 ),2006.0
381,2016-09-05 14:57:00,2016-09-05 14:33:09,Correcting Custom Test Client class docs,"As it was written , that init could not work as Flask was still trying to call it with no authorization parameter . -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2004 )",2004.0
382,2016-09-04 23:28:05,2016-09-04 21:05:34,Fix error in send_file helper,"` mimetype_filename ` is not defined , it should be ` attachment_filename ` -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2003 )",2003.0
383,2016-09-08 13:19:48,2016-09-01 19:00:45,Clean up tutorial docs for installable app pattern with flaskr,- reading sequentially through the tutorial works . - fixes references to ` export FLASK_APP=flaskr.flaskr ` -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/2002 ),2002.0
384,2016-08-29 22:26:20,2016-08-29 18:39:34,Spelling,This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/1998 ),1998.0
385,2016-08-27 16:33:08,2016-08-27 12:33:58,Only passthrough_errors if PROPAGATE_EXCEPTIONS,See pallets/werkzeug # 954 -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/1996 ),1996.0
386,2016-08-26 01:08:04,2016-08-20 15:38:16,Properly remove f.name usage in send_file,Amend # 1849 -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/1988 ),1988.0
387,2016-08-20 02:01:13,2016-08-19 23:39:36,Update testing.rst,Python 3.4.2 TypeError : Type str does n't support the buffer API,1987.0
388,2016-09-11 16:05:28,2016-08-09 17:51:00,`` Larger Applications '' docs do n't play nicely with flask run,"The [ Larger Applications docs ] ( http : //flask.pocoo.org/docs/0.11/patterns/packages/ ) recommend creating a ` runserver.py ` as follows : This runs counter to the advice in the [ Development Server ] ( http : //flask.pocoo.org/docs/0.11/server/ ) doc for working with the ` flask run ` command — the ` app.run ( ) ` call should be under ` if __name__ == '__main__ ' ` . That makes it work properly , anyway . But when using ` flask run ` , the ` runserver.py ` file can be removed altogether .",1980.0
389,2016-08-22 18:52:54,2016-07-12 17:52:16,Update minitwit & improve testing for examples,- Related to # 1945 - Re-works minitwit to be installed and run as : pip install -- editable . export FLASK_APP=minitwit.minitwit export FLASK_DEBUG=1 flask initdb flask run - added flaskr and minitwit to norecursedirs - tests not properly run when using pytest standards - see : http : //stackoverflow.com/questions/38313171/configuring-pytest-with-installable-examples-in-a-project - Both flaskr and minitwit now follow pytest standards . - Tests can for them as ` py.test ` or ` python setup.py test `,1954.0
390,2016-07-28 20:46:42,2016-07-09 18:52:33,"close < li > tag in lines ( 16,18 )","! [ screenshot from 2016-07-09 21-51-02 ] ( https : //cloud.githubusercontent.com/assets/13125847/16709636/47f25eb0-461f-11e6-9fa5-885cba578f6b.png ) i noticed that ` < li > ` tag have n't closed in lines 15,18 which is bad practice as if i put ` some thing : h1 > some text /h1 > ` in the text-area all the other articles become h1 > so big and color blue",1951.0
391,2016-08-12 13:12:00,2016-07-08 05:37:27,adding in try around __import__ to catch invalid files/paths,"I 'll start this off by saying this may be a naive approach to what appears to be a common thread between a few recent issues ( # 1926 , # 1902 , # 1829 ) . I 'm attempting to solve the issue of mistyped or improperly defined app paths reaching the * * import * * call for the flask app server . Given the way ` cli.py ` is currently structured , I ca n't find a bulletproof way to ensure only correct paths/module names reach the import . If that 's the case , I believe the best response is to simply catch the error and return something more descriptive than ` ImportError : Import by filename is not supported. ` for debugging purposes .",1950.0
392,2017-05-09 15:44:59,2016-07-02 22:13:38,clarify blueprint 404 error handling in docs,"Incorporates @ ThiefMaster 's response to # 1935 in the blueprint documentation . If this is n't clear enough or is inaccurate I 'll be happy to do some research and rewrite . Also , I 'm a first time contributor , if I 've failed to follow a protocol somewhere please let me know .",1942.0
393,2016-07-05 19:00:43,2016-06-20 10:11:56,Update installation documentation for using 'pip ' command,Fix for # 1919,1920.0
394,2016-06-22 20:26:35,2016-06-19 20:57:33,Update documentation for upgrading Flask using 'pip ' command,Fix for # 1915,1918.0
395,2016-06-19 20:27:23,2016-06-19 14:36:17,wtforms : Add missing closing tags,Fix for # 1915,1917.0
396,2016-06-14 20:46:27,2016-06-14 20:45:35,Revert `` Addressing Issue 1809 '',Reverts pallets/flask # 1811,1912.0
397,2017-05-22 19:37:58,2016-06-14 09:02:06,Wrong import json library,[ This code ] ( https : //github.com/pallets/flask/blob/c5900a1adf8e868eca745225f3cf32218cdbbb23/flask/json.py # L23 ) is always import error . ( ` simplejson ` is not included in the ` itsdangerous ` . ) See : https : //github.com/pallets/itsdangerous/blob/master/itsdangerous.py,1911.0
398,2016-08-22 18:53:44,2016-06-09 20:35:18,Import error with some examples,"I 'm trying to run the `` flaskr '' and `` minitwit '' examples , but I 'm running into an import error issue . I 'm trying to follow the instructions from the README file . When running ` flask initdb ` , I get the following error : I 'm using an Anaconda Python install on both Windows 10 ( Python 3.5 ) and Linux ( Python 3.4 ) with either the stock flask 0.11 install or an install from the latest git repo . I 'm running this code from appropriate directory and am able to import flaskr or minitwit from a terminal Python session . I can run the other examples that do not require the flask script .",1902.0
399,2017-04-24 17:16:21,2016-06-08 17:51:06,Per blueprint jsoncoding # 1710,"# 1710 This patch adds support for custom ` JSONEncoder ` , ` JSONDecoder ` functionality for blueprints , modeled after ` Flask.json_encoder ` , ` Flask.json_decoder ` and has minimal amount of changes . Still no docs or corner case tests .",1898.0
400,2016-06-05 17:32:01,2016-06-04 20:02:23,Test side effect,Function ` prepare_exec_for_file ` has a side effect where a path is added to ` sys.path ` list . This commit enhances an exisiting test case for ` prepare_exec_for_file ` by testing the side effect of the function and adding necessary comments .,1889.0
401,2017-05-25 21:47:21,2016-06-03 23:59:41,enumerates the states in which code is executed ...,... and fixes an awkward phrasing . -- - This change is [ < img src= '' https : //reviewable.io/review_button.svg '' height= '' 34 '' align= '' absmiddle '' alt= '' Reviewable '' / > ] ( https : //reviewable.io/reviews/pallets/flask/1887 ),1887.0
402,2017-04-14 16:22:13,2016-06-03 23:00:19,Enhance code coverage for Blueprint.endpoint,"Add basic test for the endpoint decorator for the Blueprint object . Mentioned on the API [ docs ] ( http : //flask.pocoo.org/docs/0.11/api/ # flask.Blueprint.endpoint ) : > ... If the endpoint is prefixed with a . it will be registered to the current blueprint , otherwise it ’ s an application independent endpoint . This commit only added test for the _without-prefixed-dot_ endpoint",1886.0
403,2016-08-20 15:43:58,2016-06-03 21:50:58,Add test for get_version ( CLI ),Added a test for CLI ` -- version ` command .,1884.0
404,2016-06-03 21:32:11,2016-06-03 21:13:34,Expanding contribution documentation,- README updated with link to CONTRIBUTING.rst - CONTRIBUTING.rst has instructions on running code coverage,1883.0
405,2016-07-05 19:46:01,2016-06-03 20:00:41,Enhance tests.test_cli.test_find_best_app,This commit adds a test case for ` test_find_best_app ` where Module object does not contain Flask application . Also cleans the function little bit to provides more meaningful comment .,1882.0
406,2016-06-07 18:12:40,2016-06-03 19:40:59,Add test for find_default_import_path,This commit adds a test case for ` test_find_best_app ` where Module object does not contain Flask application . Also cleans the function little bit to provides more meaningful comment .,1881.0
407,2016-06-03 12:44:13,2016-06-03 11:57:28,Use recwarn everywhere,... instead of custom fixture . Also assert that no warnings are left over after the test .,1878.0
408,2016-06-03 17:58:39,2016-06-02 23:55:51,Add negative test for json.jsonify,Test if jsonify function raises TypeError when both args and kwargs are passed in .,1876.0
409,2016-06-03 05:15:00,2016-06-02 23:40:12,Add a link to Extension Development,"Provides a link to [ Flask Extension Development ] ( http : //flask.pocoo.org/docs/0.11/extensiondev ) page from [ Flask Extension page ] ( http : //flask.pocoo.org/docs/0.11/extensions ) . Flask Extension page talks about ` finding ` , ` using ` extensions , it might as well talk about ` building ` one too . Found # 532 as the most relevant issue that is open .",1875.0
410,2016-06-03 16:41:10,2016-06-02 22:40:39,Clitest update,There was a bad if/elif statement and the elif os.path ... would never get hit . So I swapped the order of those two statements and added testing for the prepare_exec_for_file function .,1872.0
411,2016-06-02 22:40:59,2016-06-02 22:28:59,improved documentation for config.from_object,I have removed outdated paragraphs and just left the link to the page stating the current status of python 3 in Flask . # 1578,1870.0
412,2016-06-03 16:29:12,2016-06-02 22:28:55,Tests with and without simplejson for every existing testenv,changes configuration for tox and travis . Assist from @ davidism,1869.0
413,2016-06-03 12:55:33,2016-06-02 22:24:06,Rewrite subclassing example with a better use-case .,"As @ ThiefMaster pointed out in PR # 1862 , template globals can be added without subclassing . Here is a different use-case , inspired by [ recent IRC conversations ] ( https : //botbot.me/freenode/pocoo/2016-05-30/ ? msg=66949866 & page=2 ) .",1868.0
414,2016-06-02 21:54:49,2016-06-02 21:54:30,Revert `` Adds simplejson as a testing target . '',Reverts pallets/flask # 1855,1865.0
415,2016-06-02 21:32:24,2016-06-02 21:19:38,Add subclassing pattern/example,Wrote up a basic example of subclassing Flask to set up an altered Jinja2 environment . This should fix issue # 221,1862.0
416,2016-06-02 21:15:24,2016-06-02 21:12:32,Document Runtime Error when running outside of application context,Adds a little documentation of the Runtime Error that you get when working outside an applications context . fix # 1521,1861.0
417,2016-06-03 00:56:08,2016-06-02 20:06:06,Coverage for test_static_path_deprecated and test_static_url_path,Made tests in tests_basic.py,1860.0
418,2016-06-02 19:30:25,2016-06-02 19:14:41,Adds simplejson as a testing target .,Adds one test specifically for a simplejson bug .,1855.0
419,2016-06-03 08:00:55,2016-06-02 19:07:42,Issue # 836 : Tweaking tutorial warning about plain text passwords and …,"…pointing users towards extensions registry Not a huge change , but hopefully makes it clear that plain text is dangerous and puts people on the right path to implement password hashing if they choose fix # 836",1854.0
420,2016-06-02 18:59:50,2016-06-02 18:27:18,Document flash message size limit,"Reason : Messages of size 68,493 - 91,326 characters cause flash to fail silently . Session cookies can not have such large messages . Issue : pallets/flask # 1789",1851.0
421,2016-06-02 11:53:13,2016-06-02 10:59:01,Add version switch to flask cli,re # 1828,1848.0
422,2016-06-03 16:54:21,2016-06-01 21:15:32,Add tests target that uses simplejson,https : //github.com/pallets/flask/issues/1602 # issuecomment-154127373 Should add tox envs for testing ` flask.json ` with simplejson installed . Possibly add this to the travis matrix .,1846.0
423,2016-06-04 06:25:16,2016-06-01 11:25:18,Mention the template name conflict issue in blueprint templates docs,re # 266,1843.0
424,2016-05-31 19:20:22,2016-05-31 19:15:30,a few more python3-compatible print,some simple changes towards py3 I hope that the future import is allowed here . It is already used elsewhere in the code of flask .,1840.0
425,2016-05-29 13:49:38,2016-05-29 13:42:51,Convert readthedocs link for their .org - > .io migration for hosted projects,"As per their email ‘ Changes to project subdomains ’ : > Starting today , Read the Docs will start hosting projects from subdomains on the domain readthedocs.io , instead of on readthedocs.org . This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard . Test Plan : Manually visited all the links I ’ ve modified .",1827.0
426,2016-05-27 10:00:16,2016-05-26 20:57:20,Added sentry to docs,"Of all Undefined variants , it comes closest to `` Explicit is better than implicit '' and `` Errors should never pass silently '' . I 'm not sure it 's worth changing in Jinja2 because of backward compatibility requirements , but Flask 1.0 seems like a reasonable point where behavior changes are expected anyway .",1823.0
427,2016-05-26 20:31:16,2016-05-26 19:47:38,Improve application context popping,Exceptions during teardown handling will no longer leave application contexts lingering around . This fixes # 1767,1822.0
428,2016-05-26 20:17:34,2016-05-26 19:30:31,Added plugin support to the cli,This fixes # 1776,1821.0
429,2016-05-26 19:34:56,2016-05-22 09:36:57,Fast path for disabled template load explain .,Refs # 1792,1814.0
430,2016-05-26 19:48:20,2016-05-22 08:46:32,Resolve state issue for url_for with forced scheme,This fixes # 1596,1813.0
431,2016-05-20 19:57:10,2016-05-20 19:38:08,turn 2 prints to py2/py3 compatible syntax,as my very modest contribution towards python3,1812.0
432,2016-05-22 14:09:21,2016-05-17 11:53:08,Addressing Issue 1809,"Added to docstring for Flask.register_blueprint to clarify kwargs . Was unsure of the conventions for using : ref : but figured this fit , please let me know if there 's a better way to do that .",1811.0
433,2016-05-16 17:36:55,2016-05-12 09:08:35,Forward ported CLI tests from Flask-CLI and fixed a bug with the CLI 's name .,"To clarify , looking at the [ signature of the click 's Group class ] ( https : //github.com/pallets/click/blob/6.6/click/core.py # L1135-L1138 ) I found that passing the whole Flask app is n't what it expects , but just a command group name .",1806.0
434,2016-05-09 05:44:17,2016-05-09 03:44:50,Fix `` with '' formatting in doc,` with ` statement is n't properly formatted in reST in two sections in the ` flask.testing.FlaskClient ` documentation .,1801.0
435,2016-05-08 19:58:38,2016-05-03 16:06:13,update docs and refer to setuptools,This PR fixes some documentation issues that were missed in # 1588 : - fixes to ` distribute.rst ` : - replace leftover occurences of `` distribute '' with `` setuptools '' - fix minor grammatical errors,1795.0
436,2016-05-04 13:46:49,2016-04-13 06:36:15,minor rewording of get_json documentation for clarity,"I did a minor rewording of the docstring for ` request.get_json ( ) ` . The current documentation is misleading , by having a mention of ` on_json_loading_failed ` followed by a sentence that references `` this function '' , without clearly stating if the reference is to ` get_json ` or ` on_json_loading_failed ` . The description reads much better in my opinion , after I moved the ` on_json_loading_failed ` sentence to the end .",1781.0
437,2016-03-08 19:30:36,2016-03-08 09:05:35,Update deprecated references,validators.Required ( ) is marked as deprecated in favor of validators.DataRequired ( ) and will be remove in WTForms 3 .,1748.0
438,2016-03-04 12:51:07,2016-03-04 12:03:02,Use pytest.raises ( ) instead of try/catch with assert 0,"This is somehow more readable , and improve consistency along the tests ( currently there are assert 0/False along with pytest.raises )",1743.0
439,2016-03-12 23:42:28,2016-02-19 13:24:14,Update MANIFEST.in with simpler template commands,Please see https : //docs.python.org/2/distutils/sourcedist.html # commands for reference .,1733.0
440,2016-06-04 19:12:55,2016-02-17 09:12:48,make safe_join behave like os.path.join with * args,"Make safe_join behave like os.path.join , which accept multiple path components with * args . Note that only the `` directory '' 's bound is respected and the path components are only joined together .",1730.0
441,2016-04-08 22:30:47,2016-02-16 05:05:44,Add JSONIFY_MIMETYPE configuration variable,"It is often useful to be able to return a vendor media type for JSON responses . For example , [ JSON API ] ( http : //jsonapi.org/format/ # content-negotiation ) requires that all responses have the ` Content-Type : applications/vnd.api+json ` header .",1728.0
442,2016-02-04 06:49:09,2016-02-03 13:37:55,Fix typo,"- Use the compatible way to handle the exception . You can find the source code wsgi_app in app.py , and it use the compatible way , so update it - Fix typo in config.py - Fix typo in app.py -- - One more question , in the [ flask.Flask.run ] ( http : //flask.pocoo.org/docs/dev/api/ # flask.Flask.run ) documentation , it says : > It is not recommended to use this function for development with automatic reloading as this is badly supported . Instead you should be using the flask command line script ’ s runserver support . I guess it should be : > ... the flask command line script ’ s run support . since flask cli has the ` run ` command not the ` runserver ` command .",1716.0
443,2017-05-14 10:26:03,2016-02-02 05:37:04,Lack of documentation on how to serve Flask under a non-root path,If I am not mistaken the docs lack a good description on how to setup Flask to use a different _application root path_ . I summarized my current understanding in [ this Gist ] ( https : //gist.github.com/Larivact/1ee3bad0e53b2e2c4e40 ) . Also the name of Flask 's APPLICATION_ROOT config variable is pretty misleading . One could wrongly assume that it affects routing ( stripping away application_root ) and ` url_for ( ) ` ( prepending application_root ) . I do not even get the point of the current ` APPLICATION_ROOT ` setting because there already is ` SESSION_COOKIE_PATH ` .,1714.0
444,2016-01-26 06:52:09,2016-01-25 23:02:46,Cleanup jsonify ( ) function,"Cleanup some leftover stuff from # 1671 . PEP8 spacing , args/kwargs do n't need to be converted to list/dict , and Sphinx formatting .",1703.0
445,2016-01-26 06:17:04,2016-01-02 19:34:01,Werkzeug should not block propagated exceptions from Flask,"Fixes # 1674 . By having Werkzeug always configured to let exceptions through we achieve the correct behavior for Flask . If Flask is configured to propagate exceptions ( implicitly or explicitly , does n't matter ) , then Werkzeug will get these exceptions and pass them through as well . If Flask is configured to not propagate exceptions , then Werkzeug will never see them , so no harm done if it is configured to pass them . It looks like there is no testing for the new cli , so I have only added a test for the ` app.run ( ) ` way of starting a server .",1679.0
446,2016-01-25 15:16:52,2015-12-30 11:32:53,Add support for serializing top-level arrays to JSON,"Major discussion of the issue is in # 248 . I 'm tired of working around it , so just like to get it fixed . This solution is similar to # 1402 & # 1209 with a few changes : - I found it unexpected that in # 1402 to convert a python list to a top level array you had to pass ` jsonify ( * l ) ` . I changed it so that both ` jsonify ( 1,2,3 ) ` and ` jsonify ( [ 1,2,3 ] ) ` serialize to ` [ 1,2,3 ] ` as I think that 's the more intuitive behavior . - Per the discussion in # 1209 & # 248 , I did n't create a separate config variable to modify this behavior . I know it 'd be nice to incorporate a fix for # 1443 in here as well , but I do n't fully understand the issue there . So let 's get this merged , and then tackle that issue in a followup PR . Fix # 170 , # 248 , # 510 , # 673 , # 1177 and check one of the boxes on # 1182",1671.0
447,2016-01-25 19:27:24,2015-12-30 09:04:58,Update ` tox ` installation instructions to point to PyPI,No longer need to grab ` tox ` from master,1669.0
448,2015-12-20 16:19:35,2015-12-20 12:45:45,Clarify the python versions that flask supports,"I asked the question that whether we should explicitly point out the python versions flask supports in # 1651 , and since it makes sense that we 'd better clarify the versions , I send this PR .",1661.0
449,2015-12-10 05:09:07,2015-12-10 04:02:49,Mod wsgi docs,Updated the docs to include a an example of using httpd2.4 syntax for setting directory permissions . There was a link to Apache 2.4 but no explanation of changes needing to be made . This was mentioned in issue # 1644 * * Changes : * * update directory permissions from httpd 2.2 syntax,1648.0
450,2016-04-04 18:20:11,2015-11-28 11:48:51,Extend documentation about uwsgi/nginx deployment,This patch intends to provide more information about uwsgi/nginx deployment when the app callable is in ( ` yourapp/__init__.py ` ) and the application is attached to the '/ ' URL . I 'm not English native so I expect some remarks ; ) Related to previous # 1464,1631.0
451,2015-11-27 16:57:56,2015-11-26 21:47:46,Skip tests if redbaron is not installed,This will make sure these tests will be skipped if you do n't have redbaron installed .,1630.0
452,2017-05-25 21:45:35,2015-11-20 16:53:58,Allow to specify subdomain and/or url_scheme in app.test_request_cont…,Added two extra parameters to app.test_request_context ( ) :,1621.0
453,2015-10-30 16:35:06,2015-10-24 07:15:03,travis : python 3.5 support,Add python 3.5 build to travis configuration .,1594.0
454,2015-10-30 18:10:08,2015-10-24 05:06:41,support timedelta for SEND_FILE_MAX_AGE_DEFAULT config variable,Support ` datetime.timedelta ` and seconds as ` int ` for SEND_FILE_MAX_AGE_DEFAULT config variable . Refers Issue # 1580 : beers :,1593.0
455,2016-01-27 01:40:26,2015-10-20 09:13:16,Updated documentation for Setuptools,Fixes # 1465 Signed-off-by : Abhijeet Kasurde akasurde @ redhat.com,1588.0
456,2016-06-05 22:46:13,2015-10-05 17:16:20,Update docs on the website ( at least the python 3 ones ),"The website gives a very outdated view on the python 3 issue : http : //flask.pocoo.org/docs/0.10/python3/ This seems to be updated to make it a lot more realistic , but is not online : https : //github.com/mitsuhiko/flask/blob/master/docs/python3.rst This RST file also seems to give a very different view than the dedicated python3 one : https : //github.com/mitsuhiko/flask/blob/master/docs/advanced_foreword.rst",1578.0
457,2016-04-04 18:22:34,2015-10-05 01:55:08,Warn when using development server,Also updates docs to emphasize that run ( ) should not be used in production . Refs # 1102,1577.0
458,2016-06-15 06:55:47,2015-09-28 13:00:10,Documentation : Clarify instructions about changing row_factory for SQLite3,"When I was working through the tutorial , this was very confusing to me ; so , I 've added the code and clarification that would have helped me get through it faster .",1573.0
459,2017-04-07 14:31:54,2015-08-23 14:30:27,Fix static route when using host_matching = True,"Change ` Flask.__init__ ` to accept two new keyword arguments , ` host_matching ` and ` static_host ` . This enables host_matching to be set properly by the time the constructor adds the static route , and enables the static route to be properly associated with the required host . Previously , you could only enable host_matching once your app was already instantiated ( e.g . ` app.url_map.host_matching = True ` ) , but at that point the constructor would have already added the static route without host matching and an associated host , leaving the static route in a broken state . Fixes # 1559 .",1560.0
460,2015-11-12 12:08:56,2015-08-21 23:10:11,Update uwsgi/nginx deployment documentation,This fixes # 1464 and adds some documentation on how to deploy with virtual environments .,1558.0
461,2015-07-27 17:25:27,2015-07-22 23:34:06,Improve function with_metaclass ( ),"The idea of a metaclass _ '' that replaces itself with the actual metaclass '' _ is really clever . Yet I can not help but suspect that the current implementation of function ` with_metaclass ` is just a bit too much . Why does the dummy metaclass extend the one to apply ? It never utilizes any of the base class ' resources , except for the base class itself . Since this is done by direct invocation ( not via ` super ( ) ` or something ) , there should be no need to inherit from the caller-provided type in the first place . Furthermore , given that the above obvservation is correct , there should be no need to explicitly utilize ` type.__call__ ` and ` type.__init__ ` any more . Not only because one can directly inherit from ` type ` here , but also because both seem to be required due to the aforementioned inheritance only : If the given ` meta ` class implements custom magic , the creation of the ` temporary_class ` could fail . Or even worse ; succeed but silently misinterprete arguments . Speaking of the ` temporary_class ` creation ( and still assuming all of the above assumptions to be correct ) : There 's no need to do that via the ` metaclass ` constructor at all , which actually saves not only the additional function call but also the condition within ` __new__ ` . Given I did n't miss something ( and there is indeed no actual reason for the metaclass to extend the one to apply ) , then I believe the patch suggested with this pull request to significantly improve the code without changing any of the expected behavior .",1539.0
462,2015-07-14 20:44:51,2015-07-14 19:37:28,Fixed gevent introduction to use libev instead of libevent,Fix # 1531,1532.0
463,2015-07-21 11:41:44,2015-06-26 12:42:02,"fixed some punctuation , fixed a few errors , in service of readability","I 've been using Flask for about a month now and i can say that it 's pretty awesome . The one thing that annoys me is the `` application context '' and it 's lack of proper documentation . I understand that app context makes you able to instantiate multiple apps in a single python process . But i 've been thinking for quite a while about what is a proper use case for this ? can the documentation provide an example about why and how to do this ? In addition , if faced with `` working outside application context '' exception , how do you overcome this ? for example in a celery task . Do we use something like , [ Flask Celery Helper ] ( https : //github.com/Robpol86/Flask-Celery-Helper ) ? Because even using the Celery object alone would still result in such exception being raised inside whatever we do inside the celery task itself . That has been kind of a debugging nightmare . Many Thanks",1520.0
464,2015-06-21 17:37:34,2015-06-20 16:10:20,Remove the deprecated Flask.modules property,"While I do n't see any cases where this would be likely to result in security problems ( it would require custom types that are not safe to recreate with arbitrary arguments AND code that serializes a dict with both the key and value being provided by the user ) , I do n't like that there 's any input where ` value ! = loads ( dumps ( value ) ) ` without an exception . Two ways to fix this : - raise an exception when trying to encode a dict that has a single item with a key starting with a space . - tag such dictionaries so they are decoded properly instead of being decoded as if they are a valid tagged it em",1510.0
465,2015-06-30 19:33:04,2015-06-20 15:53:40,Add pop and setdefault to AppCtxGlobals,"While easy to implement with a custom ` app_ctx_globals_class ` class , I believe these two methods are useful enough to add them to the default class . Especially setdefault makes lots of sense if you e.g . cache something on the app context globals and thus want to do something like this :",1509.0
466,2015-06-17 11:17:12,2015-06-17 11:01:56,Do n't pass version to tox explicitly,I 'm using nginx + gunicorn + flask . With request.url_root i can not detect schema correctly because it 's always http ! although i 'm routing with https configured in nginx ! e.g i browse this url :,1502.0
467,2015-06-13 15:55:12,2015-06-13 15:19:37,Fix project name in CONTRIBUTING.rst,"The following code is in the tutorial : The second arg to ` execute ` should be a tuple , not a list . ` g.db.execute ( 'INSERT INTO entries ( title , text ) VALUES ( ? , ? ) ' , ( request.form [ `` title '' ] , request.form [ `` text '' ] ) ) `",1499.0
468,2015-06-06 02:17:57,2015-06-06 02:05:59,Show original autodoc signatures,Alternative to # 1403,1483.0
469,2015-06-03 15:46:11,2015-06-02 20:17:12,Handle empty deque on errorhandler lookup .,"After registering a custom errorhandler by exception class , raising any unhandled exception in a view function swallows the error and instead throws an ` IndexError ` on trying to look up the appropriate handler . This patch avoids the uninformative ` IndexError ` and preserves the original exception by looping until the deque of classes is empty , not forever .",1480.0
470,2016-02-17 21:02:22,2015-05-10 00:03:04,Add X-Forwarded-Proto header to proxy setup example docs,"The ` ProxyFix ` middleware provided by Werkzeug uses this header for returning accurate values from request.is_secure and request.scheme . Without adding this header , Flask wo n't properly detect when it is being served over HTTPS and will fail to generate proper external links and cause certain extensions ( e.g . Flask-OAuthlib ) to function improperly . Adding this header to the example setup should reduce issues encountered by developers when following this guide . Credit where due : I tend to find this information when I need it in a [ blog post ] ( http : //cramer.io/2013/06/27/serving-python-web-applications/ ) by David Cramer .",1456.0
471,2015-05-07 11:24:13,2015-05-06 23:08:34,Add pip install -- editable . to contributing docs,"The ` ProxyFix ` middleware provided by Werkzeug uses this header for returning accurate values from request.is_secure and request.scheme . Without adding this header , Flask wo n't properly detect when it is being served over HTTPS and will fail to generate proper external links and cause certain extensions ( e.g . Flask-OAuthlib ) to function improperly . Adding this header to the example setup should reduce issues encountered by developers when following this guide . Credit where due : I tend to find this information when I need it in a [ blog post ] ( http : //cramer.io/2013/06/27/serving-python-web-applications/ ) by David Cramer .",1455.0
472,2015-05-02 19:58:44,2015-05-02 00:34:28,importlib deprecated in 3.4,"Replace the use of importlib by types.ModuleType in 3.4+ closes gh-1449 Not sure how to make a test for it , either I need to monkeypatch stdlib , or have the tests run with ` -W error ` which I 'm not sure how .",1450.0
473,2015-04-19 09:37:55,2015-04-19 04:42:59,Fix pep8 with logging,"This should make the logging module more pep8 compatible . This PR fix problem issued in # 1440 . I made this PR to update first argument of class method in logging module from ` x ` to ` self ` in * * master * * branch . However , i can not make sure if i should at the same time make a PR to also clean the ` logging ` module in * * 0.10-maintenance * * . BTW , is the maintenance branch read-only ( i checked out that last commit in * * 0.10-maintenance * * is about years ago ) ? If so , what is the difference between a tag and this maintenance branch .",1441.0
474,2015-04-11 22:06:57,2015-04-11 18:55:03,Some cleanup for errorhandling refactor,"See # 1291 @ flying-sheep : Please set your editor to use 4 spaces instead of tabs , and do n't have whitespace in blank lines ( use the pep8-tool to check ) .",1431.0
475,2015-04-11 16:12:46,2015-04-11 15:26:08,Added docs for the error handler rework,Documenting the changes in # 1291,1429.0
476,2015-04-03 19:46:33,2015-04-03 19:44:27,Fix a few spelling mistakes in the docs,"Reverts mitsuhiko/flask # 1418 , not sure why that broke the build",1418.0
477,2015-03-23 15:41:29,2015-03-22 11:49:30,Always run memory tests,fix # 1370,1389.0
478,2015-03-12 08:36:07,2015-03-12 04:14:56,Update quickstart.rst doc for awareness of Flask extensions,Addresses concerns in issue # 532 regarding not knowing about flask extensions as it is not mentioned the quick start guide . Maybe this can help increase the awareness of flask extensions to new users ?,1376.0
479,2015-03-05 21:25:45,2015-03-05 21:05:08,Update README for clarity and to remove redundancy,"Addresses some concerns presented in issue # 1157 , although I do n't think it is necessary to add click to the README .",1364.0
480,2015-03-05 19:59:12,2015-02-28 06:30:53,Add exception details to response,"This pull request is in regards to issue # 1317 . I reproduced the 400 error that kenjones-cisco was talking about using this code : gist.github.com/keyanp/bc4d1a3a1e6c5cb5170a So I took a look at making a subclass of BadRequest , but indeed this is part of Werkzeug . So instead I was thinking of adding the ValueError content to the shell console or to the response body . By just adding the exception to the response body it at least improves the 400 message and probably will make it easier to debug . The response body ( which is also in the gist above ) would now look like : If this is n't really that helpful perhaps I can just output the exception details to the console ? Could someone point me in the direction of where in the codebase Flask handles console logging ?",1360.0
481,2015-02-26 09:43:34,2015-02-26 01:03:15,Add skip to fix unnoticed bug with import migration tool,"See pull request # 1342 . Fixes logic so that imports that should not be changed are skipped , which was not happening correctly before . This was huge oversight on my part . I added a test for normal imports that should n't be touched .",1358.0
482,2015-03-05 20:55:08,2015-02-19 16:00:14,"improve grammar , make format consistent , and improve readability",Simple changes to documentation of patterns/flashing.html,1354.0
483,2015-02-09 12:42:06,2015-02-09 09:03:46,Signals.rst : Grammar and readability fixes,It would be a nice speed increase for ` pip install flask ` if the PyPI release had wheel distributions .,1349.0
484,2015-02-08 12:42:37,2015-02-07 23:07:23,"Remove bad security advice about send_file , fixes # 1345",Signed-off-by : Edward Z. Yang ezyang @ cs.stanford.edu,1346.0
485,2015-02-06 22:34:52,2015-02-06 21:12:00,make test_request_preprocessing_early_return more thorough,"On http : //flask.pocoo.org/docs/latest/api/ # flask.send_file the following is suggested : > Please never pass filenames to this function from user sources without checking them first . Something like this is usually sufficient to avoid security problems : > > This is _terrible_ advice . It would be much better to tell people that if they want to pass in filenames , they should use http : //flask.pocoo.org/docs/latest/api/ # flask.send_from_directory instead .",1343.0
486,2015-02-18 17:16:28,2015-02-06 19:44:15,flask.ext Import Migration Tool # 1135,This is an early commit to get some feedback . This script supports single imports in two formats . I am concerned that the naive approach is not what you guys are looking for . I would obvious add support for multiple imports and the third case ` import flask.ext.foo ` = > ` import flask_foo ` . But the solution is definitely super hacky .,1342.0
487,2015-02-06 17:03:41,2015-02-06 17:01:14,Use PEP440-compatible dev version,This fixes the problem of python packaging considering an installed dev version older than 0.0 .,1341.0
488,2015-02-05 21:11:07,2015-02-05 20:48:11,Improve docs of signatures of before/after/teardown callback funcs,I got bitten by the not-optimally-documented fact that the return values of ` before_request ` callbacks are n't ignored .,1338.0
489,2015-03-05 21:03:54,2015-01-21 05:13:53,Clarify contents of request properties .,Change URL to IRI and update examples to include extended characters . See also this question on stackoverflow.com : http : //stackoverflow.com/questions/28056959/in-python-flask-how-to-access-complete-raw-url-prior-to-un-escaping/28058628 # 28058628,1325.0
490,2015-01-16 14:06:08,2015-01-16 09:39:17,grammar fixes,salutations should be followed by a comma : http : //www.grammar-monster.com/lessons/comma_with_dear_hello_and_hi.htm Example of other frameworks doing it correctly : http : //guides.rubyonrails.org/getting_started.html # hello-rails-bang https : //docs.djangoproject.com/en/1.7/intro/tutorial03/,1318.0
491,2015-01-13 22:55:53,2015-01-13 22:52:48,Replace TextField with StringField in registration page example,Replaces TextField with StringField for the username and email . Per http : //wtforms.readthedocs.org/en/latest/whats_new.html # deprecated-api-s TextField has been deprecated in WTForms .,1315.0
492,2015-01-03 13:00:39,2015-01-02 02:35:43,Happy New Year 2015,"Running OS X Yosemite . I had the dev server running and was toggling the debug option . i.e . app.debug= { True , False } in my entry-point file . I started running without debug and was surprised that the server was loading changes I made to my templates without having to restart the server . This is the reason I was toggling the option . Though , this is not the issue , since I later learned that that was the correct behavior . In any case , I proceeded to then set debug to True and save the entry-point file . I may have restarted the server at this point , but either way things were still running regularly . However , trouble ensued when I then commented the line setting debug to True ( thus leaving it set to the default False value ) and saved . After this , I restarted the server , but was met with a traceback ending in : I restarted the server multiple times , before and after relaunching the Terminal app , and was met with this traceback each time . From this I suspected the server process was still running and had been orphaned . Using Activity Monitor , I found a python process running and terminated it . After that , when I tried running the dev server , I received a smaller ( though similarly-ending ) traceback . ( not sure what to conclude from receiving a different traceback ) I did n't get to do much more testing after that . I came to GitHub to begin documenting the bug when my MacBook suddenly restarted . I ca n't say the restart is related to this issue . However , the restart was due to an OS X panic relating to OSXFuse . I 've never had an OS X panic since updating to Yosemite , so I find a correlation to the dev server issue possible .",1303.0
493,2015-04-11 16:13:22,2014-12-23 18:18:53,Fixed and intuitivized exception handling,abandoning pull request # 1281 for this . the rationale for this is to 1. fix some logic flaws 2. make errorhandlers more intuitive by making them rely on exception hierarchy instead of registration order 3 . Enable 500 handlers on blueprint level and all this while without breaking compatibility in not-already-broken usecases ( which rely on the logic flaws i fixed ) TODO : 1. bake this into some tests as well 2. one error says > It is currently not possible to register a 500 internal server error on a per-blueprint level . why is this ?,1291.0
494,2014-12-26 19:14:01,2014-12-20 03:30:34,Fixed # 1288 : app.add_url_rule ( ) should look for OPTIONS methods in a case-insensitive manner,abandoning pull request # 1281 for this . the rationale for this is to 1. fix some logic flaws 2. make errorhandlers more intuitive by making them rely on exception hierarchy instead of registration order 3 . Enable 500 handlers on blueprint level and all this while without breaking compatibility in not-already-broken usecases ( which rely on the logic flaws i fixed ) TODO : 1. bake this into some tests as well 2. one error says > It is currently not possible to register a 500 internal server error on a per-blueprint level . why is this ?,1290.0
495,2014-12-26 19:14:04,2014-12-19 20:39:27,app.add_url_rule ( ) should look for OPTIONS methods in a case-insensitive manner,"add_url_rule ( ) has logic that says that if the user has not included OPTIONS in their methods , flask will automatically provide an implementation . Unfortunately , this logic is only triggered if the method string is OPTIONS in all upper case . So if you 've included lower case `` options '' in your methods you will still end up with the flask-provided options functionality . I think it should be a case-insensitive comparison since all the rest of the routing is all case-insensitive .",1288.0
496,2017-04-08 17:54:21,2014-12-18 13:32:21,send_file fails when filename contains unicode symbols,"Hi . I 've detected an issue with supporting unicode filenames in send_file . If send_file attempts to respond with utf-8 in http headers , the answer is empty , the log contains something like `` http-headers should containbe latin-1 '' . I know that [ browser support IS A MESS ] ( http : //stackoverflow.com/questions/93551/how-to-encode-the-filename-parameter-of-content-disposition-header-in-http ) , but it seems , that sending two filenames ( ` filename= ` and ` filename * = ` ) separated by semicolon should work . I 'd like this to be handled by flask or werkzeug . Will you accept such pull request ?",1286.0
497,2014-12-17 12:28:24,2014-12-15 21:28:02,Update mongokit pattern,"There were some code issues with the current version of the mongokit docs . Specifically , with format strings when you want to format a part of the string and then have the value placed in , you need to use format immediately to avoid a TypeError when mongokit evaluates the string . Also , uses the mongokit ValidationError instead of a plain old Exception",1280.0
498,2014-12-16 19:30:51,2014-12-13 06:59:35,Documentation fixes ( mostly in Tutorial ),"I 'm hoping to work my way through the rest of the documentation eventually , but I decided to start with the Tutorial since it 's a section that I imagine quite a few people read through .",1277.0
499,2014-12-04 21:36:31,2014-12-02 17:13:07,Update information about Python 3,"Python 3 and Flask is a good combination nowadays that works rather well . In fact , [ most PyPI libs ] ( https : //regebro.wordpress.com/2014/10/23/59-of-maintained-packages-support-python-3/ ) are now ported and it 's generally ok to encourage people to use Python 3 for new projects .",1264.0
500,2014-12-07 22:53:07,2014-11-29 17:12:47,Add JSONIFY_END_WITH_NEWLINE config variable,"When ` JSONIFY_END_WITH_NEWLINE ` is set to ` True ` , ` jsonify ` responses will be terminated with a newline character . Defaults to ` False ` for backward compatibility . This came up in the context of https : //github.com/kennethreitz/httpbin/issues/168",1262.0
501,2014-11-12 13:17:31,2014-11-12 12:34:44,Minor typos,[ 404 ] ( https : //archive.today/VkEJb ) on the PDF documentation .,1247.0
502,2014-11-08 23:05:00,2014-11-08 21:22:36,Minor typos,I 'm using Flask v0.10.1 and I have the following project structure :,1245.0
503,2014-11-07 09:24:52,2014-11-06 22:43:37,Minor typos fixed,"According to the Cambridge English Dictionary : `` web server '' == correct , `` webserver '' == incorrect .",1244.0
504,2014-11-06 13:11:47,2014-11-06 07:58:33,Minor typos fixed,"According to the Cambridge English Dictionary : `` web server '' == correct , `` webserver '' == incorrect .",1242.0
505,2014-11-05 08:47:28,2014-11-05 05:12:26,Docs style fixes : `` FOO `` vs ` FOO ` ( reloaded ),Using single backticks and inline markup :,1240.0
506,2014-11-03 17:48:31,2014-11-03 17:13:22,Tweaked sqlite3 documentation,"I thought this sentence was a little confusing when I was reading the docs , so I tweaked it a bit . I also considered wording it as : `` Now , to use the database , all an application must do is either have an active application context ( which is always true if there is a request in flight ) or create an application context itself . '' - > if emphasizing the `` all an application must do '' part seems quite important . Totally understand if this PR seems trivial/unnecessary/etc ; just wanted to try throwing it out there since it was helpful to me . Thank you !",1235.0
507,2014-11-03 10:00:38,2014-11-03 09:30:12,Minor typos and spelling fixed,"According to http : //dictionary.cambridge.org/ `` webserver '' is incorrect , `` web server '' = correct",1234.0
508,2014-10-27 17:31:33,2014-10-27 10:57:13,Typo and cosmetic fixes,"Various typo fixes , wording unifications , and cosmetic changes .",1225.0
509,2014-11-02 19:46:48,2014-10-26 15:44:02,Set TEMPLATE_AUTO_RELOAD default value to None,In accordance with the proposal # 1214 the default value of ` TEMPLATES_AUTO_RELOAD ` is set to ` None ` and by default templates will be reloaded only if the application is running in debug mode . A complete table of the various options : | ` TEMPLATES_AUTO_RELOAD ` | ` DEBUG ` | Templates auto reloaded ? | | -- - | -- - | -- - | | ` None ` | ` False ` | no | | ` None ` | ` True ` | yes | | ` False ` | ` False ` | no | | ` False ` | ` True ` | no | | ` True ` | ` False ` | yes | | ` True ` | ` True ` | yes |,1222.0
510,2014-10-25 10:54:59,2014-10-24 09:25:19,Add trim_namespace argument for app.config.get_namespace ( with tests ),"This pull request is identical with # 1184 . I only added tests for it . @ untitaker , you also are asked to add entry to changelog , but the method ` get_namespace ` was first introduced in version 1.0 : I think that adding another entry in the same list does not make sense .",1213.0
511,2014-10-18 14:20:51,2014-10-18 07:44:16,Corrected api docs,http : //flask.pocoo.org/docs/0.10/api/ # flask.Request.get_json,1208.0
512,2014-10-19 17:53:26,2014-10-14 17:22:40,Deprecate request.json property,"_My colleague said 'get Flask'._ _I said 'Okay ! ... wow , looks cool , and it installs so easily ! ... and this site is even built on it—how delightful ! ... and I can download the docs as a zipped HTML—how convenient ! ... and ... the link 's broken—how sloppy ! ' ; - ) _ Since the site 's supposed to be built on Flask , I thought this would be the place to report this . Please excuse me if this assumption is incorrect . At * * http : //flask.pocoo.org/ * * , which Google took me to , * * clicking either of the latter links in 'Read the documentation or download as [ PDF ] ( http : //flask.pocoo.org/docs/flask-docs.pdf ) and [ zipped HTML ] ( http : //flask.pocoo.org/docs/flask-docs.zip ) ' * * took me to http : //flask.pocoo.org/docs/flask-docs.pdf and http : //flask.pocoo.org/docs/flask-docs.zip , respectively . * * Both 404ed . * *",1206.0
513,2014-10-07 11:09:13,2014-10-03 20:06:03,Add unittest for appcontext_tearing_down signal,"There was no unittest for the appcontext_tearing_down signal , therefore I added one .",1196.0
514,2014-09-28 05:10:27,2014-09-28 01:40:02,Minor typos in sqlite3.rst,Self-explanatory .,1192.0
515,2014-09-25 15:21:44,2014-09-25 13:35:57,Stop recommending Tornado as a WSGI server,"Tornado 's WSGI server is less scalable than the alternatives and only really makes sense when you have a specific need to run both WSGI apps and Tornado-native apps in the same process . This recommendation has been an ongoing source of confusion , e.g . http : //stackoverflow.com/questions/26015116/making-tornado-to-serve-a-request-on-a-separate-thread . Fixes # 986 .",1187.0
516,2014-09-26 17:22:41,2014-09-22 03:06:38,some grammar fixes in docs/appcontext,"I was reading the docs , and it seemed there were a few easy fixes to make . I tried never to change the meaning of a sentence . I hope this is useful , I certainly do n't mean to be insulting . The changes are as follows : - `` in lack of '' - > `` for lack of '' - pillar 's - > pillars - ~~however~~ - a touch of cleanup to the `` two ways '' paragraph - ~~on there~~ - `` database connects '' - > `` database connections ''",1186.0
517,2014-09-18 13:37:43,2014-09-18 09:23:14,"fix typo in in README of examples ( i.e. , filename of test files )","small change here , but I suppose there was typo errors in the README of flaskr & minitwit ?",1181.0
518,2014-09-13 09:47:42,2014-09-13 08:33:45,Update tests section in README file,Removing the old ` run-tests.py ` documentation . Maybe there 's something more you want to add .,1175.0
519,2014-09-10 05:37:25,2014-09-10 00:13:41,very minor spelling fixes,"On ubuntu 14.04 , python3 -mpdb ... raises exception after hitting ' c ' to run on the 'import flask ' statement : Traceback ( most recent call last ) : File `` /usr/lib/python3.4/importlib/util.py '' , line 95 , in find_spec spec = module . * * spec * * AttributeError : 'module ' object has no attribute ' * * spec * * ' Works fine for python 2.7 though . Here is the myflaskapp.py : import flask app = flask.Flask ( * * name * * ) @ app.route ( '/ ' ) def root ( ) : return ( 'root ' ) if * * name * * == ' * * main * * ' : app.run ( debug=True )",1172.0
520,2014-09-12 19:54:59,2014-08-31 21:56:45,Port testsuite to py.test,See https : //github.com/pocoo/metaflask/issues/8 - [ x ] Remove assertion methods - [ x ] Remove useless classes - [ x ] Remaining testcase classes should n't inherit from `` TestFlask '' - [ x ] Remaining testcase classes should n't use setup and teardown but autouse-fixtures - [ x ] Remove ` suite ` functions,1165.0
521,2014-09-20 07:00:03,2014-08-31 19:28:24,Adds 2 tests for Flask.run method,I saw ` Flask.run ` method was untested and I think a couple of tests would n't hurt ( and increases code coverage ) . I would love to hear some feedback about it even if it is not merged at all . I feel pretty enthusiastic about contributing to Flask since I 'm a heavy user of the framework .,1164.0
522,2014-08-28 15:02:27,2014-08-28 14:59:30,Fix warnings and code styling in the doc,"There was a blank line missing that was generating a warning when building the doc . Also , a removed function from cli.py was left in api.rst ( without_appcontext specifically ) so this was also generating warnings . Also corrects the format for a code block and adds a link to Werkzeug 's Headers class .",1161.0
523,2014-08-28 14:12:27,2014-08-28 14:12:23,Do n't mention Flask dev releases anymore,Fix # 1155,1160.0
524,2014-08-22 22:18:15,2014-08-14 20:17:40,typos,"See : http : //flask.pocoo.org/docs/appcontext/ There seems to be two main issues with this page . 1 . I 'm not sure how to say it , but the prose is vague and lacks focus . The effect in any case is that the concepts are difficult to grasp . [ 1 ] [ 2 ] [ 3 ] 2 . Syntax errors and wordiness [ 4 ] [ 5 ] [ 6 ] [ 1 ] `` The application setup state in which the application implicitly is on the module level . '' [ 2 ] `` In contrast , during request handling , a couple of other rules exist '' [ 3 ] `` There is a third state which is sitting in between a little bit . '' [ 4 ] `` The main reason for the application ’ s context existence is that in the past a bunch of functionality was attached to the request context in lack of a better solution . Since one of the pillar ’ s of Flask ’ s design is that you can have more than one application in the same Python process . '' [ 5 ] `` To make an application context there are two ways . '' [ 6 ] `` The context is typically used to cache resources on there that need to be created on a per-request or usage case . ''",1150.0
525,2014-08-12 18:46:56,2014-08-11 09:57:57,Add documentation about url_for 's default scheme,Fix # 1129,1144.0
526,2014-07-31 08:33:45,2014-07-30 01:44:03,Quoted all HTML attributes .,Addressed issue # 1134,1138.0
527,2016-04-04 18:39:21,2014-07-27 11:33:29,Deprecate flask.ext and create migration tool to flask_ *,sad,1135.0
528,2014-07-31 08:33:54,2014-07-26 09:08:25,Quote all HTML attributes,Just what the title says . See # 1116 for a longer discussion on the issue .,1134.0
529,2014-07-26 08:42:47,2014-07-24 15:05:49,Update doclinks,Fix redirects and broken links,1132.0
530,2014-07-26 15:26:31,2014-07-14 09:56:00,Fix some typos,"In current design , methods decorated with ` app.context_processor ` is expected to return a dictionary . What was the reason behind this design ? Ca n't we have decorator like ` app.context_processor ( 'name ' ) ` on method itself so that we can decorate method directly .",1117.0
531,2014-07-27 11:22:36,2014-07-10 14:01:48,Update python3.rst,Fixes # 1101,1112.0
532,2014-06-17 19:01:56,2014-06-16 20:09:19,Update mod_wsgi.rst,"Changes deprecated pkg_add to pkg install , adds documentation for yum",1090.0
533,2014-06-17 19:03:42,2014-06-16 11:02:22,Update installation.rst,Add descriptions about how leave from the virtual environment .,1088.0
534,2014-06-06 15:02:38,2014-06-04 13:49:33,Get rid of _tag- > closure- > _tag reference cycle,This makes Flask discard less object graphs with reference cycles .,1079.0
535,2014-05-27 16:10:37,2014-05-17 06:45:08,Doc for add check upload file,"The grammar fixes make it a little easier to read . The re-wording , especially in the Before/After Requests section , makes the docs much clearer .",1062.0
536,2014-05-16 14:16:13,2014-05-13 21:14:44,Fixes # 1051,"` python -mflask ` is fine as is , but I think ` python -m flask ` is clearer to the reader . I 'd suggest that the script info paragraph be re-written too - it feels stilted and redundant as is . I 'm not comfortable enough with the material to attempt to clear it up without fear of losing meaning/specifics though . apologies to armin or kenneth if doc fixing PRs are an annoyance , trying to procrastinate exam study ! : )",1057.0
537,2014-05-12 16:23:23,2014-05-11 06:10:18,fix a small mistake in setup.rst,I need this change because I have to override a couple of Jinja2 's templating functions . Better than monkeypatching flask.app.Environment . ; - ),1054.0
538,2014-05-15 10:30:39,2014-05-09 01:08:04,Docs : cli.rst typos,"There are a couple of typos in cli.rst file . The command 'python -m flask ' appears with no space between the m and the f of flask ( I presume this is an error ) . In Script Info section , the first reasons is spelt 'rasons ' ( OK , not so important I know , but ... )",1051.0
539,2014-05-09 13:50:11,2014-05-07 20:37:39,Docs : fixes,"There are a couple of typos in cli.rst file . The command 'python -m flask ' appears with no space between the m and the f of flask ( I presume this is an error ) . In Script Info section , the first reasons is spelt 'rasons ' ( OK , not so important I know , but ... )",1050.0
540,2014-04-26 00:12:51,2014-04-23 14:47:31,few mispelling errors,"Hi guys , Is there some way of sending an email to the admins when the rate limit is reached for certain tasks ? Thanks . David .",1032.0
541,2014-04-26 00:14:37,2014-04-21 22:41:28,Fix typos in docstrings and comments in run.py,"Hi , I have a blueprint defined as : auth_login = Blueprint ( 'auth_login ' , __name__ , template_folder='templates ' , static_folder='static ' , static_url_path='/static ' ) I am registering it as : app.register_blueprint ( auth_login , url_prefix='/user ' ) I have a route : @ auth_login.route ( '/ < username > / ' ) def profile ( username ) : return render_template ( 'profile/user.html ' , username = username ) With this setup , the /user/ < username > endpoint never manages to load the static files as I get , '' GET /user/ < username > /static/css/lib/bootstrap.min.css HTTP/1.1 '' 404 - `` GET /user/ < username > /static/css/lib/font-awesome/css/font-awesome.min.css HTTP/1.1 '' 404 - What I really want is to look into the static folder of the root application and not the blueprint , so I want it to request '' GET /static/css/lib/bootstrap.min.css HTTP/1.1 '' 200 - Is it possible to configure this via static_folder or static_url_path so that the route will look for the static files at root and not relative to where the blueprint is mounted ?",1030.0
542,2014-04-14 23:02:52,2014-04-11 20:44:22,fix typo,"Cloned the latest Flask source from github with the intention of increase flasks test coverage and the first thing I did was run-tests . Output was , Unsure at this point if this is a coverage.py issue or a flask issue .",1019.0
543,2014-04-06 17:11:17,2014-04-05 09:40:15,Fix when release date is not today,"Also , some fixes for PyFlakes Original commit by @ dongweiming at a05c4038706f3a95776adea376bc664c0714b426 See # 842 I think the reason why nobody can reopen this PR is because his fork is gone .",1014.0
544,2014-04-14 23:03:04,2014-04-02 01:17:05,missed word .,request tstack - > request context stack,1012.0
545,2014-05-09 13:48:36,2014-03-26 17:03:10,Tweaks to docs/patterns/viewdecorators.rst,"Just one change to the example code in the @ templated example - render_template was missing . Plus a few commas , missing words and such in the text , hopefully nothing controversial . Also , my first pull request , so let me know if I 've done anything wrong or any conventions I 'm not adhering to .",1010.0
546,2014-03-21 20:21:18,2014-03-15 13:46:34,harmless comment fixes/typos,"Flask is great , but it would be nice if you document a quick start with PyCharm",1000.0
547,2014-03-13 18:24:53,2014-03-05 23:23:57,Clarify the after_request argument,"Make it a bit clearer that it 's an instance of response_class that is expected , not the actual response_class class .",997.0
548,2016-06-16 20:40:24,2014-02-13 20:09:50,Can not lazily load views in 0.10.1,"I was lazily loading views in 0.9 , and some views needed to use the same function , e.g . The cause is the same as # 796 , but [ your current documentation still says this is a valid way of having a central URL map ] ( http : //flask.pocoo.org/docs/patterns/lazyloading/ ) . Is there a way around this , beyond just storing every single ` LazyView ` in a dict and looking it up each time ` url ( ) ` is called ? The above documentation needs to be updated to reflect the answer .",981.0
549,2014-03-21 20:36:12,2014-02-10 20:24:44,Update windows installation and other notes,"Making allowance for new convenience of ` get-pip.py ` that automatically installs setuptools and pip together . Stop recommending distribute , which has now been merged into setuptools .",977.0
550,2014-02-08 17:19:21,2014-01-29 19:37:00,"GET params discarded by flask test client , when using full url","Using full URL in flask test client . GET params are silently discarded : This may also be considered inconsistent with the behaviour on POST params . If this is not the way one should use test client , maybe put a warning in the docs ?",968.0
551,2014-02-08 16:26:27,2014-01-25 01:23:30,added a note to the api documentation about JSON_SORT_KEYS . Fixes # 922,See # 922 for the conversation and rationale .,962.0
552,2014-02-08 17:30:55,2014-01-11 00:14:08,Use json method of requests.Response,You may wish to port this to 0.10 branch if you 'd like to release a wheel for 0.10 as well .,946.0
553,2014-02-08 17:32:01,2013-12-31 22:33:16,Enable tuple responses with headers without status,"Hi , In my flask apps I 've overridden the behavior of Flask.make_response to enable tuple responses with headers but skipping the status in the case of the default status ( 200 ) . I know that this in practice only means a less coma and status , but thinks this enable a more beautiful way to return tuple responses with the default status code ( or status directly passed into the Response constructor ) but contains other headers . So instead of today",938.0
554,2014-02-08 17:47:22,2013-12-17 06:06:15,Update celery.rst,"With the latest version of Celery ( 3.1.6 ) , following this tutorial produces the following error when attempting to start the celery worker : Using ` app ` as the variable name here confuses celery . Renaming ` app ` to ` flask_app ` in the tutorial solves the issue and allows the celery worker to start successfully .",931.0
555,2014-02-08 17:46:15,2013-12-14 08:08:55,fix a etags bug when sending a file stream with a name,"When sending a file stream with a name , but the file does n't exist , when adding etags , an exception will raise . ` OSError : [ Errno 2 ] No such file or directory : `",930.0
556,2014-02-08 16:26:27,2013-12-05 08:57:41,Template filter : tojson and sort_keys,"I spent couple of hours yesterday trying to understand why ` tojson ` output had a different order from ` json.dumps ` order . The thing is that Flask sets ` sort_keys ` to ` True ` by default ( see https : //github.com/mitsuhiko/flask/blob/master/flask/json.py # L102 ) . Is it possible to add something regarding this , and the ` JSON_SORT_KEYS ` in the doc ?",922.0
557,2014-02-09 13:07:15,2013-12-03 21:18:14,Fix relative send_from_directory for package apps,"The bug is basically : if a relative directory path is provided to [ ` send_from_directory ` ] ( https : //github.com/mitsuhiko/flask/blob/master/flask/helpers.py # L585 ) , in a [ package application ] ( http : //flask.pocoo.org/docs/patterns/packages/ ) things get messed up , and it does n't work at all : I threw a longer explanation of the current issue [ in a gist ] ( https : //gist.github.com/uniphil/7777590 ) , and made a simple repo showing the problem [ here ] ( https : //github.com/uniphil/flask-package-sendfile-test ) . My proposal is to expand the ` directory ` argument of ` send_from_directory ( directory , filename , * * options ) ` to an absolute path using ` current_app.root_path ` if it is not absolute . This change will affect the arguments passed to ` send_file ` for module apps , but it 's just breaking out the absolute path earlier , so I do n't _think_ this should break anything that currently works ? All the tests pass . I also could n't figure out where a test should go for this , or if a test should even be added . I could n't find any tests for ` send_from_directory ` ( there are some for ` send_file ` ) , and I also did n't know the best way for using a package app in a test . If you 'd like tests added for this behavior I 'd be happy to write them with a few pointers on how to approach it .",921.0
558,2014-02-09 13:20:46,2013-10-30 00:45:43,URL Reversing in Quickstart Doc # 779,Updated quickstart to make clear that URL reversing refers to the use of url_for ( ) to build the URL . Issue # 779,897.0
559,2013-10-16 17:09:41,2013-10-15 19:48:42,Do n't refer to flaskext in app.extensions docs,"Could it be the case that instantiating the flask application opens some file and does n't close it ? I have tests with py.test and I did n't specify the scope of the flask application fixture to be 'sesson ' so the flask application was instantiated basically for every test that needs it ( we are using url map actively ) . At some point I get the traceback related to the limit of the files open etc . I understand that probably you do n't have to instantiate more than one app per process , but it might be also interesting to clean up the resources . At least if you test the app creation with different configurations . Maybe I could call something in the fixture finalizer to release the resources ? self = < Application 'httpapi.server ' > > > E AttributeError : 'NoneType ' object has no attribute 'get_filename' /System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/pkgutil.py:313 : AttributeError",891.0
560,2013-10-16 17:06:01,2013-10-12 22:14:45,Updated some typos,Fixed some incorrect variable references .,886.0
561,2014-03-21 21:01:56,2013-10-11 22:11:09,Update url_for documentation for Flask.url_build_error_handlers,"Previous documentation referenced a non-existent property on the Flask object called `` build_error_handler '' . This should actually reference Flask.url_build_error_handlers . I created an example gist with the broken documentation version and the working version here , https : //gist.github.com/jmhobbs/6942394 for Flask 0.10.1",885.0
562,2014-02-09 13:27:35,2013-10-11 12:40:41,"Update appfactories.rst , make extension related section clearer","Previous documentation referenced a non-existent property on the Flask object called `` build_error_handler '' . This should actually reference Flask.url_build_error_handlers . I created an example gist with the broken documentation version and the working version here , https : //gist.github.com/jmhobbs/6942394 for Flask 0.10.1",884.0
563,2014-02-09 13:27:12,2013-10-03 14:57:11,before_app_first_request strange behaviour,"Hello , When you set an initialization function with the before_app_first_request decorator you expect this function to be launched once * * before * * the first request . But , if this function takes some time to execute , flask may respond to requests before it has finished . Here is the code of Flask.try_trigger_before_first_request_functions ( self ) Now , imagine 2 concurrent requests when the server starts : - the first one takes the lock and sets _got_first_request to True BEFORE calling functions in self.before_first_request_funcs - the second sees that _got_first_request is True and returns The fix is simple : just put self._got_first_request = True after the calls to functions in self.before_first_request_funcs .",879.0
564,2014-03-21 20:43:20,2013-09-30 18:09:10,Add TEMPLATES_AUTO_RELOAD config key,"Currently jinja environment checks for changes in the template file every time you need to render it . But disk I/O is costly and it may be viable to disable this feature in production . I added ` TEMPLATES_AUTO_RELOAD ` config option which allows to set ` auto_reload ` attribute of ` jinja2.Environment ` to ` False ` when the application is running in non-debug mode . This allows to make the template rendering a little more efficient because it disables a checking of changing templates file each time before template is rendered . In some situations , this could give a significant increase of performance ( from 60 to 200 rps in my case ) . Unfortunately , if you want to do the same by overriding of ` Flask.jinja_options ` attribute , it would be uncomfortable because a reloading of templates is needed for debugging . This change should not affect existing applications . Also , it might make sense to disable reloading by default .",876.0
565,2014-03-21 20:39:13,2013-09-07 16:06:45,Minor test fixes,"1 . In ` test_no_error_swallowing ` the path is hardcoded as ` 'flask_broken/__init__.py ' ` , however on Windows ` co_filename ` will return ` 'flask_broken\\__init__.py ' ` , and so the assertion will fail . The fix uses ` os.path.join ` to generate a path suitable for the current system . 2 . In ` test_send_file_object ` the file is first opened in text mode , which converts newlines to ` \n ` . However , later on the same file is opened in binary mode using ` app.open_resource ` , and so newlines are not converted . On Windows this leads to a failing test because Git converts all newlines to ` \r\n ` on checkout . Basically , when opening in text mode we get ` \n ` newlines , and when opening in binary mode we get ` \r\n ` newlines . The fix solves this by opening the file in binary mode the first time , as well .",862.0
566,2014-03-21 21:08:34,2013-09-04 09:47:31,Add a non-decorator version of the error handler register function,"The main application object has a register_error_handler function which mirrors the decorator 's functionality . According to the principle of least surprise , make sure blueprints also have this convenience function .",859.0
567,2013-09-03 17:47:46,2013-09-03 08:02:21,typo in quickstart.rst,"in following line : This behavior allows relative URLs to continue working even if the trailing slash is ommited , consistent with how Apache and other servers work . Also , the URLs will stay unique , which helps search engines avoid indexing the same page twice . `` ommited '' should be `` omitted ''",856.0
568,2013-09-03 17:58:04,2013-08-23 05:25:27,corrected documentation for Request get_json ( ),Minor documentation update to the get_json method .,843.0
569,2014-03-21 20:54:35,2013-08-10 15:38:39,Update blueprints.rst - Add Error Handlers,"`` Added information about custom error handlers in Blueprints with example based simple_page . Includes link to errorpages . '' I was looking for a simple explanation of the use Blueprint-specific error handlers . Could n't find one in the documentation , but I did figure out how to do it by looking at the actual Blueprint code . I figured I 'd add this to the doc to save others a little time in the future .",830.0
570,2013-08-04 20:59:22,2013-08-04 08:47:14,Changed sort_json test to test str sorting,"Tests when simplejson was installed were failing because of a change in how it sorted in v3.0.0 . This change first tests it via normal int sorting for stdlib json then if that fails , it tests against str sorting for simplejson .",819.0
571,2013-08-01 08:15:18,2013-08-01 02:08:32,"Fix doc bug in patterns/sqlite3 , clarify use of make_dicts","- It was unclear from reading the documentation where the author intened make_dicts to go , so I added that information - The docs had a bug in the code , referring to ` cursor ` in the argument list but ` cur ` in the generator expression",817.0
572,2013-07-31 14:44:45,2013-07-30 20:38:16,Fix # 815,"- It was unclear from reading the documentation where the author intened make_dicts to go , so I added that information - The docs had a bug in the code , referring to ` cursor ` in the argument list but ` cur ` in the generator expression",816.0
573,2013-07-31 14:44:46,2013-07-30 19:39:03,methods argument of Flask.route should be validated at import time,"I 've seen that people often write ` @ app.route ( ... , methods= [ `` POST '' ] ) ` as ` @ app.route ( ... , methods= '' POST '' ) ` , which wo n't error immediately , but return a ` 405 ` status code later . Which is very unfortunate , as people might think the methods parameter is a space or comma separated string with methods . Sometimes i write that myself because i still do n't memorize that this part of Flask 's API is actually that `` heavy '' on the syntax . So what i propose is to add the following normalization code in ` Flask.add_url_rule ` :",815.0
574,2013-07-29 20:24:49,2013-07-29 17:44:49,Remove Werkzeug bug workaround from flask/app.py,"According to the note in the comment , you had to check to make sure that the defaults were not an empty dictionary because of a bug in Werkzeug pre-0.7 . Since Flask officially requires 0.7 or greater , we can remove this little workaround .",811.0
575,2013-07-26 23:28:08,2013-07-26 23:21:29,Fix # 782 -- /tmp/ in tutorial,"Here is the test case for # 798 . It should broke in current Flask , and after # 798 it wo n't .",808.0
576,2013-07-26 21:47:11,2013-07-22 14:13:21,cleared up confusion for from_envvar in docs,"This attempts to clear up confusion caused in the tutorial using ` .from_envvar ( ) ` . I do n't think it is perfect but it might be a start . The issue presented in issue # 783 was that someone might try to replace the ` .from_object ( ) ` line instead of just appending the ` from_envvar ( ) ` . While , when I first read the tutorial , I did n't interpret it that way , I can see where the confusion could come from . How this PR attempts to fix this issue if by taking out the language about removing the ` .from_object ` method and just mentioning that you could use them alongside one another to create a robust setup . Thoughts welcome !",800.0
577,2013-07-22 13:43:21,2013-07-22 09:12:38,api.rst : fix some spelling/typos,"This attempts to clear up confusion caused in the tutorial using ` .from_envvar ( ) ` . I do n't think it is perfect but it might be a start . The issue presented in issue # 783 was that someone might try to replace the ` .from_object ( ) ` line instead of just appending the ` from_envvar ( ) ` . While , when I first read the tutorial , I did n't interpret it that way , I can see where the confusion could come from . How this PR attempts to fix this issue if by taking out the language about removing the ` .from_object ` method and just mentioning that you could use them alongside one another to create a robust setup . Thoughts welcome !",799.0
578,2013-07-01 13:43:38,2013-06-27 20:37:57,quickstart guide - wording changes for clarity,changed `` an 200 OK error code '' to `` a 200 OK status code '',784.0
579,2013-07-26 23:28:09,2013-06-27 18:24:19,Flaskr tutorial suggestion - Use DATABASE='flaskr ' instead of DATABASE='/tmp/flaskr ',Title says it all . 1 .. DATABASE='flaskr ' works for windows and linux 2 .. DATABASE='/tmp/flaskr ' only works for linux and probably OS10,782.0
580,2014-08-09 16:20:53,2013-06-26 22:25:15,Doc suggestion : In QuickStart 10.1 define `` Reversing '' before using it,"Under the URL Building section . I read , `` Reversing is often more descriptive than hard-coding the URLs . '' And I thought , `` I have been asleep while reading again '' . So I did a search on the Quickstart , and this is the first instance of the term `` reversing '' in the text . I could n't make any sense of `` reversing ' '' . Worse how could it be more descriptive when I have no idea what it is . After searching a bit , I suggest the following minor change to text at the beginning of the section . Replace : '' If it can match URLs , can Flask also generate them ? Of course it can . To build a URL to a specific function you can use the url_for ( ) function . '' With : '' If Flask can match URLs , can it also generate them ? Of course it can . To build a URL for a specific function you can use the url_for ( ) function . This is called reversing the view . '' Do I have this right ? Django at least talks about functionality that is similar to what you are talking about here . Terminology is never an exact match across similar tools . So if my suggestion is not correct , then it is demonstration of how I came to the wrong conclusion . Regards , Flask is definitely cool . -m",779.0
581,2013-05-30 14:08:17,2013-05-30 14:04:14,"fixing issues found while debugging , fix error in 1 test","The sweet web app console built into [ Firebug ] ( https : //www.getfirebug.com ) is easily accessible to JavaScript programmers via ` console.log ( ) ` . The [ FireLogger ] ( http : //firelogger.binaryage.com ) extension lets server-side languages like PHP and Python write directly to the same console . In Python 's case , via the [ FirePython ] ( https : //pypi.python.org/pypi/FirePython ) module . < a href= '' http : //static.binaryage.com/c079fa5c_shared_img_firelogger4php-mainshot-full.png '' target= '' _blank '' > < img src= '' http : //static.binaryage.com/ddfd1510_shared_img_firelogger4php-mainshot.png '' > < /a > Unfortunately , Python integration is web-framework specific . Django is directly supported ; Flask is not . FirePython already supports WSGI , so using it with Flask / Werkzeug should be straightforward . But it 's not -- at least not for me . The documentation basically says `` read the source and figure it out . '' Given that I 'm a complete novice with Flask 's WSGI underpinnings , my efforts have flopped around without success . So this is a request to those in the Flask community who are conversant with WSGI , Werkzeug , and ` logging ` to have a look and provide a recipe for how to link these individually great , but as yet not-talking-to-one-another , components . Looking at the code , I 'd bet there 's a < 15 lines of code incantation that would do the trick ; I just ca n't see the right permutation . FWIW , this is the opposite of a one-off support request ; easy Firebug logging would make an awesome app debugging facility for many Flask / webapp developers .",751.0
582,2013-05-26 18:41:28,2013-05-26 18:38:57,replace 1/0 by 1 // 0 to get rid of DeprecationWarning ( and PEP8 issue ),"http : //flask.pocoo.org/extensions/ every http : //packages.python.org url needs to be changed to http : //pythonhosted.org , because the former will be shut down eventually ( and today it faced dns problems , so I noticed it ) .",747.0
583,2013-05-25 20:06:43,2013-05-25 20:02:04,fix typos,"http : //flask.pocoo.org/extensions/ every http : //packages.python.org url needs to be changed to http : //pythonhosted.org , because the former will be shut down eventually ( and today it faced dns problems , so I noticed it ) .",746.0
584,2013-05-25 19:01:49,2013-05-25 19:00:52,fix data types in after_request test,TODO : why was that bug not causing / displaying an exception somehow ? should give a TypeError in py 3.3 .,745.0
585,2013-05-25 18:28:17,2013-05-25 18:25:26,2 small fixes for metaclass and import usage,TODO : why was that bug not causing / displaying an exception somehow ? should give a TypeError in py 3.3 .,744.0
586,2013-05-25 17:49:26,2013-05-25 17:47:23,fix iterator in testsuite helpers,TODO : why was that bug not causing / displaying an exception somehow ? should give a TypeError in py 3.3 .,743.0
587,2013-05-25 17:35:08,2013-05-25 17:14:58,"fix minitwit/flaskr test errors , improve docs about file open mode","app.open_resource needs to get called with the correct mode param ( python3 will read bytes [ not str ] if the wrong mode is used ) , add mode param docs . rv.data is bytes , fix the data type we compare it with to be also bytes",742.0
588,2013-05-22 19:16:25,2013-05-22 19:12:05,Fix leak in leak detection code,"If ensure_clean_request_context found a leak , it would raise an AssertionError and not clean up the leak , and therefore affect other testcases .",739.0
589,2013-05-22 15:11:47,2013-05-22 15:10:45,Fix some literals,"hi , I have thought that if flask use a URLConfig moudule instead of the derecrator of functions as its router , which like Django urls.py , and built-in regular-expression will help it make big projects . yes or no ?",737.0
590,2013-05-22 14:20:42,2013-05-21 23:38:52,some more work on py 3.3 port,"still lots of bytes vs unicode stuff to do also some strange test fails on 2.7 , please have a look",736.0
591,2013-05-18 15:24:01,2013-05-18 15:16:58,automated change using python-modernize : use 'as ' in except,"still lots of bytes vs unicode stuff to do also some strange test fails on 2.7 , please have a look",732.0
592,2013-05-18 15:18:05,2013-05-18 15:16:02,"document python 2.6 minimum requirement , remove stuff that refers to 2.5","still lots of bytes vs unicode stuff to do also some strange test fails on 2.7 , please have a look",731.0
593,2013-05-31 23:20:06,2013-05-06 13:53:54,Explicitly state that the jsonify method changes on request,"Hi , This drove me crazy , until I took a look at the source code of the jsonify method . In the documentation for jsonify , it should state that it uses the request.is_xhr method to render either compact JSON or pretty print JSON depending on the X-Requested-With header . Thanks for Flask .",725.0
594,2013-05-14 10:25:34,2013-04-05 10:50:50,Update README of example Flaskr,"No need to manually initialize the database with a call to ` init_db ( ) ` as this call is done before ` app.run ( ) ` in flaskr.py , when you run the file .",709.0
595,2014-03-21 21:03:02,2013-04-04 09:57:34,Mention register_error_handler in errorhandler doc,"The documentation for errorhandler gives `` app.error_handler_spec [ None ] [ 404 ] = page_not_found '' as an example for adding an error handler without the decorator . However , register_error_handler appears to be the correct way to do this ( added 0.7 ) , and it eliminates the problems with modifying error_handler_spec directly .",707.0
596,2013-05-14 10:25:50,2013-03-27 00:04:21,AJAX with jQuery documentation update,Corrected the link to the Google Developer hosted libraries site in the documentation ( docs/patterns/jquery.rst ) . Updated the example to point to the current jQuery 1.9.1 .,702.0
597,2013-04-01 03:05:58,2013-03-26 21:34:32,Fixed a few typos in the quickstart doc,Minor typo fixes and slight rewording .,701.0
598,2013-03-21 20:57:29,2013-03-16 10:14:09,Added more information about app factories .,Fix # 691,693.0
599,2013-03-06 17:49:23,2013-02-28 10:12:33,Update css.rst,Improved consistency : lower cased all hexadecimal descriptions of colors .,689.0
600,2013-03-21 20:58:53,2013-02-28 03:58:54,Flash messages signals,"If we send a signal when a template is rendered why not when a message is flashed ? One real world use case is in tests , this signal should make flash messages expectation easier to implement .",687.0
601,2013-03-06 17:52:47,2013-02-22 15:13:25,Tiny changes to docs,I 've been re-acquainting myself with flask after a number of months and found a couple of things in the docs that I felt could do with a fix . I wo n't be offended if you think these are pointless changes and discard - but thought I 'd submit a PR anyway ...,683.0
602,2013-01-25 02:55:21,2013-01-24 23:53:19,update README to markdown,"Most of the README was already in markdown , replaced the ` ~ ` with ` # # ` headers and the opening section with ` # ` header . Here is a screenshot or you can checkout the live formatted doc at https : //github.com/schneems/flask . ! [ ] ( http : //cl.ly/image/1L241I0E3f0R/content.png )",669.0
603,2013-01-25 02:57:45,2013-01-17 23:13:13,adding ` _scheme ` parameter to ` url_for `,"In order to better facilitate generation of URLs that make use of an HTTPS URL scheme this patch adds a parameter with this specific purpose in mind . To achieve this we explicitly pass in a param , ` _scheme='https ' ` , and then set the ` url_scheme ` attribute of our ` MapAdapter ` instance appropriately . Importantly , ` _external=True ` must be set in order for this to work properly . As such , failure to do so results in a ` ValueError ` being raised .",667.0
604,2013-01-27 00:56:07,2013-01-05 21:57:19,@ app.teardown_request function does n't called in debug mode [ NOT-A-BUG ],"UPD : not a bug , see https : //github.com/mitsuhiko/flask/issues/661 # issuecomment-11975645",661.0
605,2013-01-25 03:01:43,2013-01-04 09:13:05,WSGI specification has finalized for Python 3,Mention Python 3.x is not supported,660.0
606,2013-01-27 00:46:24,2013-01-02 17:14:34,Add template_global decorator,Adds a decorator to allow developer to register global functions .,657.0
607,2012-12-27 15:23:30,2012-12-26 05:10:19,SQLite does n't recognize data type `` string '',"If you submit a field with an integer and commit to DB as a string , SQLite will cast it to an integer , which can cause problems . I was making something based on the Flask tutorial and I could n't figure out why my data was coming back as type `` int '' when I had inserted to the DB as `` string '' . The field needs to be something that has text-affinity in SQLite , so I changed it to type `` text '' . Hope this helps ?",655.0
608,2012-12-27 15:22:05,2012-12-13 10:05:10,docs/extensiondev : Use ` current_app ` instead of ` self.app `,Wrote `` stdin '' instead of `` stdout '' . Fixes # 647,653.0
609,2012-12-13 00:06:18,2012-12-10 17:38:48,Added hint about print statements in CGI .,Fix # 646,647.0
610,2013-01-25 04:13:31,2012-11-08 19:57:47,Fix # 623,I think that it would be useful to be able to add configuration items to a blueprint and then have those merged into the app configuration on load . My thinking is simply that there might be configurations specific to your blueprint that should have default values stored as part of the blueprint . I suppose this feature could also lead to use cases where people make blueprint simply to hold different configuration for the application .,630.0
611,2013-01-25 04:22:02,2012-11-05 00:11:47,Use sqlite3.Row factory in Flaskr ( # 588 ),"As pointed out in issue # 588 sqlite3.Row should be used instead of using casting to dict ( ) . Also altered the `` Easy Querying '' Patterns example to include the more correct way to return rows as dicts . Did not touch Tutorial examples ( `` Views '' ) , as these are not up to date with the current Flaskr code , and the `` Show Entries '' section points out the `` Easy Querying '' section on how to convert to a dict ( ) .",625.0
612,2013-01-25 04:13:31,2012-11-02 18:56:35,missing text in url_for ( ) app context RuntimeError message,"In ` flask/helpers.py ` , near the top of ` url_for ( ) ` there is this code : It looks like that ` RuntimeError ` message is cut off . This has to be executed when ? : )",623.0
613,2013-01-25 04:21:32,2012-10-19 16:18:47,"jQuery example : submit on enter , focus field on load , ajax to callback function , `` to ' .","- Highlight first input on page load - Enter sends submit request - After submit first input refocused , selected - Fix double quote - > single quote - Submit is a callback function ! [ screenie ] ( http : //i.imgur.com/GVvPb.png )",617.0
614,2012-10-17 23:36:48,2012-10-16 21:02:34,Minor fix to views.py testsuite .,"The builder/ci server for github is using python 2.5 , the views.py testsuite uses the with statement , and thus flask/testsuite/views.py requires from * * future * * import with_statement at the beginning .",614.0
615,2012-11-16 02:37:36,2012-10-11 21:06:34,docs/deploying/wsgi-standalone : Add Twisted Web .,"I 've been meaning to do this for quite some time , but I never got around to it . Hopefully this is neutral and useful enough to be included in the main docs .",609.0
616,2012-10-07 10:49:37,2012-10-05 05:53:32,Update docs/quickstart.rst,Removed incorrect syntax and simplified remaining sentence .,607.0
617,2012-10-07 13:33:30,2012-10-03 22:01:00,Regarding JSON inside < script > tag and HTML5 parser,"A JSON string in an HTML ` < script > ` tag may cause the parser to enter the [ script data double escaped state ] ( http : //www.w3.org/TR/html5/tokenization.html # script-data-double-escaped-state ) , in which ` < /script > ` would not return the parser to the data state as expected . sample.html :",605.0
618,2012-10-07 13:46:25,2012-09-28 11:12:01,Getting raw POST data for whatever mimetype,"Ok , this issue have been raised twice , but i got an use-case that i do n't know how to handle without the raw POST data . If you use PubSubHubbub api , you can can give a secret , and any data that you will receive will be signed : - When you subscribe to a new hub , you can give a `` secret '' - When you get a POST request , you get a ` X-Hub-Signature ` in the format `` sha1 : xxxx '' - The signature is based on the secret you give at the subscription + the raw request data - The request data are POSTed , and accessible with request.form To verify the signature , i think it should be something like : I 've tried to use ` json.dumps ( request.form ) ` to get the initial raw data , but it does n't work , maybe cause of a space or a line break . ( The real use case here is using the PubSubHubbub hook from Github , to get a CIA.vc like service )",601.0
619,2012-10-07 14:04:33,2012-09-26 15:16:16,can not run testsuite on Windows,Attempting to run tests of Flask itself fails immediately . This is due to a call to os.path.samefile ( in flask/testsuite/__init__.py ) which is only available on Unix .,600.0
620,2012-09-23 01:50:12,2012-09-13 18:16:56,Update flask/templating.py,Fixed a typo in the docstring .,594.0
621,2012-10-07 10:54:58,2012-09-06 17:11:37,fixed some typos,"The 'Pluggable Views ' documentation includes the line but is n't the second parameter to add_url_rule the 'name ' , and the third parameter the view_func ?",591.0
622,2012-10-07 10:57:29,2012-08-27 21:29:05,Implement support for X-HTTP-Method-Override in flask.views.MethodView .,"When an incoming request contains the X-HTTP-Method-Override header , the value of that header is used as the view method to be executed instead of the original incoming HTTP verb . This helps support dumb ( er ) webservers and proxies that do n't understand newer HTTP verbs ( e.g . PATCH ) , of which Amazon 's Elastic Load Balancer service is a member . I only added the functionality to ` flask.views.MethodView ` , because I was unsure about what would be a good way to do it with the standard ` dispatch_request ` ; developers often introspect the HTTP method inside of decorator-based routes when supporting more than one verb in a route , so should the ` request.method ` value be overridden completely , or should devs be required to check for the X-HTTP-Method-Override header themselves ? Neither option seems very appealing to me .",582.0
623,2012-08-01 16:34:50,2012-08-01 08:33:33,Doc improvements for url_for ( ),"Recently I had to ask from IRC how to generate proper full url using ` url_for ( ) ` , so I think that its docs should at least mention ` SERVER_NAME ` . Also fixes a formatting error in another docstring .",571.0
624,2012-10-07 15:12:19,2012-07-29 08:41:40,Warn or raise when overriding an endpoint,"It is apparently a common mistake to make multiple/distinct view functions sharing the same endpoint , the last overriding the earlier ones in the ` app.view_functions ` dict . With a decorator : http : //stackoverflow.com/questions/11064263/flask-custom-decorator-breaks-the-routing With class-based views : http : //stackoverflow.com/questions/11700698/flask-route-query-parameter Is there an use case to using ` app.route ( ) ` or ` app.add_url_rule ( ) ` with an existing endpoint and overriding it ? I think it is more often a mistake than not . I suggest that such cases issue a warning or even raise an exception , in order to catch the mistake early . In uncommon scenarios where overriding is actually desired , the user can always use ` del app.view_functions [ endpoint ] ` before registering the new function . ( I can provide a patch , but I ’ d like to discuss the idea first . )",570.0
625,2012-07-21 11:57:40,2012-07-21 11:56:59,Small improvement to docs,"Hi , the old regular expression in the lighttpd deployment documentation would also apply to any paths that start with '/static ' , but _are_ not actually the static/ directory - for example , /staticfoo would also be matched and passed through . As this can produce some nasty and hard-to-find bugs ( when a route starts with 'static ' ) , I 've fixed the regex . It now matches /static , /static/ , and everything below it . /staticfoo is no longer matched . - Sven",562.0
626,2012-07-20 21:31:55,2012-07-20 21:29:46,Fixing some wording in the design documentation .,Fixing some awkward wording .,559.0
627,2012-10-07 13:06:24,2012-07-16 19:18:11,Added Windows documentation for mod_wsgi usage,The explanation for how to use mod_wsgi does n't explain that WSGIDaemonProcess only runs on Linux . I added a windows-correct explanation . Sources : https : //groups.google.com/forum/ ? fromgroups # ! topic/django-users/pEDfNWyYv54 http : //stackoverflow.com/questions/2802681/mod-wsgi-for-multiple-trac-projects-windows,550.0
628,2012-07-04 19:18:28,2012-07-04 19:18:04,Changed tutorial to be more explicit,I had a newbie wonder in confusion about where the stuff would go . This should fix that .,539.0
629,2012-10-17 23:48:21,2012-07-01 11:55:08,Add ` JSON_ASCII ` option to remove unneeded decoding on client side,This patch will remove weird behaviour and add ` JSON_ASCII ` configuration options . I also had an audacity to correct mimetype encoding for JSON to 'utf-8 ' by default . I do n't sure what that patch must be applied in master but I just want to place it here for other guys : ),535.0
630,2012-06-25 17:35:46,2012-06-25 17:33:47,Fixes # 519 by adding return statement,"I had a friend that was going through the quickstart , and he had absolutely no idea that there were any extensions available for flask . He was using SQLAlchemy directly and was becoming quite frustrated quickly . Since an ecosystem is clearly part of a framework , I think we should add some hints about extensions throughout the documentation . Not necessarily usage examples , just `` hey , this extension might be useful to you '' .",531.0
631,2012-06-17 13:00:28,2012-06-12 17:26:30,Added link to extensions in `` Hook . Extend . '' section .,"Apologies if this was fixed , but I ca n't find a solution online . I 'm following the tutorial in a virtualenv and when I try to run the flaskr.py file , I get : ImportError : No module named inspect I 've seen references to this being a corrupted sys.path in virtualenv but not everyone seems to have this problem . I 'm using Python 2.7.2 on OSX with the virtualenv setup described on the flask website .",525.0
632,2012-06-17 13:22:30,2012-06-06 16:19:15,Docs : Improvements in docs/deploying/CGI.rst,It helps to find module when translated from,522.0
633,2012-06-25 17:35:47,2012-05-31 04:42:58,Quickstart login example has unclear comment .,"The login example in the quickstart guide has an incorrect or unclear comment at the end . If the comment is referring to the < code > error = 'Invalid username/password ' < /code > line , then this code will NOT be executed if the request method was GET . If the comment is meant to mean that code placed after the comment would execute , then it should be re-worded as such .",519.0
634,2012-06-17 13:22:54,2012-05-31 03:24:55,Emended extensiondev.rst,Rephrased a region of the report of the Registry .,517.0
635,2012-05-30 00:04:23,2012-05-28 01:42:07,Travis,"I am very new to python , flask , heroku , git etc . but I was able to easily and successfully flow through the quickstart guide and get the minimal app deployed on heroku . I was very impressed with documentation flow and accuracy . However , I ran into a significant stumbling block with the `` HTTP Methods '' section . There were two issues that caused me stumble and I think others may stumble here as well . The most significant issue was that the login example code calls descriptive stubs that do n't exist . This may be fine for those that already understand what the example is showing , but for people like me that learn by trying to run the code examples , it took quite a while to figure that my app was crashing due to the non-existent function calls . The second issue involves the difference between the flask routing and what I was familiar with for form processing in PHP . I initially expected something along the lines of a login.py script that would get invoked by < code > action= '' http : //mysite.com/login.py '' < /code > attribute of the form . Eventually I figured out how it worked by creating what I believe would be a more easily understood example for the method and form functionality . This is the code that I eventually created to learn and confirm the functionality . Please consider revising the Flask example ( s ) to show code that can actually be executed like the previous examples I have tried , and to show what the HTML would look like if needed .",515.0
636,2012-10-08 07:11:34,2012-04-24 09:44:08,safe_join with ' .. ',"Is this a problem ? I think it could be if we ’ re exposing not just files but also directories ( maybe making indexes , ... ) . Should safe_join check for ` ' .. ' ` and not just ` ' .. / ' ` ?",501.0
637,2012-06-17 13:24:35,2012-04-22 02:44:07,fix for https : //github.com/mitsuhiko/flask/issues/494,Flask.inject_url_defaults ( ) incorrectly splits endpoint 's to get blueprint 's name . replaced call to endpoint.split ( ) by endpoint.rsplit ( ) on line 1471 of flask/app.py,497.0
638,2012-05-08 13:07:35,2012-04-20 11:28:55,padded attribute on jsonify not functioning as expected,When calling jsonify with the padded argument as True the expected behavior is padded JSON response that uses the callback argument . Example,495.0
639,2012-04-12 19:45:23,2012-04-12 16:15:01,few typos,"I tripped over this recently , and felt it was worth noting more clearly in the docs that the local internal webserver is HTTP/1.0 only , which is likely to cause AJAX libraries to fail in hard to notice ways ( JQuery is an example ) . HIH Thank you",489.0
640,2012-04-24 03:45:52,2012-04-09 21:35:11,Revise updated foreword ( rduplain ) .,"At the Flask sprint , @ garbados split the foreword into two sections in # 438 , which I approve . Now it 's waiting on me to pass through the new foreword and revise as needed . Excellent contribution ; just needs a committer to make a pass .",484.0
641,2012-04-24 01:21:35,2012-03-20 15:45:58,Add hooks for to override url_for behavior .,"An app can inject_url_defaults but it can not otherwise change the url_for behavior . I 'd like for url_for to check the current_app to see if it provides its own url_for . If it does ; use it . Otherwise proceed as currently implemented . An alternative would be to register url-building handlers , but this would not fit well with multiple-app processes given that the current url_for is module-level . I 'm writing a Flask extension to provide cross-application URL-building , and I 'd like to add a custom ` url_for ` method to all Flask instances which have been passed through ` init_app ` .",456.0
642,2012-04-24 01:37:32,2012-03-19 00:07:35,`` Example code leaked '' on all but Python 2.7,"Running tox , I get the following error for Python 2.5 , 2.6 and PyPy , but not 2.7 . I have no idea where the real problem is . Is it in CPython/PyPy rather than Flask ?",452.0
643,2012-04-24 01:47:47,2012-03-18 23:21:13,Recent Werkzeug required ?,"Running the test suite from git master in an old virtualenv with Werkzeug 0.6.2 installed , I got a failure went away when upgrading Werkzeug to 0.7 or the latest 0.8.3 : The fix was hinted by the test having different code paths for Werkzeug 0.7 and 0.8 . Flask ’ s setup.py requires Werkzeug > =0.6.1 , should that be changed to 0.7 ?",449.0
644,2012-04-01 15:37:44,2012-03-16 08:40:02,Debug example with run_simple and flask app .,"Added an example of how to configure debugging with run_simple , it has to be enabled both for the Flask app and the Werkzeug server . Took me a while to figure this one out , might be useful to other folks .",446.0
645,2012-03-14 00:00:18,2012-03-12 23:41:41,Reword the docs for writing a flask extension,"There was a minor bug in the example extension that's been fixed . I also updated the description of the fixed code accordingly , and expanded on the usage of _request_ctx_stack.top for adding data that should be accesible to view functions . I verified that the existing code as is works as expected .",440.0
646,2012-04-01 15:42:39,2012-03-12 22:30:45,"Add new exceptions module , to implement JSONHttpException and JSONBadRequest .","This is an update to pull request # 423 , to move exception classes out of wrappers.py",439.0
647,2012-03-14 02:17:29,2012-03-12 22:21:07,Improve foreword,"I 've changed a few words , but there 's plenty I 'd like to change / restructure about this Foreword . Who is this foreword intended for ? Experienced Pythonistas who are new to Flask ? Folks who are new to flask regardless of their Python experience ? Right now , this is a good foreword for the first group : its examples cover advanced topics that newer users wo n't understand , and whose only effect will be to scare those users . I would recommend splitting the foreword into two parts : ( 1 ) For new users ( 2 ) For experienced coders . This first portion would cover , in broad strokes , Flask 's philosophy : convention over configuration , what `` micro '' means , `` simple tasks should be simple '' , etc . The second portion , which we may want to hide on another page , will cover the implementation details of Flask 's design decisions that advanced users will want to know about , such as the use of thread-local objects . If that 's a structure the community feels good about , I 'd be happy to draft it up .",438.0
648,2012-03-12 18:33:43,2012-03-12 18:03:23,Doc grammar fix from pycon sprints .,Minor grammar fix .,435.0
649,2012-03-13 20:59:31,2012-03-12 15:30:42,Introduced a method to adjust static file cache-control headers based on filename,I needed this method to adjust the cache control headers for .js files that one of my applications was statically serving . The default expiration is buried in an argument to ` send_file ` and is set to 12 hours . There was no good way to adjust this value previously . So I added a new method to ` _PackageBoundObject ` named ` get_static_file_options ` that returns a dict ( empty by default ) of keywords to pass into ` send_file ` . This can be overridden in the ` flask.Flask ` derivative to adjust values based on the debug flag or filename .,433.0
650,2012-03-13 20:51:53,2012-03-12 03:56:57,Fix issue 140,This allows for a view function to return something like :,430.0
651,2012-03-13 18:47:04,2012-03-12 03:34:09,"add heroku/deploy options to quickstart , and add clearer links in tutorial setup",as suggested in : http : //feedback.flask.pocoo.org/message/279,427.0
652,2012-04-01 15:23:26,2012-03-02 10:51:42,Fixed assumption made on session implementations,"In the snippet 'session.setdefault ( ... ) .append ( ... ) ' , it was being assumed that changes made to mutable structures in the session are are always in sync with the session object , which is not true for session implementations that use a external storage for keeping their keys/values .",417.0
653,2013-06-19 15:03:30,2012-03-01 13:53:31,`` silent '' keyword argument only partially implemented by Config.from_envvar,` Config.from_envvar ` raises an exception if the configuration variable exists and references a file that does not exist . The expectation is that the following test case should pass :,414.0
654,2012-06-25 17:49:11,2012-03-01 08:28:02,Blueprint example app,"As per # 404 . Though i have a couple of issues : 1 . I ca n't mount blueprint 's static under `` / '' , would be good to show how static could be inside blueprint too ( # 348 ) 2 . For some reason , if i register same blueprint under ` / ` and ` /pages/ ` , / works as expected showing me index template , but /pages/ redirects back to / . Is it desired behavior ?",413.0
655,2012-03-13 18:43:13,2012-02-26 20:47:07,Remove redundant words from quickstart .,"Add ` flask.helpers.jsonify_status_code ` function , a generalization of ` flask.helpers.jsonify ` which allows the user to set HTTP status code on JSONified responses . Documentation change , public API change , and additional test added as well . I 'm not totally sure that this is important enough to be part of the public API of Flask , but I 've used this pattern enough in my code that I thought it might be worth at least a pull request discussion .",411.0
656,2012-01-31 15:05:03,2012-01-31 14:32:11,Hyphenate `` class-based '',makes it more readable ( IMO ),392.0
657,2012-01-26 18:26:18,2012-01-24 10:10:59,Flask documentation in ePub/Mobi format as well,"In the future please consider to publish the flask documentation not only in PDF but also in formats easily readable by an ebook reader like Kindle or Nook . At least for me it 's much easier to read longer documentation on a e-ink device rather than a monitor , and PDF are rendered quite awfully on my Kindle 3g . I see that there 's a builder for Sphinx that permits to build epub files along with their HTML versions here : http : //sphinx.pocoo.org/builders.html # module-sphinx.builders.epub ePub would be a easier format to convert , through Calibre we could have a 1:1 conversion in MOBI format too . Thank you",388.0
658,2012-01-23 19:51:15,2012-01-23 19:40:23,documentation : minor stylistic adjustments,rewrapped lines ( for short paragraphs ) - please let me know whether you prefer no rewrapping in the future ( cf . # 369 ),387.0
659,2012-03-14 00:20:23,2012-01-17 20:15:07,JSONP inside of jsonify with tests,There is a other implementation of JSONP inside of the _flask.jsonify_ function with tests . It works well with jquery .,384.0
660,2012-01-18 00:44:26,2012-01-17 04:25:58,Consider debug=True in test client .,"If the test client could set debug=True , it would allow testing with assertions in view functions hit by the test client . When updating tests for pull request 336 , I noticed the testing pattern of making assertions inside an inner view function -- while clever -- must be done carefully . Because the test client does not set debug=True , the exceptions caused by the assertions were swallowed ( which could have resulted in silently failing tests ) . With debug=False in the test client , you have to verify the status code in the test client to ensure all assertions pass , which the test case now does . http : //github.com/mitsuhiko/flask/blob/master/flask/testsuite/basic.py # L363 Here 's the pull request for reference : http : //github.com/mitsuhiko/flask/pull/336",381.0
661,2012-01-18 23:59:43,2012-01-16 12:53:34,Can not run flask on app engine,"File `` /Users/aksonov/PycharmProjects/issuengine/flask/app.py '' , line 289 , in * * init * * instance_path = self.auto_find_instance_path ( ) File `` /Users/aksonov/PycharmProjects/issuengine/flask/app.py '' , line 577 , in auto_find_instance_path prefix , package_path = find_package ( self.import_name ) File `` /Users/aksonov/PycharmProjects/issuengine/flask/helpers.py '' , line 532 , in find_package filename = loader.archive AttributeError : 'HardenedModulesHook ' object has no attribute 'archive' INFO 2012-01-16 12:52:07,534 dev_appserver.py:2832 ] `` GET / HTTP/1.1 '' 500",380.0
662,2011-12-27 18:09:16,2011-12-27 17:47:37,Quickstart : Variable Rules Section,"If you paste the code from `` Variable Rules '' into your test app ( hello.py ) , it generates error messages when you go to those URLs . That code needs some fleshing out so that it does n't break ; for example : @ app.route ( '/user/ < username > ' ) def show_user_profile ( username ) : # show the user profile for that user return `` foo % s '' % username @ app.route ( '/post/int : post_id ' ) def show_post ( post_id ) : # show the post with the given id , the id is an integer return `` bar % d '' % post_id",370.0
663,2012-01-04 23:05:16,2011-12-27 10:06:58,documentation : stylistic adjustments,"fixed various stylistic issues in an effort to slightly improve readability notes : - most changes/decisions are subjective ( i.e . these are merely recommendations ) - I could n't come up with reasonable criteria to split this into separate commits ( so feel free to revert changes after pulling , should you decide to do so ) - I intentionally did not rewrap lines to avoid diff noise - best reviewed with ` git diff -- ignore-all-space -- color-words ` - I 'm not yet intimately familiar with Flask or RST , so please review carefully Please let me know whether this is useful at all . If so , I might put some effort in reviewing a few more chapters . If not , that 's alright too .",369.0
664,2011-11-20 15:55:50,2011-11-20 00:23:00,session is saved before @ after_request callbacks,"This makes it impossible to add data to session in said callbacks . For example , the following code does not work , because session is never stored :",351.0
665,2011-11-20 16:00:14,2011-11-05 13:05:21,Fix issue # 338,"Commit 51e4a58a fixes issue , commit e345a3af fixes a string formatting issue that came up while testing .",345.0
666,2012-01-16 18:56:06,2011-11-02 19:21:12,Additions to Working with Other Debuggers section,Added details on how to make Flask 's debugger work with Aptana/Eclipse .,343.0
667,2011-11-20 16:00:11,2011-10-20 18:16:10,TypeError in `` Method Views for APIs '',"Following the example code in [ Method Views for APIs ] ( http : //flask.pocoo.org/docs/views/ # method-views-for-apis ) results in : Either the ` post ( ) ` method needs to take a ` user_id ` ( probably does n't make sense ) , or an HTTP POST needs its own url_rule .",338.0
668,2012-10-07 10:51:51,2011-10-06 18:03:45,Flask.template_test ( ),"While there is template_filter ( ) decorator for creating jinja2 custom filters , it 's good idea to add template_test :",332.0
669,2011-09-24 18:28:11,2011-09-21 23:58:02,Move Some Context Preservation Logic into App,"Right now a test client can preserve the context for a little longer , so can exceptions . However there is no information if there is a context `` on hold '' on the stack which leads to the problem that if you continue to trigger exception you build up items on the stack in debug mode for nothing . There should always only be one context on the stack preserved and if another request comes in it should be removed . This might also make the test client cleaner .",326.0
670,2011-09-17 20:20:31,2011-09-16 22:51:29,Blueprint.app_url_value_preprocessor does n't work correctly .,"The code contains a typo , and additionaly it registers a blueprint-local preprocessor instead of a global one .",324.0
671,2016-06-05 21:23:25,2011-09-05 15:42:13,Example @ login_required decorator confusing,"Several people on IRC have failed to use this decorator correctly . The problem is they forget to pass the `` next '' value along in their POST of the login form . The situation could be improved with a note in the docs for view decorators . The confusion typically is that they think they have a `` next '' value in request.args , because they do in the GET request to their login view , and then suddenly for no apparent reason it 's not there - because it 's a new request , the POST request of the login credentials . The solution is to add a hidden input with the value of the next URL :",313.0
672,2011-08-31 13:17:10,2011-08-30 22:14:25,Fix for d5cd4f8 which broke install on Windows,"When the testsuite was added to setup , it tries to add the test apps as directories . This breaks the install on Windows because the copy command used by setuptools ca n't copy directories recursively in Windows . The fix is to use the include_package_data setting rather than specifying data directories by name . If directories should n't be added they can be filtered using the exclude_package_data setting .",311.0
673,2011-09-25 17:12:56,2011-08-30 12:24:36,Switch to primitive types in the config,Right now PERMANENT_SESSION_TIMEOUT can only be a datetime.timedelta object which is annoying . Make it possible to set this to an integer .,310.0
674,2011-09-07 09:44:08,2011-08-29 19:42:58,Fix session loading in flask.testing.TestClient.session_transaction ( ),"` session_transaction ( ) ` currently does not load the session correctly , as ` environ_overrides ` is never used .",309.0
675,2011-08-31 15:33:17,2011-08-25 10:47:48,route decorators custom enpoints,Allow passing the endpoint to the route decorators on Flask 's ` application ` and ` blueprints ` .,307.0
676,2011-08-17 13:05:58,2011-08-17 05:53:04,Improve configuration docs a bit,"I actually wanted to add only the comment to the configuration file , but then spotted some places where docs could be improved . If you do n't agree with them , then just commit the comment change for conf file example ; )",304.0
677,2011-08-07 23:26:51,2011-08-07 22:53:01,make_release.py wo n't work for August dates,"Hi Armin - I am using your make_release.py script in Bulbs , and the script was breaking when I was trying to make a release today because the parse_date function was replacing the the `` st '' in August ( this may be an issue for other months too ) : def parse_date ( string ) : string = string.replace ( 'th ' , ' ' ) .replace ( 'nd ' , ' ' ) \ .replace ( 'rd ' , ' ' ) .replace ( 'st ' , ' ' ) return datetime.strptime ( string , ' % B % d % Y ' ) - James",299.0
678,2011-08-05 14:16:28,2011-08-05 14:14:48,Fix typos,"2 spelling errors , one incorrect usage , and 1 awkward construction .",297.0
679,2011-08-05 10:36:04,2011-08-05 09:09:29,Traceback logs not available for POST requests,"When the app runs in debug mode , exceptions in handling GET requests would be displayed on the page and logging output . But for POST requests , it only returns `` 400 Bad Request '' , without any traceback , making debugging difficult . If it 's a bad idea to display the traceback in web page , at least it should be displayed in the logging output .",294.0
680,2011-08-09 14:16:14,2011-08-02 14:31:19,request.json is documented twice,` flask.request.json ` is documented twice in http : //flask.pocoo.org/docs/api/ # incoming-request-data The two descriptions should be merged . Also they should say what happens when the request is not JSON . Is the .json attribute None ?,290.0
681,2011-07-23 18:15:01,2011-07-23 18:14:02,Intersphinx link fixes .,"Document the debug param for Flask.run , it is not part of * * options given to run_simple . I am not sure bool ( ) is appropriate .",284.0
682,2011-07-19 23:20:28,2011-07-19 21:44:15,Minor documentation grammar / typo fixes,Just spotted these .,282.0
683,2011-09-25 16:49:15,2011-07-14 13:00:50,route / add_url_rule Documentation,"The docs are kinda inconsistent between route ( ) and add_url_rule . The former should be documented as a decorator version of the latter which is true since Flask 0.3 at least . Also with 0.7 and 0.8 we have some attributes on view functions that can have meanings attached . These now have a separate headline in the API docs , but I guess it would make sense to tidy this up a bit .",279.0
684,2011-06-28 14:09:21,2011-06-28 13:14:58,Typo fix in code samples for Pluggable Views doc .,"helpers.py in 0.7 uses the with_statement , but does n't import it from * * future * * . This breaks appengine compatibility , at least when running with their runtime locally . Fix is to do as app.py does and import with_statement .",262.0
685,2011-06-27 07:21:00,2011-06-27 05:59:05,Make Tests for bluprints with dotted Names,"We want to encourage blueprint names with dots in , make sure they work .",258.0
686,2011-06-27 05:58:10,2011-06-27 01:47:35,Pronoun gender fixes in documentation,This changes several instances of `` he '' to `` he or she '' in various places in the documentation .,257.0
687,2011-06-27 07:40:49,2011-06-24 14:38:20,Reports of sessions not working when SERVER_NAME set with port,"Not sure how cookies are supposed to work with ports right now , but we got reports that they do n't work with an explicitly set port . Investigate .",253.0
688,2011-08-26 10:21:52,2011-06-17 02:05:04,Split up Testsuite,After the 0.7 release we really should be splitting up the testsuite into more than one file : ),246.0
689,2011-05-30 19:45:08,2011-05-30 19:41:48,Clarify in docs that the SERVER_NAME config can also take a port number .,"Change the documentation for the SERVER_NAME configuration value to tell that it can also take a port number . The port number is actually for url_for ( ) to work with subdomains , as in issue # 209 .",238.0
690,2011-06-24 14:30:56,2011-05-30 13:18:27,A fix for send_file with unicode filenames .,"send_file uses adler32 to build etags ( which is enabled by default ) . adler32 takes a byte-string , and will try to encode unicode strings as ASCII which may fail . This patch encodes unicode filenames as UTF-8 before passing them to adler32 .",237.0
691,2011-05-07 22:28:05,2011-04-27 21:47:38,Corrections to fabfile example,"I could be wrong , but I think there are a couple of errors in the example fabfile . This fixes them . Commit c6e4d743 is really what you want , the other two can be ignored . Could n't figure out how to have make git behave .",228.0
692,2011-06-25 18:20:58,2011-04-26 11:44:40,Application Dispatching > Combining Applications documentation is incorrect,"The example in the docs under _Application Dispatching > Combining Applications_ is incorrect : There is one hint of this in _Quickstart > Hooking in WSGI Middlewares_ and another in the API reference for the ` Flask ` class , but neither of them is returned in Google searches about _Flask Werkzeug middleware_ for example .",225.0
693,2016-06-03 16:53:19,2011-04-19 08:43:40,Subclassing of Flask should be documented,"- It should be made clear that for some problems ( such as a custom Jinja environment ) , subclassing is _the_ solution and Flask is explicitly designed for it . - Some examples and best-practices would be helpful , maybe as a 'pattern ' . How to extend rather than replace the defaults , how to deal with immutable containers etc . - The reasons for the need to subclass , and the design choice of immutable containers , could be explained and defended . ( Needed at construction time ? ) On IRC , questions for which subclassing is the answer , are not uncommon , and at the same time few realize that you can and _should_ do this for some things , and they 're often confused as to _how_ it 's properly done . If I find the energy I might try to draft some of the above .",221.0
694,2011-03-14 20:14:11,2011-02-17 21:49:45,after_request behavior regarding exceptions,"after_request is not executed if an exception happens in debug mode . This is annoying for databases because it requires that you restart the server to tear down the connection . Sometimes that 's what you want , otherwise not . The original intention was that you want to continue having the transaction in the interactive debugger . Generally however we need a separate decorator that always executes after request , even if an exception happened . Signals are one option , if that is what we want we should document it better . I would prefer a separate decorator however . Related feedback issues : - http : //feedback.flask.pocoo.org/message/108 - http : //feedback.flask.pocoo.org/message/76",174.0
695,2011-02-06 00:41:07,2011-02-04 03:00:55,"Wrong `` Date '' http header , breaks clientside caching for static files , lots of 304 responses","quoting from flask.helpers.send_file : # if we know the file modification date , we can store it as the # current time to better support conditional requests . Werkzeug # as of 0.6.1 will override this value however in the conditional # response with the current time . This will be fixed in Werkzeug # with a new release , however many WSGI servers will still emit # a separate date header . if mtime is not None : rv.date = int ( mtime ) These 2 lines break clientside caching because they emit a wrong Date header . As by rfc 2616 , the Date header should tell when the Response originated from the server ( == current server time ) , but this code sets it to the mtime of the static file ( == some time in the past ) . This obviously at least breaks Firefox 3.6 , because it 'll always consider its cache entry as stale then ( even when the Expires date and max-age would normally not lead to staleness ) . Wrong behaviour : 1st request - > 200 , all further requests ( directly afterwards ) - > 304 Correct behaviour ( wrong code removed ) : 1st request - > 200 , ( NO further requests happening until Expires is reached ) , next request ( after expiry ) - > 304 Wrong behaviour was introduced after 0.6.2 due to unknown reasons by : https : //github.com/mitsuhiko/flask/commit/85ff63c32e7237280bff3293481a371fb3da180c I do n't see how this shall `` better support conditional requests '' , it rather looks like breaking caching and doing lots of unneeded requests .",164.0
696,2010-12-06 10:16:20,2010-12-03 18:42:28,Allow custom TestClient,"It would be useful to make the test client class an overridable property ( as is currently the case with response_class ) . It would then be possible to insert a custom TestClient class with additional methods ( for example , a `` login '' method ) in unit tests . For example :",148.0
697,2010-11-19 20:25:51,2010-11-09 21:30:12,Pointless example for Signal.connected_to,"The example last in [ this ] ( http : //flask.pocoo.org/docs/signals/ # subscribing-to-signals ) section is pointless because the ` recorded ` list is never yielded and it is not reachable from anywhere . ` connected_to ` yields ` None ` . It 's still a meaningful pattern for like what Flask-Testing does , appending to ` self.templates ` which in deed is reachable from tests . What would be a sensible rewrite ?",143.0
698,2010-11-01 23:03:57,2010-10-25 15:19:45,signals.rst,"This ... Example subscriber : : ... the two last lines must be ... from flask import template_rendered template_rendered.connect ( log_template : renders , app )",133.0
699,2010-08-20 16:16:27,2010-08-20 07:22:53,"` url_for ( `` static '' , ... ) ` with ` subdomain ` problem","The version is 0.6 . I made a ` flask.Module ` with ` subdomain ` option . The url rule for ` static ` , which is added automatically does n't have a ` subdomain ` option .",108.0
700,2010-08-07 11:03:11,2010-08-06 12:25:47,` pydoc flask ` [ or vars ( flask ) ] fails,Steps to reproduce :,105.0
701,2010-08-06 17:29:03,2010-08-06 10:09:11,send_file in flask 0.6 issues,"See there : http : //hg.moinmo.in/moin/2.0-dev/rev/58eb8f978188 http : //hg.moinmo.in/moin/2.0-dev/rev/25de9bb78a9f Please apply upstream , having to have patched files is obviously a pain for packaging .",104.0
702,2010-08-07 11:41:13,2010-08-03 21:53:49,Wrong import in Errorhandling,The example at `` Logging to file '' has 'from logging.handlers import TheHandlerYouWant' though it should be 'from logging import TheHandlerYouWant ',102.0
703,2010-08-03 10:20:29,2010-07-31 21:05:44,Inconsistency in docs/testing.rst,"The first time the FlaskrTestCase source code is shown the setUp method looks like this : Note ` self.db_fd , flaskr.app.config [ 'DATABASE ' ] = tempfile.mkstemp ( ) ` Now I think the first version is not that good because it relies on the settings to be declared inside flaskr.py . I tried to put the settings in another file and load them with ` app.config.from_object ( settings ) ` only to find out that my real database is used because obviously blog.DATABASE is not read at all in flaskr.py . Note that there is the same problem with the ` tearDown ` method .",100.0
704,2010-07-17 23:30:36,2010-07-17 15:13:36,Improve template documentation,"The template documentation is currently spread out between quickstart and various functions in the api docs . There should be a template chapter for : - how autoescaping works and how it can be controlled ( autoescape / safe , filenames ) - basic jinja introduction and links to jinja docs - what global functions and objects are available",92.0
705,2010-07-17 13:44:19,2010-07-16 16:55:36,Disabling code execution,"When we want to show an error on a webserver to someone , we 'd like the webserver to display the error as in debug mode , but not permit arbitrary code execution . There should be an option to either disable completely the code execution but show the debug info on the page , or only allow code execution when it comes from localhost",90.0
706,2010-07-17 13:39:31,2010-07-16 10:03:16,Documentation of server configuration and middleware inclusion,"It would be nice that the ( already fairly complete ) documentation also hints at how to configure servers for production use ( multiple backend servers , apache , nginx , python servers , etc ) and how to setup werkzeug and wsgi middlewares in a regular flask application",88.0
707,2010-07-16 11:16:23,2010-07-16 07:42:21,2 little bugs in jqueryexample.py,"I found 2 little bugs in jqueryexample.py : 1 . In import from flask missing jsonify 2. in template layout.html is ` < script type=text/javascript src= '' { { url_for ( 'static ' , filename='app.js ' ) } } '' > < /script > ` , but app.js file is missing .",87.0
708,2010-07-15 12:35:58,2010-07-15 09:29:19,Module.add_url_route and App.add_url_route not consistent,"App.add_url_route allows the name of the route to be None , but Module.add_url_route requires all three arguments , but it should not really be necessary",86.0
709,2010-07-12 16:08:56,2010-07-12 14:08:00,The after_request handlers should be called in reverse order,"This ` after_request ` handlers should be called in reverse order to ensure the very first registered handler should be called at last . For example , I register ` after_request ` callback to close database session . As my code grows , I register few more ` after_request ` callbacks expecting that the very first callback registered will be called at last , but it does n't .",82.0
710,2010-07-13 21:15:04,2010-07-07 08:37:24,Static URL rule not being added on GAE with static_dir handler,"When app.yaml has ` static_dir ` point to Flask application 's ` static/ ` directory , ` os.path.exists ` will always return ` False ` and thus causing ` _PackageBoundObject.has_static_dir ` to return ` False ` making static URL rule not being added at initialization . Example : # # # # app.yaml This will return ` False ` but will return ` True ` once I comment out the static handler . Current workaround is to add static rule myself , using ` app.add_url_rule ( app.static_path + '/ < path : filename > ' , endpoint='static ' ) ` of sort . It would be nice of Flask detects GAE and add the static path anyway .",81.0
711,2010-07-14 01:51:44,2010-07-07 05:29:55,Sessions and SERVER_NAME,Cookies are not set correctly when SERVER_NAME is set . Investigate .,80.0
712,2010-07-06 08:42:45,2010-07-05 23:25:07,If SERVER_NAME is set the cookie does not set itself correctly,The domain information is not used to set the domain for the cookie of the session . The cookie is only set for path=/ for the current domain . If DOMAIN_NAME is set this should be used for setting session cookies for `` . '' + DOMAIN_NAME .,79.0
713,2010-07-04 15:21:21,2010-07-04 13:56:03,Flask broken on 2.5 without simplejson,"It is a regression in the module branch : if json is not available , the framework is broken . ( make test fails with ImportError )",77.0
714,2010-07-02 17:45:39,2010-07-02 11:24:25,Document that exceptions are swallowed in non-debug Mode,"This also means that use_reloader=True , debug=True works but debug=False , use_debugger=True does not .",75.0
715,2010-06-30 23:45:44,2010-06-30 23:09:25,Explain UTF-8 Encoding,The documentation should explain that Flask assumes utf-8 for templates .,74.0
716,2010-06-30 23:22:52,2010-06-29 14:03:50,Link to Flask-SQLAlchemy and Flask-WTF in the docs,The docs should link to the Flask-SQLAlchemy and Flask-WTF extensions in the sqlalchemy and wtforms patterns .,73.0
717,2010-06-28 23:32:07,2010-06-28 17:37:49,Document request.endpoint and request.view_args,They are missing currently but are a stable interface that one can rely on .,71.0
718,2010-07-01 10:58:50,2010-06-22 22:32:41,Documentation has to explain Flask constructor better,People often do ` Flask ( __name__ ) ` when the app is not in the ` __init__ ` which is a bad idea . Flask-SQLAlchemy also debugs based on that name so this should definitively be explained . Furthermore the fact that ` __name__ ` becomes ` '__main__ ' ` in modules started from within should be explained .,70.0
719,2010-06-17 17:05:29,2010-06-12 16:41:07,Explain Unicode in Flask,To avoid confusion the unicode behavior of Python and Flask should be documented .,67.0
720,2010-06-18 15:03:37,2010-06-03 15:23:58,Update Design Decisions based on recent changes,The design decisions document is slightly outdated . Things that should be covered : - multiple apps - register_module ( ) - logging maybe - what should go into flask and what not,63.0
721,2010-06-02 23:05:46,2010-06-02 14:46:38,Response should always be processed .,If an exception is handled by exception handlers and a valid response is generated then the response should also be processed using ` process_response ` .,59.0
722,2010-06-06 22:56:10,2010-06-01 22:34:31,Consider adding a TESTING switch,Many extensions ( like flask-mail ) might want to switch to mock-mode for testing . It would be nice to have a central switch like DEBUG to enable that .,58.0
723,2010-05-31 15:50:37,2010-05-29 18:56:55,Document flask._request_ctx_stack,"Flask extensions are allowed to access this object , also user code might if it wants to do really magic stuff . The leading underscore however means : try avoid using it , similar to sys._getframe .",57.0
724,2010-05-31 15:53:16,2010-05-29 14:40:41,` make test ` should use flask module in current directory not system-wide module,"Currently tests are run against system-wide flask , which basically loses point of testing during package upgrades on Gentoo .",56.0
725,2010-05-26 13:19:53,2010-05-25 15:08:11,Document how to generate Secret Keys,Documentation should contain some infos about how to generate secret keys .,47.0
726,2010-05-24 13:26:13,2010-05-24 07:45:08,Document app.run ( ) should be in __name__ == '__main__ ',Common problem that breaks on mod_wsgi and other deployments .,44.0
727,2010-05-24 20:26:13,2010-05-19 19:42:36,Document URL Redirection Behaviour and how to use it,There was a length discussion on # pocoo about the redirection behaviour of Werkzeug today . As a result of that discussion I think it should be explained in detail in the documentation .,42.0
728,2010-05-18 16:07:14,2010-05-18 10:47:07,broken link in doc,"on this page : http : //flask.pocoo.org/docs/patterns/distribute/ the `` package '' link of this sentence is 404 : In this case we assume your application is called yourapplication.py and you are not using a module , but a package .",41.0
729,2010-05-17 00:01:40,2010-05-16 00:04:45,Docs/Tests missing in Tarball,Should be added : ),39.0
730,2010-05-04 09:45:32,2010-05-04 08:18:13,base_url / url docs mixed up,These two have to be reversed in the API docs .,30.0
731,2010-05-04 09:42:21,2010-05-04 07:33:04,register_module fails when url_prefix not previously set,"The following example ( taken from the documentation , simplified ) fails to work correctly . The index ( ) function is registered at / instead of /admin . myapp/__init__.py : from flask import Flask from myapp.admin import admin app = Flask ( * * name * * ) app.register_module ( admin , url_prefix='/admin ' ) myapp/admin.py from flask import Module admin = Module ( * * name * * ) @ admin.route ( '/ ' ) def index ( ) : return 'This should be at /admin '",29.0
732,2010-05-03 11:07:53,2010-05-02 19:26:43,None return values from functions fail with wrong error,They should fail with an explicit error instead especially because the current behavior is just plain wrong .,24.0
733,2010-05-02 09:36:47,2010-04-30 08:59:39,Docs should mention Query Args for url_for,Right now the docs to not mention that url_for can generate query arguments as well . That should be fixed .,20.0
734,2010-05-02 09:38:45,2010-04-27 21:07:59,Typo in flaskr tutorial - > testing,The sentence that reads,19.0
735,2010-05-02 09:45:45,2010-04-27 21:01:49,Access session object during unittest,"Can we get the docs updated to include an example to access session object while unit testing . Here is a potential solution , using unittest for flaskr",18.0
736,2010-04-27 12:32:58,2010-04-26 09:00:49,Add easy way to set session expiry,It 's quite difficult at the moment to set the expiry date for the session . Ideally something like this could work ( although it might require subclassing SecureCookie ) :,16.0
737,2010-05-16 22:44:23,2010-04-22 11:37:45,Make endpoint optional in @ route,Make endpoint an option in the @ route decorator . By default it would still use the function name . This would allow more flexibility in larger applications :,12.0
