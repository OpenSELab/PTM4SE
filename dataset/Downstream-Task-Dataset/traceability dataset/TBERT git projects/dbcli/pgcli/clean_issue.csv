,closed_at,created_at,issue_comments,issue_desc,issue_id
0,2020-07-28 00:14:42,2020-07-29 06:08:20,Move from humanize to pendulum library for displaying query duration,"# # Description As per # 1015 , this removes the ` humanize ` library in favor of ` pendulum ` for showing query duration . It does add ` dateutil ` and ` pytzdata ` as dependencies , which may not be desirable - just thought I 'd throw it out there since it was such an easy change . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1199.0
1,2020-07-27 23:38:02,2020-07-31 17:25:07,More explicit error message when DSN alias is not found,"# # Description Today I made a typo in a DSN alias while connecting , and the `` invalid DSN '' error made me look at my pgcli config file , wondering how it changed , before I realized I just misspelled the alias . So I figured it might be nice to make the error for that case more explicit . I 'm happy to add a test or two but I could n't find any other tests for the ` cli ` function / error cases to base it off of . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1198.0
2,2020-07-05 11:52:21,2020-07-08 03:19:23,Add custom color,"# # Description Since the only way to customize the string , number , keyword color is by changing through ` syntax_style = < given_style > ` , I added some custom color types which will overwrite prompt_toolkit 's style color via ` merge_styles ` func . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1196.0
3,2020-07-01 19:28:24,2020-07-31 17:22:00,Update suggestion literals,"# # Description Current datatype / function suggestions based on the pgliterals.json is out of date . So I chose to update datatypes / functions of pgliterals.json according to current version 's document . - datatypes ( https : //www.postgresql.org/docs/current/datatype.html ) - Table 8.1 . Data Types - Table 8.26 . Object Identifier Types - Table 8.27 . Pseudo-Types - functions ( https : //www.postgresql.org/docs/current/functions.html ) - Table 9.3 . Comparison Functions - Table 9.5 . Mathematical Functions - Table 9.9 . SQL String Functions and Operators - Table 9.10 . Other String Functions - Table 9.12 . SQL Binary String Functions and Operators - Table 9.13 . Other Binary String Functions - Table 9.24 . Formatting Functions - Table 9.31 . Date/Time Functions - Table 9.33 . Enum Support Functions - Table 9.35 . Geometric Functions - Table 9.36 . Geometric Type Conversion Functions - Table 9.38. cidr and inet Functions - Table 9.52 . Array Functions - Table 9-42 . General-Purpose Aggregate Functions - Table 9-44 . General-Purpose Window Functions - [ x ] Updated function / database test cases # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1195.0
4,2020-06-26 20:57:15,2020-06-28 02:12:18,J bennet/fix sql comment,"# # Description Fixes https : //github.com/dbcli/pgcli/issues/1193 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1194.0
5,2020-06-25 09:54:18,2020-06-28 02:12:18,`` list index out of range '' -error when including file with trailing comments separated by newline,"# # Description To reproduce : Connect to a postgres database , save the following to a file and include it via ` \i < file > ` :",1193.0
6,2020-05-26 13:14:30,2020-05-26 18:28:49,Minor typo fixes in pgclirc,"# # Description * Corrected a couple of minor typos in ` pgclirc ` * Added name to AUTHORS and noted change in ` changelog.rst ` # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1187.0
7,2020-05-24 15:36:54,2020-05-28 22:29:51,Support style for missing value .,"# # Description New feature ! Support settings for ` null ` . close # 1185 ( This PR is blocking by the release of https : //github.com/dbcli/cli_helpers/pull/61 ) # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1186.0
8,2020-05-11 13:14:29,2020-05-11 16:51:23,Update python version from 2.7 to 3.8 in Dockerfile,# # Description Running ` docker build -t . ` command fails with an error : # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits ),1181.0
9,2020-04-18 17:40:27,2020-04-23 17:17:41,Add support for using pspg as the pager .,"addresses # 1102 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1173.0
10,2020-04-17 22:38:07,2020-04-18 05:58:14,show_bottom_toolbar - Feature to Show/Hide Toolbar,"First open source commit ! üçª # # Description This change introduces ` show_bottom_toolbar ` config option in pgclirc of True or False . Defaulting to True . # # # If False the toolbar will be hidden . < img width= '' 640 '' alt= '' Screenshot 2020-04-17 at 23 34 34 '' src= '' https : //user-images.githubusercontent.com/40718272/79619189-175c5200-8104-11ea-8eb9-284d84b9200c.png '' > # # # If True the toolbar will be visible . < img width= '' 630 '' alt= '' Screenshot 2020-04-17 at 23 35 05 '' src= '' https : //user-images.githubusercontent.com/40718272/79619199-1cb99c80-8104-11ea-8fd4-2ddfccf9eb5b.png '' > This change was requested [ here ] ( https : //github.com/dbcli/pgcli/issues/939 # issuecomment-615469759 ) . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1170.0
11,2020-04-03 22:23:59,2020-04-10 22:14:57,New release 3.0.0 .,Changelog update . Major version bump because we 're dropping old versions of Python .,1165.0
12,2020-03-30 11:01:50,2020-03-30 12:50:07,Add -- help output to README,"Additionally , refer to environment variables which can be used to configure login options .",1164.0
13,2020-03-18 01:26:32,2020-03-18 16:11:11,python3.8 : add travis test and setup.py class .,"# # Description test in python38 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1157.0
14,2020-03-11 16:02:26,2020-04-17 21:52:20,Add pg_service.conf handling,"# # Description This implements https : //github.com/dbcli/pgcli/issues/1083 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1155.0
15,2020-03-10 04:51:24,2020-03-11 20:58:14,Drop Python3.5 .,"# # Description So we can work on # 114 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1154.0
16,2020-03-09 07:20:05,2020-03-10 03:14:52,Deprecate Python2.7 .,"So we can use latest version of prompt-toolit . Relate : https : //github.com/dbcli/pgcli/pull/1149 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1153.0
17,2020-03-08 14:25:35,2020-03-12 20:46:01,Fix : Unable to drop previously connected-to database,"# # Description Closing connection explicitly in completion_refresher thread easily fixes https : //github.com/dbcli/pgcli/issues/1151 Before fix : P.S . I ran ` black ` , but ` pre-commit ` is buggy and assumes python3.7 , while I am inside virtualenv with python3.8 .. # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1152.0
18,2020-03-03 01:27:54,2020-04-06 03:56:32,upgrade prompt-toolit to 3.0,"fix : https : //github.com/dbcli/pgcli/issues/1148 # # Description Upgrade dependency . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1149.0
19,2020-02-09 14:16:01,2020-02-13 22:24:38,Add Support for partitioned tables .,"# # Description added support for partitioned tables , added relkind `` p '' # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1145.0
20,2020-01-15 05:32:16,2020-01-16 06:45:16,Drop Python 3.4 support,"# # Description https : //www.python.org/downloads/release/python-340/ related : # 1139 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1141.0
21,2020-01-13 06:17:43,2020-01-15 04:56:08,Fix warning raised for using ` is not ` to compare string literal,"# # Description Using ` is not ` for comparing string literals raises warning that ! = should be used . Fixes # 1138 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1139.0
22,2020-01-01 13:02:21,2020-01-07 14:53:43,Fix dead link of behave package .,"# # Description Fixed dead link of behave package in development guide . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1135.0
23,2019-12-03 18:09:18,2019-12-04 17:24:18,J bennet/release 2.2.0,# # Description Prepare for a new release . Most importantly to fix https : //github.com/dbcli/pgcli/issues/1121 .,1126.0
24,2019-11-25 21:47:49,2020-01-07 14:55:37,add main file to allow python3 -m pgcli execution,"# # Description To execute pgcli as python package , I 've added a [ ` __main__.py ` ] ( https : //docs.python.org/3/library/__main__.html ) file . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1123.0
25,2019-11-25 21:45:11,2019-12-09 03:19:44,support ansi escape sequences for prompt colors,"# # Description support for ansi escape sequences : my config file : resulting pgcli prompt : ! [ 2019-11-25-224203_1069x118_scrot ] ( https : //user-images.githubusercontent.com/673543/69580569-1d2a8d00-0fd5-11ea-8847-b89546a43016.png ) # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1122.0
26,2019-10-29 20:41:31,2019-12-09 03:18:43,setup : Simplify getting module version,"# # Description Get version of module for setup.py in simpler way - just import it . Unless you are planning to release postfixed versions ( like x.y.z-dev ) often , there is IMO no need to use regular expressions and ast to determine version number . In case this is intentional , regular expression alone should be sufficient solution . # # Checklist - [ ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1119.0
27,2019-10-29 02:03:36,2019-10-29 17:05:57,Logging cleanup,"# # Description Fix logger strings formatting to use lazy string interpolation on few logger calls . # # Checklist - [ ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1118.0
28,2019-10-24 04:01:42,2019-10-26 05:21:52,Add a test to verify error message .,# # Description Add a behave test to verify error condition .,1116.0
29,2019-10-22 03:38:22,2019-10-23 21:11:45,Fix the condition for < enter > key .,# # Description Fix the non-multi line case where the enter key was not recognized when the completion menu was open .,1114.0
30,2019-10-19 18:38:39,2019-10-28 17:09:00,Fix for PQconninfo not available .,"# # Description Fix for # 1110 PQconninfo not available in libpq < 9.3 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1112.0
31,2019-10-13 00:08:54,2019-10-17 03:54:29,Handle a multi-line query on Enter key-press ( fixes # 1031 ),"# # Description Use a ( conditional ) Enter key-binding to force-handle a multi-line buffer , rather than doing so by ( conditionally ) disabling the multiline mode of prompt_toolkit . This has the benefit of being more efficient ( the multiline Condition filter is called very often , which ( due to the repeated query parsing ) causes editing to become slow with a large buffer that ends in a semicolon ) , clearer in intent ( we want to force-handle the query , rather than ( temporarily ) disable multiline mode which indirectly forces the buffer to be handled ) and avoids a bug in multi-line history search ( issue # 1031 ) # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1109.0
32,2019-10-12 15:27:27,2019-10-17 03:57:19,Take account of table aliases when completing function args ( # 1048 ),"# # Description Fixes # 1048 so that autocompletion of function arguments takes account of table aliases . Now , when given as expected . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code . - [ x ] Please squash merge this pull request ( uncheck if you 'd like us to merge as multiple commits )",1107.0
33,2019-08-30 07:26:49,2019-09-28 02:34:35,add optional but default squash merge request to PULL_REQUEST_TEMPLATE,"# # Description add optional but default squash merge request to PULL_REQUEST_TEMPLATE # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1095.0
34,2019-08-28 15:27:38,2019-09-02 19:36:16,"Get server params , such as is_superuser and server_version , without e‚Ä¶","‚Ä¶xtra queries . # # Description Possibly fix https : //github.com/dbcli/pgcli/issues/1093 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1094.0
35,2019-08-23 20:39:49,2019-08-23 20:44:37,Issue 1018 display first 1k rows,"Opening this PR instead of https : //github.com/dbcli/pgcli/pull/1079 . The original PR had some extra commits in it , and I could not find a way to get rid of them . # # Description I added the changes requested in # 1018 to show only the ` row_limit ` amount of rows if there is n't a LIMIT clause in the query . If LIMIT exists , the output is not truncated . Also , I completely removed the warning message . I do n't know why some tests regarding output fail , I 'll check that and try to fix it . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1092.0
36,2019-07-26 22:10:24,2019-07-29 20:00:34,Add key bindings to consistently move up and down in history,"# # Description Closes https : //github.com/dbcli/pgcli/issues/1004 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1084.0
37,2019-07-11 15:05:50,2019-07-13 00:24:40,Issue 1019 stacktrace on empty query,"# # Description Changes related to issue # 1019 . As advised in the ticket , I added a simple check . After I added this check , I got an error saying the variable ` is_special ` is undefined so I defined it and set it to ` None ` . The output looked like this on my system : # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1078.0
38,2019-06-03 02:04:32,2019-06-03 02:15:17,Add keybinding for alt-enter to introduce a line break,"# # Description Use Alt-Enter to insert a multi-line statement without switching to multi-line mode . Already did it by @ amjith [ on mycli ] ( https : //github.com/dbcli/mycli/pull/748/ ) . Requested in [ # 738 of mycli ] ( https : //github.com/dbcli/mycli/issues/738 ) . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1065.0
39,2019-06-03 01:02:21,2019-06-04 00:12:39,Add \G as a temporary way to use expanded mode .,"This feature is copied from mycli to enable temporary expanded mode . eg : ` SELECT * FROM table_name \G ` will show results in expanded mode . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ x ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1064.0
40,2019-05-31 00:03:38,2019-05-31 00:10:16,Changelog update before release .,Update changelog before a new release .,1062.0
41,2019-05-30 08:55:28,2019-05-30 17:03:48,README.rst : tidy up redundant instructions,"Remove the README section which detailed how to force ` psycopg2 ` 2.7 dependency installation from source rather than binary . ` psycopg2 ` 2.7 would automatically favour installation from binary . A bug affecting some users made it desirable to have the option to install from source instead . The README detailed how to do this using pip 's ` -- no-binary ` option ( nice ! ) . ` psycopg2 ` 2.8 has now split the binary and source dependencies into different packages with different names ( source : [ psycopg2 docs ] ( http : //initd.org/psycopg/docs/install.html # change-in-binary-packages-between-psycopg-2-7-and-2-8 ) ) which makes the ` -- no-binary ` instructions redundant . To specify source/binary you now need to explicitly specify the desired package . As of # 1060 , installing ` pgcli ` from pip will result in the installation of ` psycopg2 ` 2.8 from source . # # Description # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1061.0
42,2019-05-30 00:19:51,2019-05-30 04:14:33,Allow psycopg2 up to 2.8.2,"This fixes the issue with pgcli not working on Arch Linux , since the package ` python2-psycopg2 ` is already on 2.8.2 . # # Description # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . - [ ] I installed pre-commit hooks ( ` pip install pre-commit & & pre-commit install ` ) , and ran ` black ` on my code .",1060.0
43,2019-05-24 15:03:58,2019-12-04 17:33:49,Error connecting to PostgreSQL 12beta1,# # Description Error connecting to PostgreSQL 12beta1 # # Your environment - [ x ] Please provide your OS and version information : Windows 10 - [ x ] Please provide your CLI version : 2.1.0 - [ ] What is the output of `` pip freeze `` command .,1058.0
44,2019-05-14 07:03:09,2019-05-22 04:27:48,Handle password spaces,# # Description Fixed the issue with spaces in password . Started writing some behavioral tests for some of the command line args . Have n't figured out how to pass in a DSN yet .,1056.0
45,2019-05-09 00:29:17,2019-05-11 05:57:46,Dsn parameters not always present .,# # Description Fixes https : //github.com/dbcli/pgcli/issues/1053 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1054.0
46,2019-05-06 16:06:16,2019-05-06 18:11:58,Upgrade to sqlparse 0.3.0,,1052.0
47,2019-05-06 14:29:21,2019-05-06 18:09:51,Fix usage of pgservice # 1035,This is an update to PR # 1035 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` .,1051.0
48,2019-05-04 02:36:39,2019-05-25 20:08:56,black all the things .,"# # Description Run black on everything and add a pre-commit hook . For the hook to work , install pre-commit : https : //pre-commit.com/ # install And then run : ` pre-commit install ` # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",1049.0
49,2019-05-03 13:38:37,2019-10-17 03:57:19,Aliased table column autocomplete suggestions ignore alias if joining multiple tables,"# # Description When autocompleting a column of an aliased table within a function call when the query joins multiple tables , the alias name is not used to filter the column list e.g . given # # Your environment Fresh virtualenv install on MacOS 10.13.6 , pgcli version 2.1.0 or 1.11.0",1048.0
50,2019-04-28 15:22:44,2019-05-01 15:53:56,lazy load keyring .,# # Description Load keyring only when keyring is enabled in the config file . fix issue : https : //github.com/dbcli/pgcli/issues/1041 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1046.0
51,2019-04-28 05:11:31,2019-04-28 22:06:01,More intelligent dsn format,# # Description Fix for https : //github.com/dbcli/pgcli/issues/1043 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1045.0
52,2019-04-27 00:23:50,2019-04-28 03:25:19,Allow application_name to be overridden,"# # Description We had existing invocations of pgcli like ` pgcli postgres : //bar @ baz.com/ ? application_name=cow ` . 8cd3309b18fc015fc89da3236330f7b35297a998 / https : //github.com/dbcli/pgcli/pull/869 broke these with errors like Traceback ( most recent call last ) : File `` [ ... ] /lib/python2.7/site-packages/pgcli/ main.py '' , line 466 , in connect application_name='pgcli ' , * * kwargs ) TypeError : type object got multiple values for keyword argument 'application_name' # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file .",1044.0
53,2019-04-22 08:16:33,2019-04-28 06:00:42,module 'keyring.errors ' has no attribute 'KeyringLocked ',# # Description After restarting my PC I got ` module 'keyring.errors ' has no attribute 'KeyringLocked ' ` when running ` pgcli -D xxx ` . 1 . How to fix it ? 2 . How to disable the keyring ? I do n't want to input password anymore . # # Your environment OS :,1040.0
54,2019-04-12 04:30:59,2019-04-13 20:22:04,Allow escape to switch to vi navigation mode,"# # Description # 1007 , letting ` escape ` dismiss autocomplete dialogs , had the unintended side effect of disabling the use of ` escape ` to switch to vi navigation mode . This PR restores that . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",1039.0
55,2019-04-06 13:41:31,2019-10-17 03:54:30,History search regressions in v2,"# Description I use ` pgcli ` in vi and multi-line mode . It seems that history search with an empty query buffer has regressed in v2 , possibly due to the ` prompt_toolkit ` upgrade . In v1.11.0 if I use history search with ctrl-r , having previously executed multi-line queries , I am shown the full query that matches the pattern . If I press ctrl-r again , I 'm shown the full next query that matches . If I press ctrl-c the buffer is set to the first matching query . In v2.1.0 after pressing ctrl-r and typing a pattern , I only see the _line_ that matches the search pattern , which means it 's difficult to identify the correct query from my history . If I press ctrl-r again , the prompt is broken and just shows the pattern , but no matches ( pressing ctrl-r again appears to do nothing in this state ) . If I exit the broken prompt with ctrl-c I 'm shown a stacktrace , which I can exit with Enter - then the buffer is set to the first matching query . # Desired behaviour Ideally , the history search would behave the same whether or not anything has been typed in the buffer , and regardless of the number of times ctrl-r is pressed , namely : - Show the full matched query , not just the matching line - Ctrl-c should return the buffer to the state before ctrl-r was pressed the first time The first is a regression , but I suppose the latter is a feature request . # Reproduction With ` ~/.config/pgcli/history ` containing :",1031.0
56,2019-04-06 00:12:56,2019-04-06 00:24:11,Changelog update before release . Bump cli_helpers .,Updating changelog before release .,1030.0
57,2019-03-22 16:52:09,2019-03-23 17:12:13,Ask for password in case of incorrect password .,# # Description Ask for password in case provided password failed . Fixes https : //github.com/dbcli/pgcli/issues/1020 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1028.0
58,2019-03-18 04:12:32,2019-05-04 18:30:16,[ WIP ] Build pgcli with 3.7 .,# # Description Python 3.7 . Looks like this can only be done with ` xenial ` and ` sudo ` in travis right now . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1026.0
59,2019-03-16 21:10:39,2019-03-17 00:50:12,Remove the expand_tab option from pgclirc .,# # Description This is a follow up to # 928 . Picking 4 spaces whenever a user presses the tab key . Removes the option from the config file .,1023.0
60,2019-03-16 03:32:38,2019-03-17 06:04:30,Catch and ignore the system interrupt .,# # Description Fixes # 1021 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1022.0
61,2019-03-05 00:53:44,2019-03-18 16:47:12,Fix for https : //github.com/dbcli/pgcli/issues/1014 .,# # Description Fixes https : //github.com/dbcli/pgcli/issues/1014 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1017.0
62,2019-03-05 00:10:19,2019-03-16 20:44:41,Fix crash in get_server_version when using -- single-connection .,# # Description Fixes the exception : # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1016.0
63,2019-02-14 16:42:05,2019-02-24 00:37:27,Add reconnect automatically enhancement,# # Description Adding the enhancement requested in # 989 to automatically reconnect to the database when the server closes the connection . I could n't figure out how to add testing for this since I could n't find a way to force a disconnect to trigger the auto reconnection . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1009.0
64,2019-02-11 09:14:03,2019-02-13 00:18:33,keybinding for dismissing autocompletelist,"# # Description i added the esc key in ` pgcli/key_bindings.py ` to dismiss the autocomplete . The main reason for this , that it sometimes tends to get in the way of the source , especially if you have multiline selects pasted into pgcli . since im not that profound into python and its libs you could maybe improve the current solution . thank you for maintaining this greate piece of software ! # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",1007.0
65,2019-02-08 10:57:20,2019-02-08 20:25:03,fix unhashable formatted text,# # Description fix unhashable formatted text # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1006.0
66,2019-01-22 18:21:10,2019-01-22 18:46:31,Missed logfile for earlier clean up and add behave logging changes,# # Description Missed logfile for earlier clean up and add behave logging changes . Thanks for finding this @ saper ! # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,1001.0
67,2019-01-17 15:25:44,2019-01-22 00:00:26,Determine hstore OID from the system view,Avoid error message on the server side if hstore extension is not installed in the current database . Issue : https : //github.com/dbcli/pgcli/issues/991,992.0
68,2019-01-03 00:30:43,2019-01-03 00:31:06,Changelog update for bugfix release .,# # Description Releasing 2.0.2,984.0
69,2018-12-27 18:40:53,2018-12-28 01:36:59,Wrap pgcli completer into ThreadedCompleter .,"# # Description Fix for the lag problem in v2 , part 1 ( https : //github.com/dbcli/pgcli/issues/979 ) . # # Checklist ~- [ ] I 've added this contribution to the ` changelog.rst ` .~ - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",983.0
70,2018-12-27 18:40:06,2019-01-03 00:16:00,Remove some functions completions,# # Description Fix for the lag problem in v2 ( https : //github.com/dbcli/pgcli/issues/979 ) . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,982.0
71,2018-12-05 09:22:46,2019-01-03 22:27:47,Support multihost connection string,# # Description Hi there . I 've found out that pgcli does n't support postgres multihost connection string ( [ pg docs ] ( https : //www.postgresql.org/docs/current/libpq-connect.html # id-1.7.3.8.3.6 ) ) : I 've found out that ` urlparse ` used for connection URI parsing does n't support multiple hosts . I think that it would be convenient to switch to [ ` parse_dsn ` ] ( http : //initd.org/psycopg/docs/extensions.html # psycopg2.extensions.parse_dsn ) URI parsing function that comes with psycopg2 as pgcli already uses it as pg driver . I also provided extra test for multihost connection string . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,978.0
72,2018-12-02 02:27:37,2018-12-07 18:39:08,Time execution separately .,"# # Description This adds a separate timing for query execution . It is useful to see how long things take on database side , and how long on pgcli side ( formatting etc. ) . I am slightly worried that seeing this may make some people unhappy , but on the other hand , it can help us make pgcli better . # # Checklist - [ ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",977.0
73,2018-11-30 21:23:42,2018-11-30 23:21:13,allow passing -u flag ( lowercase ) to specify username,"# # Description closes # 776 allows users to specify a username by passing a lowercase ' u ' , as in ` pgcli -u username ` # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",975.0
74,2018-11-27 06:46:11,2018-11-27 15:49:55,Fix special commands,# # Description Added tests for special command completion . Requires the latest changes from pgspecial master . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,973.0
75,2018-11-19 04:15:12,2018-11-19 04:16:30,going to release .,"# # Description Bugfix release coming up , updating changelog .",972.0
76,2018-11-19 03:42:23,2018-11-19 04:11:16,Fix the StopIteration issue in Python 3.7,# # Description Fixes # 902 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,971.0
77,2018-11-17 19:35:05,2018-11-18 03:41:35,Enable suspend using C-Z .,# # Description In the new version of prompt-toolkit C-Z was not suspending the app . It is now fixed . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,970.0
78,2018-10-31 17:47:00,2018-11-17 19:26:06,Bugfix for # 938 : load named queries from provided config file,"# # Description Load the named queries in a place , where the config from the user is given .",962.0
79,2018-10-30 22:22:36,2018-11-17 19:15:14,Refactor dbname and username options/arguments to match ` psql ` -behaviour,# # Description I tried to implement the behaviour of the options/arguments ` dbname ` and ` username ` to behave exactly as in ` psql ` with the same precedences . This should fix # 950 Here is a table with the details which I double checked in ` pgcli ` and ` psql ` with my changes : | command | username | database | | -- - | -- - | -- - | | ` PGDATABASE=foo PGUSER=foo pgcli ` | foo | foo | | ` PGDATABASE=foo PGUSER=foo pgcli bar ` | bar | foo | | ` PGDATABASE=foo PGUSER=foo pgcli bar bar ` | bar | bar | | ` PGDATABASE=foo PGUSER=foo pgcli bar bar -d abc ` | bar | abc | | ` PGDATABASE=foo PGUSER=foo pgcli bar bar -U abc ` | abc | bar | | ` PGDATABASE=foo PGUSER=foo pgcli bar bar -U abc -d abc ` | abc | abc | | ` PGDATABASE=foo PGUSER=foo pgcli bar -U abc ` | abc | bar | | ` PGDATABASE=foo PGUSER=foo pgcli bar -d abc ` | bar | abc | | ` PGDATABASE=foo PGUSER=foo pgcli -d abc ` | foo | abc | | ` PGDATABASE=foo PGUSER=foo pgcli -U abc ` | abc | foo | | ` PGDATABASE=foo PGUSER=foo pgcli -U abc -d abc ` | abc | abc | I think this would be a good case to make some unittests for these . But I am not sure how and where . I did not see a unittest for the behaviour of the options/arguments parsing . Are there any specific tests for these ?,961.0
80,2018-10-30 14:34:31,2018-10-30 14:41:39,Missed changelog update .,Missed changelog update in https : //github.com/dbcli/pgcli/pull/959,960.0
81,2018-10-14 09:30:44,2018-10-14 20:53:20,Clean up and add behave logging,# # Description Clean up and add behave logging # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,956.0
82,2018-10-02 04:31:36,2018-10-03 00:10:44,Fix for pgcli -- list .,# # Description Fix for https : //github.com/dbcli/pgcli/issues/951 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,952.0
83,2018-09-28 21:26:41,2018-09-28 22:57:46,Changelog update to release 2.0.0 .,Changelog update to release 2.0.0 . The only change is updating to prompt-toolkit 2.0 .,948.0
84,2018-09-26 22:58:46,2018-11-13 22:01:48,Contrib guide improv,# # Description clarified a few things in the development docs and added a section to troubleshoot running the tests # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,946.0
85,2018-09-24 23:24:08,2018-09-24 23:24:15,Changelog update to release 1.11.0 .,Changelog update .,944.0
86,2018-09-22 22:20:34,2018-09-22 22:42:45,Revert abs imports in tests .,"This reverts ` absolute_imports ` change in tests , because that came with a drawback : ` tests ` having to be a package , being installed into and polluting ` site-packages ` . Should we perhaps have ` tests ` inside ` pgcli ` package ? Challenge for another day .",942.0
87,2018-09-22 04:04:29,2018-09-22 04:38:41,Attempt to fix failing tests,Fixing tests that failed in https : //github.com/dbcli/pgcli/pull/871 .,941.0
88,2018-09-16 11:36:01,,Named queries not loaded from or saved to config file,Pgcli 1.10.3 running on Windows 10 with Python 3.7.0 When using a non-default config file ( ` -- pgclirc ` ) named queries are neither loaded from nor saved to the config files . Instead they are loaded from and saved to the default config file . The same issue happens with mssql-cli ( https : //github.com/dbcli/mssql-cli/issues/222 ) .,938.0
89,2018-07-28 00:33:08,2018-09-28 21:18:41,Cherry-picked prompt-toolkit 2.0 changes .,"Changes for prompt-toolkit 2.0 , based on current master . Cherry-picked from https : //github.com/dbcli/pgcli/pull/826 . @ jonathanslenders I cherry-picked because I have no permissions to rebase your branch , but we can merge either PR , provided it 's in line with current ` pgcli ` master . * * Problems noticed so far * * : * ~styles are not applied~ fixed * cli takes longer to start . I had to increase `` show help '' integration test timeout . * ~cli wo n't run under 2.7~ fixed , it was unicode literals * ~ ` iocommands ` integration test fail on editor command~ fixed * ~ ` named_queries ` integration test fail~ fixed Named query integration test failed because of this warning printed under ` pexpect ` ( which is not a real terminal ) : https : //github.com/jonathanslenders/python-prompt-toolkit/blob/b8d09e971e5fbad76d3c5bda4b47063e4c0644b8/prompt_toolkit/application/application.py # L706 @ jonathanslenders Is there a way to suppress this kind of error output for tests ? perhaps is you use ` warnings ` vs writing to stdout ?",930.0
90,2018-07-27 19:03:49,2018-07-27 19:04:19,Let 's release more bugfixes .,Changelog update for the next bugfix release .,929.0
91,2018-07-27 16:29:55,2019-03-16 21:07:40,Tab press on an empty line increases the indentation instead of triggering the auto-complete pop-up,"# # Problem Writing complicated queries on multiple lines can be quite frustrating because the ` Tab ` key _always_ triggers the auto-complete pop-up , instead of increasing the indentation when on empty lines . This seems to be undesired behaviour as at these cases one would rarely want a general auto-completion window open . Far more useful would be to increase the indentation without resorting to the vi mode or using an external editor . # # Solution This MR changes the ` Tab ` mapping behaviour , so that if it 's pressed on an empty line ( with or without whitespace ) , it simply inserts a ` \t ` character . The auto-completion behaviour is triggered in all the other cases . Furthermore , since some users would prefer spaces instead of ` \t ` characters ( for copy-pasting queries for example ) , an ` expand_tab ` option has been introduced : it it 's enabled , 4 spaces are inserted instead . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",928.0
92,2018-07-26 05:07:50,2018-07-27 00:17:36,Fixes keyring = False not honored .,# # Description Fix for https : //github.com/dbcli/pgcli/issues/920 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,927.0
93,2018-07-24 22:15:50,2018-07-24 22:23:57,Change server version query .,# # Description Fix for https : //github.com/dbcli/pgcli/issues/922 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,923.0
94,2018-07-24 15:55:00,2018-07-25 15:30:35,Fix issue # 919,,921.0
95,2018-07-24 00:08:44,2018-07-24 00:09:14,Changelog update to release 1.10.2 .,Changelog for the bugfix release 1.10.2 .,918.0
96,2018-07-21 06:12:01,2018-07-24 00:04:56,make keyring optional,# # Description make keyring optional # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,916.0
97,2018-07-20 22:50:23,2018-07-21 00:10:08,Print server version as part of welcome message .,"# # Description Print server version , unless we 're being `` less chatty '' . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",915.0
98,2018-07-20 05:12:46,2018-07-20 05:21:03,Bugfix release .,"A couple of bugfixes . Keyring problem is the annoying one , so we better fix that .",913.0
99,2018-07-20 02:02:34,2018-07-20 02:50:14,Update setuptools before install .,Trying to figure out ` AttributeError : _DistInfoDistribution__dep_map ` in python 3.4 in travis . Seems to be fixed by updating either pip or setuptools .,912.0
100,2018-07-20 01:27:10,2018-07-20 01:51:22,Fixes `` object has no attribute watch_command '',# # Description Fix for this error : ` AttributeError : 'PGCli ' object has no attribute 'watch_command ' '' ` see https : //github.com/dbcli/pgcli/issues/909 # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,911.0
101,2018-07-19 21:25:46,2018-07-20 01:16:23,Fix bug that made ` keyring ` usage not optional when run headlessly,"# # Description We run ` pgcli ` on a headless server , shared by many users . With the release of 1.10.0 and its new dependency on ` keyring ` , we noticed that when we tried to connect to our database with username specified via ` -U ` and password specified via the ` PGPASSWORD ` environment variable , we would just get this error and then exit : on my headless system with this branch installed and verifying I get the pgcli prompt instead of the process just ending . # # Checklist - [ ] I 've added this contribution to the ` changelog.rst ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",910.0
102,2018-07-14 19:54:34,2018-07-14 19:57:27,Changes to release 1.10.0,# # Description Changelog and some cleanup for 1.10.0 .,907.0
103,2018-07-06 16:53:21,2018-07-13 20:24:45,Fixes # 346 : Tab characters are rendered with spaces instead of `` ^I '' when entered in external editor,"# # Description Up to until now tab characters were rendered with the ugly ` ^I ` . This is especially annoying for projects where the coding style is to use tabs instead of spaces and an external editor is being used or a query is copy-pasted into ` pgcli ` . # # Solution The solution is quite simple -- ` prompt_toolkit ` already provides an input processor just for that , so I simply added it to ` extra_input_processors ` with some sane defaults . # # Further work The ` TabsProcessor ` class can accept several arguments to give more control over the tab rendering . I opted out for a simple 4-space rendering as this will probably be desired behaviour in most use cases but , of course , we can extend the configuration to include some of them ( most notably ` tabstop ` which describes the tab length ) . I thought it would be an overkill but if someone thinks this may be necessary , I can , of course , add it . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) . # 346",903.0
104,2018-07-04 07:48:45,2018-07-04 19:36:43,Avoid reconnect prompt after error if connection is still valid,"# # Description Instead of whitelisting all errors that do not require reconnecting , we simply only reconnect if we detect a disconnect has occurred . psql notably behaves in a similar way : https : //git.io/fbxuc # L1461 Fixes # 807 # # Testing 1 . In one shell : 6 . Running ` SELECT count ( * ) FROM hello ; ` after stopping the database correctly prompts ` Connection reset . Reconnect ( Y/n ) : ` # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",901.0
105,2018-06-25 20:57:51,2018-06-28 19:12:46,Guard against missing keyring backend .,# # Description Catch the exception thrown when the keyring backend is missing . I 'm not entirely happy with this code . I feel like it is way too nested for my comfort . I welcome a critical eye to the code changes .,899.0
106,2018-06-15 06:16:32,2018-06-15 21:36:18,Add -- user option like psql has as well .,"Hi Today I 've just tried to use ` pgcli ` . Expected to replace ` psql ` by ` pgcli ` command in terminal and connect to PG . I had ` -- user ` option there and pgcli asked me to use ` -- username ` . Probably it would be easy for transitions to use the same option name as well for user . This change will leave ` -- username ` as it is , and add ` -- user ` as optional argument for compatibility . - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",898.0
107,2018-06-09 18:07:20,2018-06-10 11:07:39,Hotfix/output unbound local error,# # Description Fix unbound local error when destructive_warning is false . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,897.0
108,2018-06-06 16:28:02,2018-06-06 19:21:08,Hotfix/not enough values to unpack,# # Description Error ` not enough values to unpack ` is raise when statement is an empty string . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,895.0
109,2018-06-01 15:24:42,2018-06-01 18:15:52,Fix for ipython sql connection . Fixes # 891 .,# # Description Fix for # 891 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,893.0
110,2018-06-01 14:05:13,2020-04-03 22:15:54,pgcli bash completion script,"# Pgcli bash completion Bash completion script for pgcli . # # Description It allows to < tab > complete database names , users and hosts , plus showing the other available options when calling pgcli from the terminal prompt . In order to work it steals a couple of functions from psql ( postgres CLI client installed by default ) . It is intended to be packaged with the debian package and to be copied on /usr/share/bash-completion/completions/pgcli ( filename changes for consistency ) upon installation of the package . Please make the debian package mantainer ( Lennart Weller lhw @ ring0.de as per ` apt-cache show ` ) aware of it and include it in the relevant section of the installation scripts/package . I hope it is useful . # # Checklist - [ ] I 've added this contribution to the ` changelog.rst ` . - [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",892.0
111,2018-05-30 14:34:59,2018-06-01 18:15:54,ipython magic AttributeError in sql.connection.Connection.get,# # Description I make a clean new virtualenv with Python 3.6.4 Then I run :,891.0
112,2018-05-26 10:16:01,2018-05-26 19:48:22,Refactor destructive warning in behave tests,# # Description refactor destructive warning in behave tests # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,889.0
113,2018-05-26 09:31:34,2018-05-29 08:10:29,make keyring optional,# # Description The keyring code seems to fail if you have gnome-keyring installed but are n't running the gnome-keyring-daemon . Stack trace : # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,888.0
114,2018-05-21 02:39:54,2018-06-18 01:55:20,\ev and \ef commands,"# # Description Supports \ev ( edit view ) and \ef ( edit function ) commands , using the same SQL that psql uses . To work properly , depends on a pull request to ` pg_special ` : https : //github.com/dbcli/pgspecial/pull/63 ; however , nothing will break without that pull request ( these commands simply wo n't work ) . Courtesy PyCon 2018 sprints . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",886.0
115,2018-05-19 04:31:44,2018-05-19 05:20:56,Add confirmation prompt to destructive commands in behave tests .,# # Description This fixes the failing behave tests in PR # 884 .,885.0
116,2018-05-17 10:15:35,2018-05-19 04:30:53,Porting in Destructive Warning,# # Description * Modified main.py to confirm with the user if they want to run a destructive warning . This includes adding logic to the click config for destructive config # # Checklist - [ X ] I 've added this contribution to the ` changelog.rst ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,884.0
117,2018-05-15 18:26:12,2018-05-15 18:51:35,Fix the commands for fixing lint errors .,# # Description # # Checklist - [ ] I 've added this contribution to the ` changelog.rst ` . - [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,882.0
118,2018-05-15 14:10:06,2018-05-15 15:58:22,Restrict the offer to reconnect .,# # Description Fixes # 807 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,881.0
119,2018-05-15 05:38:04,2018-05-19 04:48:43,Feature/get last sql query,"# # Description Refactor the command execution pipeline to flag MetaQuery with is_special . If this flag is True , the command is a special command , otherwise it 's plain SQL . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",880.0
120,2018-05-14 21:32:48,2018-05-14 21:33:06,Fix lint complaints .,# # Description Fix lint errors . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,879.0
121,2018-05-14 20:56:06,2018-05-14 21:03:09,Add completion for table formats,# # Description Adds completion for table formats with \T . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,878.0
122,2018-05-14 20:33:24,2018-05-14 21:32:12,Keep callables,"# # Description Enclosed the code to run the text editor in a try/finally , and moved the restoration of saved pre-run callables to the `` finally '' , so that throwing an error wo n't result in losing the saved callables # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",877.0
123,2018-05-14 18:22:49,2018-05-14 18:55:26,Disable pager when using \watch,# # Description Disable pager when using watch ( # 850 ) . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,876.0
124,2018-05-14 16:24:51,2018-05-14 17:04:56,Add quit commands to completion,# # Description Moves quit command to pgspecial . This allows completion to work . # # Checklist - [ x ] I 've added this contribution to the ` changelog.rst ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,875.0
125,2018-05-14 15:34:13,2018-05-17 00:49:32,Remember prompted passwords using keyring,"# # Description This PR adds support for remembering prompted passwords using [ ` keyring ` ] ( https : //github.com/jaraco/keyring ) . TODO : - [ ] Behave test - [ ] Add a way to disable using keyring in case a suitable backend is n't configurable - Via config file so it does n't need to be specified each time it 's invoked ( document in README ) , CLI option/env var documents nicely but is cumbersome to specify on each usage # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",873.0
126,2018-05-14 14:06:58,2018-05-14 14:11:16,Encourage users to use SSL,# # Description There 's already a code comment illustrating how you could use SSL with PostgreSQL . This PR : - Alters that comment to replace ` ssl-cert ` ( [ has an extra dash not found in PostgreSQL 1.0 settings ] ( https : //www.postgresql.org/docs/10/static/libpq-connect.html # LIBPQ-PARAMKEYWORDS ) ) with ` sslrootcert ` ( which could be used to [ connect securely to Redshift ] ( https : //docs.aws.amazon.com/redshift/latest/mgmt/connecting-ssl-support.html ) ) - Documents how to use extra options ( adds SSL to the example ) # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,872.0
127,2018-05-12 02:10:27,2018-09-23 21:34:59,Respect \pset pager on expected behavior,"` \pset pager ` has three possible values : `` always '' , `` on '' , and `` off '' . pgcli previously treated all non- '' off '' values as `` always '' . This change implements the expected behavior , which is to use the pager when the output is larger than the terminal height ( See \pset pager in https : //www.postgresql.org/docs/9.2/static/app-psql.html ) . Pgcli adds to this and also uses the pager when the output is wider than the terminal width . Fixes # 813 # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",871.0
128,2018-04-26 12:05:55,2018-04-28 05:31:32,Add application name,# # Description Adding ` application_name ` to help identify ` pgcli ` connections to postgres . Fix # 868 # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,869.0
129,2018-04-05 19:15:50,2018-04-05 21:26:31,Mark tests requiring a running database server as dbtest,# # Description Mark tests requiring a running database server as dbtest # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,866.0
130,2018-03-31 20:26:36,2018-04-04 15:56:27,Changelog update to release 1.9.1 .,Changelog update for 1.9.1 ( a very small release ) .,864.0
131,2018-03-28 18:35:38,2018-03-28 18:46:47,Give example behave.ini,"# # Description I wanted to run the behave tests , and had to go read ` environment.py ` to figure out what needed to go in the .ini file . This patch gives an example in DEVELOP.rst . ( removing the checklist , as this is a minor change )",862.0
132,2018-03-28 18:26:29,2018-03-28 22:45:01,# 858 : make \h in prompt return the first part of the hostname ; add \H to return whole hostname,"# # Description This patch makes \h in the prompt only return the hostname up to the first period ( i.e . db.orgname.org will be displayed as just 'db ' ) , and adds \H which will return the whole hostname . If there 's no ' . ' in the hostname , \h and \H will produce identical results . The ` get_prompt ( ) ` method does n't seem to have a test suite that exercises all of the format characters ; should it ? I did verify that ` get_prompt ( ) ` is at least invoked by the behave tests . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",861.0
133,2018-03-23 18:15:28,2018-03-27 15:42:49,"Revert to psycopg2 , and add instructions for no-binary install .","Revert to ` psycopg2 ` package insteaf of forcing ` psycopg2-binary ` . For 2.7 , this will install from wheels by default , and from source if ` -- no-binary ` flag is used . For 2.8 , we need to figure out something else , since ` psycopg2 ` will become source only . Related : https : //github.com/dbcli/pgcli/issues/849 https : //github.com/dbcli/pgcli/issues/844",859.0
134,2018-03-23 17:06:36,2018-04-08 15:27:41,Customized prompt not used,"# # Description I was puzzled when connecting to one server produced the ` user @ server : dbname > ` prompt I expected , but another server produced just ` dbname > ` . It turns out that if the prompt ends up longer than ` self.max_len_prompt ` , which is set to 30 and is n't configurable , pgcli falls back to just ` dbname > ` . I was using just 'docker ' for one hostname and the other was 'db-dev.domainname.tld ' , which pushed the whole prompt over the limit . ( My username is always 'akuchling ' , so there 's 9 characters right there ! ) Two ideas : 1 ) bash 's prompt formatting supports both the FQDN and just the local hostname . Would you like me to write a patch adding a similar new formatting character ? Unfortunately bash uses \h for the up-to-the-first- ' . ' and \H for the full name . This would be an incompatible change for pgcli , where \h is currently the full server name . Would we want to change the meaning of \h in pgcli , have the opposite of bash 's variables ( \h for full , \H for shortened ) , or just pick some different character ? 2 ) We could also make the max_len_prompt configurable . Does that seem worth doing ? # # Your environment pgcli version 1.9.0 .",858.0
135,2018-03-22 10:16:28,2018-03-22 12:24:52,Fix broken pgcli -- list command line option,# # Description Fixes # 850 # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,857.0
136,2018-03-21 22:46:21,2018-03-22 09:58:45,Ported release script improvements from mycli .,I honestly stole all @ tsroten 's release script tweaks .,856.0
137,2018-03-05 19:58:18,2018-03-16 17:39:15,"Add tests , AUTHORS and changelog.rst to release .","# # Description Add tests , AUTHORS and changelog.rst to release . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",848.0
138,2018-03-02 18:30:44,2018-03-02 22:35:21,"Changelog update , and bump pgspecial for the release .",# # Description Changelog update and pgspecial bump to release 1.9.0 .,847.0
139,2018-02-15 11:03:31,2018-02-15 15:54:28,Fix tests,# # Description Currently the build tests are broken . This PR fixes them . There was a wrong assertion on the context when using ` ex ` external editor . Also there seem to a bug in the last version of autopep8 . Pinning the version to 1.3.3 seem to work . # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,843.0
140,2018-02-10 16:08:32,2018-02-17 21:42:18,Fraoustin/list dsn,# # Description add option list-dsn : get all alias in aliasdsn section of config file # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,839.0
141,2018-01-16 03:34:28,2018-01-16 04:51:59,Removed support for Python 3.3 .,# # Description Removed support for Python 3.3 ( end-of-life ) . # # Checklist - [ X ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,836.0
142,2018-01-11 21:12:34,2018-03-31 20:20:29,Add feature Color of table .,"# # Description Add feature Color of table by parameter I add the possibility of use a name of token of syntax style ( Token.Name.Tag , Token.Literal.String , .. ) for parameter . The color of table is function of syntax style # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",834.0
143,2018-01-06 11:04:10,2018-01-27 22:25:29,Nopager,"# # Description manage command \pset pager [ on/off ] set \pset pager off next output do n't use pager set \pset pager on next output use pager Add parameter in section `` main '' : pset-pager . When I want to start pgcli with pset-pager is off , output do n't use pager I 's is a partial response for issue 813 # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",832.0
144,2018-01-06 01:30:34,2018-01-07 12:13:14,Add a couple missing click option types .,# # Description Small improvements for pgcli options : * make sure port number is an int * make sure pgclirc is a file name # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,831.0
145,2018-01-03 10:08:33,2018-01-04 18:47:12,Change format output,# # Description add command `` \t '' for change format output usage : `` \t rst '' # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,830.0
146,2017-12-22 18:50:04,2017-12-22 18:50:18,Changed my name in changelog .,# # Description Use the same name everywhere .,827.0
147,2017-12-21 04:46:37,2017-12-21 04:50:23,More changes added to 1.8.2 release .,I waited on https : //github.com/dbcli/pgcli/pull/820 to release 1.8.2 - now that ( and one more change is in ) .,825.0
148,2017-12-20 19:53:07,2017-12-20 23:01:26,Include username to password prompt . # 823,"# # Description As described in ticket # 823 , this is useful for matching prompt for different usernames and auto populating passwords . iTerm2 has password manager that is capable of doing this , but other terminal managers might be able to do it as well . ` behave ` , ` pytest ` and ` pep8radius ` are passing locally . I have not tried building ` deb ` or ` rpm ` packages , but these changes should not affect that in any way . I am opened for any feedback you might have . # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",824.0
149,2017-12-20 14:42:19,2017-12-21 05:11:27,Optionally including username to password promp,"This is suggestion for improvement , not a bug . I am using ` pgcli ` quite often . My terminal app is iTerm2 which has builtin password manager . It recognizes regex in terminal and , when triggered , offers to enter password read from KeyChain . Quite handy feature . Problem is that , with ` pgcli ` , there is no single regex to use for different databases , since prompt is `` Password : '' . I would like to make distinction based on user I am using to connect . Currently I patch local installation of ` pgcli ` to include username ( which solves my problem , but more generic solution would probably include both username and database , maybe even host ) in password prompt . These are two places that I have modified : https : //github.com/dbcli/pgcli/blob/master/pgcli/main.py # L368 https : //github.com/dbcli/pgcli/blob/master/pgcli/main.py # L386 My modification looks something like this : I understand if you do not want to change default behavior , but would you consider adding flag that would modify password prompt to include username ( and maybe database and host ) ? If yes , I might be able to provide PR . Thanks .",823.0
150,2017-12-16 15:39:59,2017-12-17 03:02:45,Fixed # 816 The -- list command line option tries to connect to 'person‚Ä¶,‚Ä¶al ' DB # # Description # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,821.0
151,2017-12-11 03:53:01,2017-12-16 22:14:58,Use other prompt ( prompt_dsn ) when connecting using -- dsn parameter ( attempt 2 ),# # Description It 's related to other PR : https : //github.com/dbcli/pgcli/pull/815 And it 's a result of discussion with @ j-bennet ( https : //github.com/dbcli/pgcli/pull/815 # issuecomment-349180420 ) # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,820.0
152,2017-12-05 03:13:07,2017-12-12 07:05:32,Changelog update to release 1.8.2 .,# # Description Changelog update before releasing 1.8.2 . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,819.0
153,2017-12-01 03:19:14,2017-12-02 01:37:21,cli_helpers bump ( fixes a python 2.7 bug ) .,# # Description There was a bugfix in cli_helpers ( https : //github.com/dbcli/cli_helpers/pull/32 ) . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,818.0
154,2017-11-20 10:44:31,2017-12-17 03:02:46,The -- list command line option tries to connect to 'personal ' DB,# # Description When running ` pgcli -- list ` to get a list of my databases I get an error : < details > < summary > pip freeze < /summary > < pre > agate==1.6.0 agate-dbf==0.2.0 agate-excel==0.2.1 agate-sql==0.5.2 asn1crypto==0.22.0 Babel==2.4.0 backports.csv==1.0.5 backports.ssl-match-hostname==3.5.0.1 cached-property==1.3.0 certifi==2017.4.17 cffi==1.10.0 chardet==3.0.4 cli-helpers==0.2.3 click==6.7 colorama==0.3.7 configobj==5.0.6 cryptography==2.0.2 csvkit==1.0.2 dbfread==2.0.7 docker-compose==1.8.0 docker-py==1.9.0 dockerpty==0.4.1 docopt==0.6.2 enum34==1.1.6 et-xmlfile==1.0.1 funcsigs==1.0.2 functools32==3.2.3.post2 future==0.16.0 futures==3.1.1 greenlet==0.4.11 httplib2==0.9.2 humanize==0.5.1 idna==2.5 ipaddress==1.0.18 isodate==0.5.4 jdcal==1.3 jrnl==1.9.8 jsonschema==2.5.1 kaptan==0.5.8 keyring==10.4.0 keyrings.alt==2.2 leather==0.3.3 libtmux==0.6.3 mock==2.0.0 msgpack-python==0.4.8 mycli==1.11.0 neovim==0.1.13 openpyxl==2.4.8 parsedatetime==2.4 pbr==2.0.0 pgcli==1.8.1 pgspecial==1.9.0 prompt-toolkit==1.0.15 psycopg2==2.7.3.2 pyasn1==0.1.9 pycparser==2.18 pycrypto==2.6.1 pycurl==7.43.0 Pygments==2.2.0 pygobject==3.24.1 PyMySQL==0.7.11 python-apt==1.4.0b3 python-dateutil==1.5 python-debian==0.1.30 python-debianbts==2.6.1 python-slugify==1.2.4 pytimeparse==1.1.6 pytz==2017.2 pyxdg==0.25 PyYAML==3.12 ranger==1.8.1 requests==2.18.1 seashells==0.1.2 SecretStorage==2.3.1 setproctitle==1.1.10 six==1.11.0 SQLAlchemy==1.1.12 sqlparse==0.2.4 terminaltables==3.1.0 test==2.3.4.5 texttable==0.9.1 tmuxp==1.2.6 trollius==2.0.1 tzlocal==1.4 Unidecode==0.4.21 urllib3==1.21.1 wcwidth==0.1.7 websocket-client==0.44.0 xlrd==1.0.0 < /pre > < /details >,816.0
155,2017-10-21 18:12:40,2017-10-22 05:59:55,The unix_socket_directories setting may not be present .,"# # Description An attempt to fix https : //github.com/dbcli/pgcli/issues/805 . The ` unix_socket_directories ` setting may not be present in ` pg_settings ` view . I 'm not sure if this will fully fix the problem , as I was not able to completely reproduce the conditions . But the safeguard is needed when retrieving the setting anyway . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",808.0
156,2017-10-11 19:59:05,2017-10-11 20:22:48,Do NOT escape database names .,# # Description Do n't quote the database names regardless of the mixed case . # # Checklist - [ X ] I 've added this contribution to the ` changelog.md ` .,800.0
157,2017-10-06 18:22:06,2017-10-06 19:25:21,Fix for tests breaking after tee .,"# # Description This is an attempt to fix the ` tee ` test breaking : https : //github.com/dbcli/pgcli/issues/795 . Also , this fixes the error in ` notee ` test which should not be ` notee ` ( that 's a mycli command ) but ` \o ` : https : //github.com/dbcli/pgcli/issues/797 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",798.0
158,2017-10-03 19:41:06,2017-10-06 19:51:46,Use termporary config in tests,# # Description Use temporary directory as config directory . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,796.0
159,2017-09-19 18:30:20,2017-09-19 19:21:14,Changelog update to release 1.8.1 .,# # Description Changelog update for a bugfix release 1.8.1 . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - ~ [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) ~ .,793.0
160,2017-09-15 18:48:16,2017-09-15 21:46:14,Remove shebang and git execute permission from pgcli/main.py .,# # Description Remove shebang and git execute permission from pgcli/main.py . pgcli/main.py ca n't be executed directly because of the package structure . removal of the shebang is required for packaging in Fedora # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,790.0
161,2017-09-13 03:11:22,2017-09-14 20:00:09,Changelog update to release 1.8.0 .,# # Description Changelog update before releasing 1.8.0 . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - ~ [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) ~ .,788.0
162,2017-08-20 13:42:37,2017-08-21 00:56:06,Remove OrderedDict workaround for python < 2.7,# # Description Remove the workaround present for importing ` OrderedDict ` in python versions prior to 2.7 . [ OrderedDict docs showing it was added in 2.7 ] ( https : //docs.python.org/2/library/collections.html # collections.OrderedDict ) # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,785.0
163,2017-08-12 11:05:05,2017-09-05 21:12:42,Port auto_vertical feature test from mycli to pgcli,# # Description Port auto_vertical feature test from mycli to pgcli # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` .,782.0
164,2017-08-12 07:38:14,2017-08-18 14:38:22,"Fix TODO , optionally use POSTGRES_USER , POSTGRES_HOST POSTGRES_PASSWORD from environment","# # Description Fix TODO , optionally use POSTGRES_USER , POSTGRES_HOST POSTGRES_PASSWORD from environment # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` .",781.0
165,2017-08-10 09:21:12,2017-08-18 22:27:44,Preliminary work for a future change in outputting results that uses less memory,# # Description Preliminary work for a future change in outputting results that uses less memory # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` .,780.0
166,2017-08-08 10:46:27,2017-08-28 17:02:17,use cursor from psycopg in pgcli,# # Description use cursor from psycopg in pgcli I 'm not sure if you should/can use hardcoded numbers to match the ` type_code ` of Cursor.description # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` .,777.0
167,2017-08-06 21:02:05,2017-08-07 05:19:52,Documentation for pgcli magic in ipython,"# # Description This adds an IPython section to the README , to document using pgcli from within IPython console . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",774.0
168,2017-08-06 18:03:32,2017-08-14 00:21:43,Add \conninfo command,# # Description Fix # 716 # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,773.0
169,2017-08-06 17:35:39,2017-08-07 13:28:56,Better formatting for array output,# # Description Before : # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,772.0
170,2017-08-06 07:50:53,2017-08-07 03:14:41,Do n't quote identifiers that are non-reserved keywords,"# # Description Keep track of which keywords are reserved , and quote identifiers that co√Øncide with those . The list of reserved words is from https : //www.postgresql.org/docs/10/static/sql-keywords-appendix.html . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",771.0
171,2017-08-06 06:34:20,2017-08-07 02:57:50,Do n't include args in function suggestions for backslash commands,"# # Description E.g . after ` \df ` , we want to suggest only function names . @ amjith , you feel like merging this ? # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",770.0
172,2017-07-29 14:06:01,2017-07-30 00:31:46,Use psycopg2 to get database details,# # Description Use psycopg2 to get database details when connected . Fix # 765 # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,766.0
173,2017-07-27 12:10:41,2017-07-27 17:09:43,Use raw strings where needed to avoid backslash ambiguity,"# # Description This is rather not really an issue as it is , but this changes allow to avoid ambiguity in slashes interpretation in strings ( W1401 ) . # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ ] ~~I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .~~",764.0
174,2017-07-27 11:36:45,2017-07-27 16:59:56,Add editorconfig,# # Description I like working with http : //editorconfig.org/ to get my editor configured for each project . I think it would be a nice addition ( I 'm using it locally ) . # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ ] ~~I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .~~,763.0
175,2017-07-27 05:56:37,2017-07-27 10:56:58,Fpietka badges,# # Description Fix CodeCov link ( was broken ) Add Landscape badge for code quality # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,762.0
176,2017-07-25 17:18:58,2017-07-25 22:34:06,Behave tests should also accept pgport .,# # Description Fixes the problem with behave tests disregarding PGHOST and PGPORT . This is needed if using a dockerized postgres instance for testing . Example command that did not work before : ` PGHOST=localhost PGUSER=postgres PGPORT=8432 behave ` ( note the non-standard port because it 's forwarded from the docker container ) . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,761.0
177,2017-07-21 07:05:28,2017-07-24 11:51:49,Add coverage badge,I suggest to communicate on test coverage to encourage quality and increase confidence in project .,757.0
178,2017-07-20 14:31:33,2017-07-20 14:47:15,Removed instructions for custom brew tap .,# # Description Update the docs to reflect pgcli moving back to the homebrew-hosted formula . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - ~ [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) ~ .,755.0
179,2017-07-16 22:10:34,2017-07-17 00:48:35,Add fish-style autosuggestion .,# # Description Fish-style auto-suggestion . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . Reviewer : @ j-bennet,750.0
180,2017-07-16 02:21:47,2017-07-16 03:08:04,Changelog update to release 1.7.0 .,# # Description Updated the changelog before releasing 1.7.0 . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,747.0
181,2017-07-14 23:10:09,2017-07-15 05:27:55,List databases,"# # Description Add an option to list databases from command line . Should fix # 206 . My modifications are open for discussion , I tried my best to fit into existing code , but it may not be perfect . # # Checklist - [ X ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",746.0
182,2017-07-07 13:50:40,2017-07-09 21:28:54,Better * expansion for inserts,"# # Description When expanding * for ` INSERT INTO tbl ( * ` , skip columns that have a default value of either some sequence ( ` nextval ( ... ` ) or of ` now ( ) ` . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",744.0
183,2017-07-06 05:00:27,2017-07-09 20:49:06,Added InterfaceError handling for closed connection,# # Description # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,743.0
184,2017-07-01 18:05:23,2017-07-01 21:48:38,Use RST style links,Fix some incorrectly formatted links using markdown syntax .,741.0
185,2017-06-26 18:29:46,2017-06-26 20:18:46,Added functional tests for expanded mode .,"# # Description End-to-end tests for ` \x on , \x off , \x auto ` . # # Checklist - ~ [ ] I 've added this contribution to the ` changelog.md ` ~ . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",740.0
186,2017-06-19 17:10:37,2017-06-26 17:37:26,Use CLI Helpers for output formatting,"# # Description This pull request moves all output formatting to CLI Helpers . It fixes https : //github.com/dbcli/pgcli/issues/617 . It removes : - the packaged tabulate library . - the expanded output module . One other change is that the expanded output starts the record numbers at 1 instead of 0 , which actually makes it behave like psql . So , instead of : ` - [ RECORD 0 ] -- -- -- -- -- -- -- -- -- -- -- -- - ` you see : ` - [ RECORD 1 ] -- -- -- -- -- -- -- -- -- -- -- -- - ` ~~ * * Note : The tests will fail until CLI Helpers v2.0 is released . * * ~~ # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",735.0
187,2017-06-15 07:51:43,2017-06-15 14:00:59,Use standard NullHandler,"Hi , Standard ` NullHandler ` is here for a while . It 's implementation is even more complete than our own . I suggest to use it .",734.0
188,2017-06-14 14:34:54,2017-06-14 16:45:57,Fix empty line lint,: - ),732.0
189,2017-06-09 21:42:39,2017-06-10 23:53:23,Schema name should be single-quoted in SET SCHEMA .,# # Description Fixes https : //github.com/dbcli/pgcli/issues/469 . Schema name should be quoted in ` SET SCHEMA ` statement . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,730.0
190,2017-06-09 18:14:33,2017-06-11 17:00:44,Only change LESS in env if not already configured .,# # Description Only set LESS environment variable if it 's not already set . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,729.0
191,2017-06-02 19:15:25,2017-06-02 19:31:32,Update Homebrew install instructions,# # Description Updates the macOS installation instructions to use dbcli 's Homebrew tap . This address # 718 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,727.0
192,2017-05-29 00:58:12,2017-05-29 13:18:46,Refresh completions after COMMIT or ROLLBACK .,"# # Description We have to refresh completions after COMMIT or ROLLBACK , since those may change the database schema . See also # 711 . # # Checklist - [ X ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",724.0
193,2017-05-28 22:06:05,2017-05-29 03:50:14,Fix alias dsn from custom rcfile,# # Description Fix for # 717 . # # Checklist - [ X ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,722.0
194,2017-05-25 12:47:35,2017-05-26 20:52:15,Make it possible to use SSL with pgcli,# # Description This adds support for additional url query params which make stuff like work . More generally it allows one to pass through various extra connection options . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,721.0
195,2017-05-18 03:10:31,2017-05-27 03:34:39,Preparing to release 1.6.0 .,# # Description Updated changelog and bumped pgspecial to release pgcli 1.6.0 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,719.0
196,2017-05-09 22:00:33,2017-05-11 17:05:11,Adding time option for the Prompt Format,"# # Description I added a date option for the prompt ( as asked for in # 580 ) . To use it , you just have to add `` \\t '' to the Prompt Format option . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",715.0
197,2017-05-07 19:28:51,2017-05-23 22:43:37,add behave to tox,# # Description add behave to tox # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - ~ [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .~,714.0
198,2017-05-06 13:52:22,2017-05-06 21:36:59,fix pgspecial update in behave tests,# # Description fix pgspecial update in behave tests # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,713.0
199,2017-05-03 04:34:25,2017-05-06 22:25:18,Edit last-run query in external editor .,"# # Description This addresses # 434 . It relies on https : //github.com/dbcli/pgspecial/pull/33 . If a query has been run in the current session , opening the external editor ` \e ` will bring the last-run query into the editor . Otherwise , the editor will be blank . The behavior remains the same for editing a current query ( e.g . ` select \e ` ) . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",710.0
200,2017-05-02 18:09:38,2017-05-02 22:06:35,Behave remove boiler plate code,# # Description Behave remove boiler plate code # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,709.0
201,2017-04-29 19:36:24,2017-04-29 21:51:49,Test using behave the tee command,# # Description Test using behave the tee command # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,706.0
202,2017-04-29 06:21:14,2017-04-29 22:27:45,behave fix clean up,# # Description In an earlier commit I 've changed the current working directory and the removal of a temporary file did n't take that into account . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,703.0
203,2017-04-28 23:19:41,2017-04-30 23:12:27,Fix handling of failure to obtain lock,# # Description Fixes # 700 . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,701.0
204,2017-04-28 19:16:42,2017-04-29 06:28:51,behave test source command,# # Description behave test source command # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,699.0
205,2017-04-28 15:22:50,2017-04-28 16:27:15,behave quit pgcli nicely,"# # Description behave quit pgcli nicely so that coverage can be collected , before this patch pgcli was killed by pexpect at the end of a feature test # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",698.0
206,2017-04-27 14:15:34,2017-04-27 18:05:30,Check changelog.rst markup,Changelog is currently broken in master . This lead to raw changelog rendering in GitHub and error if included in Sphinx . I suggest to check diff to Changelog in travis .,694.0
207,2017-04-27 13:53:59,2017-04-29 19:47:34,Complete well known following keywords,I extracted the * well known following keywords * mechanism from # 689 in a dedicated PR . The basic idea is to store keywords as a dict of * keyword * - > list of * well known following keywords * . This allow to provide a smarter set of candidates e.g . after ` CREATE ` .,693.0
208,2017-04-27 13:45:10,2017-04-27 18:04:28,Update DEVELOP.rst with external pgspecial project,` DEVELOP.rst ` is wrong since pgspecial has been extracted in a dedicated project . I suggest to simply point to pgspecial project .,692.0
209,2017-04-25 09:41:34,2017-04-25 21:08:50,Configure suggestions for \sf,"This requires https : //github.com/dbcli/pgspecial/pull/29 , but should n't hurt even before it gets integrated .",688.0
210,2017-04-24 19:00:46,2017-04-25 15:10:51,behave pager wrapper,# # Description behave pager wrapper # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,687.0
211,2017-04-23 11:23:44,2017-04-26 18:01:33,Suggest columns for ` ORDER BY ` and ` DISTINCT ` ( fixes # 685 ),"# # Description Having typed an alias name in an ` ORDER BY ` or ( ` SELECT ` ) ` DISTINCT ` clause , the alias was not taken account of , and the completion simply listed all columns . This change fixes that , and makes the autocompletion behave the same as in ` SELECT ` and ` WHERE ` clauses . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",686.0
212,2017-04-21 08:37:19,2017-04-26 18:01:34,Autocompletion includes alias name twice for ` ORDER BY ` clause in ` SELECT `,"# # Description When I write a simple ` SELECT ` query ` JOIN ` ing an aliased table , the autocompletion of the ` ORDER BY ` clause incorrectly includes the alias name twice . In particular , given tables :",685.0
213,2017-04-19 04:11:45,2017-04-19 22:34:50,Change author name and email .,# # Description Update author and email .,684.0
214,2017-04-12 09:45:30,2017-04-13 03:22:59,Make it easier to find config option documentation,"# # Description It took me a little long to find the config options . Reasons to make it more visible I think are : * The location is not in the help text * Not everyone is familiar with the convention of .rc files going in ` XDG_CONFIG_HOME ` . * Often options are explained in the readme ; I thought it nice to at least mention where one could find a description of them . On the flipside , the readme becomes a little longer . This contribution is n't noteworthy of course , so I took the liberty to skip the checklist üòÅ .",681.0
215,2017-04-08 00:02:38,2017-04-09 01:41:38,Ported pep8radius addition from mycli .,# # Description Ported from mycli . Discussion : https : //github.com/dbcli/mycli/issues/392 . # # Checklist - [ X ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,680.0
216,2017-04-05 16:19:40,2017-04-07 17:38:45,Standardize command line option names,This standardizes on the same names as psql and removes some conflicts . # # Description I was using a database tool that was launching pgcli ( thinking it was psql ) with the ` -- username ` option . This failed as pgcli expected the username option as ` -- user ` . Since pgcli has extra and different functionality than psql it makes sense to have additional command line options but I think it 's important for compatibility purposes to mimic psql 's command line interface . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,679.0
217,2017-03-30 10:14:24,2017-03-31 04:19:54,Allow configurable multiline continuation char,"# # Description Makes the character used for continuing multi-line queries configurable . To me , having a space rather than ' . ' is cleaner , ( particularly when pasting the query/output for others to read ) . Now , setting ` multiline_continuation_char = ' ' ` changes : # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",678.0
218,2017-03-29 02:26:16,2017-07-20 16:48:28,Include arguments in function suggestions,"# # Description E.g . instead of suggesting ` my_func ( ) ` , suggest ` my_func ( your_arg : = ) ` or ` my_func ( your_arg text ) ` , depending on the context . There are config settings in the form of template strings ( e.g . ` { arg_name } : = { arg_default } ` ) for customizing the formatting of the arguments and a setting for at what number of args to switch from oneliners to multiline arg lists . # # Checklist - [ x ] I 've added this contribution to the ` changelog.md ` . - [ x ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .",677.0
219,2017-03-22 04:31:59,2017-03-22 05:23:34,Bumped minimal requirement of prompt-toolkit to 1.0.10,# # Description This is required to actually fix https : //github.com/dbcli/pgcli/pull/670 . ` reset_current_buffer ` was deprecated in 1.0.10 and ` pre_run_callables ` added instead . # # Checklist - [ X ] I 've added this contribution to the ` changelog.md ` . - [ X ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,676.0
220,2017-03-19 21:04:27,2017-04-01 17:11:06,Functional tests housekeeping,# # Description * Removes an unnecessary step from functional tests . * Splits test steps into different files . * Adds support for coverage . Work in progress . # # Checklist - [ ] I 've added this contribution to the ` changelog.md ` . - [ ] I 've added my name to the ` AUTHORS ` file ( or it 's already there ) .,673.0
221,2017-03-18 21:26:30,2017-03-19 19:49:33,PR and issue templates .,Based on discussion in mycli Google group . Also see the same in mycli : https : //github.com/dbcli/mycli/pull/372,671.0
222,2017-03-16 04:24:27,2017-03-20 16:31:57,Attempt to fix # 668 ( not pretty ) .,"This is an attempt to fix # 668 . There 's another PR to do the same : https : //github.com/dbcli/pgcli/pull/669 , but it does not fix the problem completely , because we need to reset the cli buffer in most cases . Editor command seems to be the special case where we do n't want the reset . This PR is work in progress , because I dislike using internal ` prompt_toolkit ` API like this . I would like very much for @ jonathanslenders to weigh in on this . cc @ amjith @ jdpopkin",670.0
223,2017-03-15 20:30:24,2017-06-09 16:13:46,\e is not working on pgcli 1.5.0 installed via brew,"Conversation from gitter : > When I write ` select 1 \e ` , I correctly see ` select 1 ` in my editor . When I edit and quit , I do n't see ` select 2 ` . I do n't see anything at all . If I type ` ; < RET > ` , I get the ca n't execute an empty query error message . > > nvim 0.1.7 , macOS Sierra ( 10.12.1 ) . nvim exits normally when I do the same thing from bash . And it works with psql . I believe it also worked fine in pgcli prior to my last brew upgrade , but I 'm not sure what version I was on previously . > Judging by ` brew list -- versions pgcli ` , I was probably on 1.3.1_1 . > I 'm unable to reproduce it since my brew setup is screwed up . Steps to reproduce : 1. brew update & & brew install pgcli 2 . Launch pgcli 3 . Type ` select 1 \e ` 4 . Change the query to ` select 2 ` in the editor . 5 . Save and quit the editor . 6 . Check to see if the prompt shows ` select 2 ` .",668.0
224,2017-03-15 02:27:54,2017-04-21 14:40:13,Parametrize completer in tests + deduplicate test code,"Instead of having a bunch of hard-coded completer fixtures ( with different configs ) in tests/test_smart_completion_multiple_schemata.py and tests/test_smart_completion_public_schema_only.py , let 's have a completer factory in tests/metadata.py . Also , instead of running a test case for one completer config , let 's run it for a bunch of different completer configs . That 's the basic idea . Also , I noticed there was some room for deduplication of the smart_completion code , so I moved a bunch of duplicated code from the test functions into metadata.py . There 's no change in function for any commit except the first ( `` Parametrize ... '' ) .",667.0
225,2017-03-14 05:53:42,2017-03-14 06:04:03,Changelog for bugfix release 1.5.1 .,"Bugfix release , mostly just to fix # 665 . @ amjith Please review .",666.0
226,2017-03-13 18:02:48,2017-03-13 18:16:35,Fix set_session can not be used inside a transaction when using dsn .,Addresses # 664,665.0
227,2017-03-13 13:03:14,2017-03-14 14:04:38,set_session can not be used inside a transaction in v1.5.0,"I 've seen this raised and closed in # 646 , # 652 and # 658 but i 'm experiencing this in v1.5.0 when using a service ( which was working in 1.3.1 ) : ` pgcli service=foo_db ` I 've tried ` pip install psycopg2==2.6.2 ` and this is returned : ` Requirement already satisfied : psycopg2==2.6.2 in /usr/local/lib/python2.7/site-packages `",664.0
228,2017-03-11 23:24:34,2017-03-11 23:31:55,Track recent changes in changelog .,Let 's see if we can track changes as we go .,663.0
229,2017-03-11 16:11:11,2017-03-11 22:52:54,Update AUTHORS,Reviewer : @ j-bennet,661.0
230,2017-03-10 12:21:41,2017-04-19 17:08:37,Docker,"Simple Dockerfile to allow running this tool in docker . I 've tested it manually , but I ca n't get the automated test suite to run . I 've been trying to , but I do n't want to let this linger while I work on that .",660.0
231,2017-03-10 08:49:03,2017-03-11 23:13:08,Add a command line option for -- less-chatty . Fix # 626 .,I saw this issue labeled Easy . I took a stab at it and I 'm open to feedback .,659.0
232,2017-03-07 03:21:40,2017-03-07 14:02:53,Add support for unicode chars in expanded mode .,Reviewer : @ koljonen This fixes # 651,656.0
233,2017-03-07 01:11:12,2017-03-09 02:51:00,Parse function bodies,"Consider this script The change here is that ` SELECT < cursor > FROM Baz ; ` will be seen as the current statement , instead of the whole function definition . This means we 'll no longer get column suggestions from ` Bar ` .",655.0
234,2017-03-07 00:07:02,2017-04-21 14:39:20,Casing of column headers ( using casing file ),I think it 's a lot nicer looking .,654.0
235,2017-03-06 22:12:25,2017-03-07 00:57:50,Add MATERIALIZED VIEW keywords,For issue # 650 .,653.0
236,2017-03-05 01:37:50,2017-03-14 20:36:37,Suggest objects from schemas not in search_path,"I keep typing e.g . ` SELECT mff ` and getting annoyed when ` someschema.my_fancy_function ( ) ` is n't suggested because I forgot to type the schema first . So this fixes that , for tables , views functions and datatypes . There 's a config option for getting the old behaviour . I added some rudimentary tests . I 'm working on another branch where I 'll make it more convenient to run the same test for different completer configs , which will add some more test cases for this feature as well . Sending this to you @ darikg , as it 's related to a bunch of my other stuff you 've reviewed .",649.0
237,2017-03-03 23:56:44,2017-03-07 00:18:21,Changelog update for 1.5.0,@ dbcli/pgcli-core Can you please review the changelog and make any necessary edits ? @ j-bennet Can you do a release once this is approved by core team ?,648.0
238,2017-03-03 14:06:47,2017-03-03 18:26:25,Adjust the connection order to work around psycopg2 restriction .,Reviewer : @ darikg This fixes # 646 Looks like psycopg2 released a new version yesterday that broke us . üòû The change was you ca n't change the ` autocommit ` status while a cursor is still active . So I moved the sql execution after we set the ` autocommit ` to ` True ` .,647.0
239,2017-03-03 06:08:47,2017-03-03 19:19:34,Add python 3.5 and 3.6 to test suite .,Reviewer : @ stuartquin,645.0
240,2017-03-03 06:02:38,2017-03-03 19:17:51,Reconnect on OperationalError .,Reviewer : @ j-bennet This addresses # 643 . We should have been reconnecting on all OperationalErrors . Docs : http : //initd.org/psycopg/docs/module.html # psycopg2.OperationalError,644.0
241,2017-02-25 14:19:40,2017-02-25 22:23:36,User config to reserve more menu space,"By default we only reserve 4 lines for the suggestion menu , which feels cramped to me . This just makes the number of lines user-configurable",642.0
242,2017-02-25 14:02:51,2017-02-25 22:16:13,Suggest keywords after ALTER,This is super simple I just wanted ` ALTER TABLE foo ALTER ` to suggest ` COLUMN `,641.0
243,2017-02-08 09:33:42,2017-02-10 04:40:56,Switch the shorted prompt when prompt length is too long .,Connect # 587 : switch the shorted prompt when prompt length is too long ( if using the default prompt ) .,639.0
244,2017-02-05 02:57:41,2017-02-05 03:42:06,Added documantation about tabulate 's number formatting . Connect # 617 .,"This does not fix issue # 617 , but at least documents the behavior .",638.0
245,2017-01-21 18:09:56,2017-01-21 21:56:39,"Per # 298 , make expand modes configurable .",This makes it possible to enable through the configuration the always expand and automatic expansion modes in pgcli .,633.0
246,2017-01-11 00:37:31,2017-01-12 01:54:32,Changelog and version update for release v1.4.0 .,@ dbcli/pgcli-core Please review .,631.0
247,2017-01-06 17:47:54,2017-01-07 11:53:01,Set default data_formatting to nothing .,Fixes # 629 Reviewer : @ stuartquin,630.0
248,2016-12-15 17:44:38,2017-03-11 23:13:08,Add a command line option for -- less-chatty,This should suppress the startup message when supplied .,626.0
249,2016-12-12 03:16:34,2017-01-09 15:54:32,Search suggestions by initialism,"The basic idea is that we should be able to type a table alias and have it completed to the table name with just one key press . E.g . I type ` SELECT * FROM ufg < tab > ` and the result is ` SELECT * FROM UserFunctionGroups UFG ` . I expanded this idea a bit , so that I can type ` select gdm < tab > ` and get ` select get_department_manager ( ) ` , or type ` SELECT ... ORDER BY ttn < tab > ` and get ` SELECT ... ORDER BY TransferTypes.TransferTypeName ` . @ darikg I added you as a reviewer ( not sure how that feature works ) . It 's quite possible that every line of code I touch in this PR is one you 've reviewed before in some old PR of mine .",624.0
250,2016-12-07 04:01:08,2016-12-12 23:06:51,Add transaction status to toolbar,"This adds a red `` Failed transaction '' text to the toolbar if the the current transaction is doomed , and a green `` Transaction '' text if we 're in a non-doomed transaction . I 'd especially welcome any improvement on the choice of colours/styling , as I feel it 's not quite what I wanted ( I 'd want the text to `` pop '' more ) , and I suspect we 'll be stuck with whatever initial choice we make .",621.0
251,2016-12-07 02:09:06,2016-12-07 05:41:45,Display vi mode in the toolbar,,620.0
252,2016-12-05 02:21:30,2016-12-10 15:42:26,Table-qualifying column suggestions,"@ darikg Do you have time to look at yet another of my tweaks to the completion engine ? > Support for table-qualifying column suggestions > > ... i.e . suggesting foo.fooid instead of just fooid > Controlled using a config-file setting : > * * qualify_columns * * : always/never/ * * if_more_than_one_table * * . > > To enable the proper sorting of qualified column suggestions , we > introduce the concept of synonyms for suggestions > ( in ` pgcompleter.find_matches ` ) . They way synonyms work is that a > number of synonyms may be provided for a suggestion sent to > ` find_matches ` . If synonyms are provided , sorting is based on how > well the best synonym matches the input , instead of only comparing > the input to the suggestion text . > In this case , the unqualified name acts as a synonym . > I have a couple of other ideas of use cases where we can use synonyms > to get better completions with less typing for the user , which I intend > to explore later .",619.0
253,2016-11-26 18:34:36,2017-06-26 17:37:26,Numeric output is not showed correctly,"I 'm using ` pgcli ` version : 1.3.1 This is the output using ` pgcli ` : ! [ 1480184973 ] ( https : //cloud.githubusercontent.com/assets/7363250/20642431/2cf60846-b3d4-11e6-9f0e-cf58c174da7b.png ) And the output for the same query , using ` psql ` : ! [ 1480184890 ] ( https : //cloud.githubusercontent.com/assets/7363250/20642430/289aee7e-b3d4-11e6-8b1d-ffa81e8990fd.png ) -- -- -- -- -- -- -- -- -- -- -- -- This is a better test that anyone can replicate : ` pgcli ` : ! [ 1480185134 ] ( https : //cloud.githubusercontent.com/assets/7363250/20642444/9a85ebe2-b3d4-11e6-8c2a-67ff6d04905b.png ) ` psql ` : ! [ 1480185172 ] ( https : //cloud.githubusercontent.com/assets/7363250/20642449/a245f20a-b3d4-11e6-8642-bb71107c0ec6.png ) -- -- -- -- -- -- -- -- -- -- -- -- The behavior is new ; at least 4 months ago it was working as intended .",617.0
254,2016-11-20 22:14:13,2016-11-20 23:31:32,Fix scoping for columns from CTEs,"We were suggesting all CTE columns regardless of whether the CTE in question was included in the FROM clause . This also makes populate_scoped_columns output ` TableRefence ` namedtuples for CTEs , like it does for tables/views/functions . Previously it would emit strings for CTEs .",614.0
255,2016-11-20 20:52:42,2016-11-20 21:13:07,Fix crash after ` with `,Anyone feel like merging this tiny fix ?,613.0
256,2016-11-15 01:20:00,2016-11-15 16:12:19,Added -- prompt option .,Related to # 611 .,612.0
257,2016-10-31 17:39:35,2016-11-01 22:29:05,Fix issue # 603,Python 3 forbids comparisons between different types : use a tuple containing a single 0 ( zero ) as the priority for path matches so that it can be compared with those generated by the workhorse method find_matches ( ) .,608.0
258,2016-10-26 19:39:02,2016-10-26 20:21:36,Update changelog for version 1.3.1,Reviewer : @ darikg Can you review and merge ? I 'll push out a new release as soon as this is merged .,607.0
259,2016-10-26 15:18:04,2016-10-26 19:36:31,Bump sqlparse to 0.2.2,See # 605,606.0
260,2016-10-22 08:23:44,2017-01-12 06:24:16,\i raises a TypeError,"With Python 3.6b2 , I got the following immediately after entering ` \i ` followed by a space : I can not investigate further right now , but I will try to narrow the case .",603.0
261,2016-10-22 03:53:11,2016-10-26 14:46:18,Changelog and authors update for 1.3.0,@ dbcli/pgcli-core Can you please approve ?,602.0
262,2016-10-17 17:50:05,2016-10-20 03:46:42,Darikg/unrecognized keywords,See # 597,598.0
263,2016-10-15 11:34:43,2016-10-16 17:41:36,Fix for issue # 595,"All behaviors and tests pass , with Python 3.6b2 . I did not exercise them on previous versions , but I can surely do it , if needed .",596.0
264,2016-10-02 17:50:36,2016-10-04 03:42:49,Minimal fix for # 590,issue # 590,591.0
265,2016-09-21 17:25:04,2016-09-26 04:35:20,fixes # 588 invalid setting for redshift,,589.0
266,2016-09-21 17:08:03,2016-09-26 04:35:21,pgcli v1.2.0 not working for redshift,Introduced by https : //github.com/dbcli/pgcli/commit/3f310f5070d45852afda29ed50ba656ff1cb7465 # diff-8859be39408e4fbeea82b923784d9e65R163 Which I 'm guessing means I 'm not a superuser : - ),588.0
267,2016-09-21 14:07:57,2017-03-07 01:43:57,Switch the shorted prompt when prompt length is too long,Most of the complaints we receive about the pgcli prompt is that it is too big when people are using it with AWS hosts . It would be nice to automatically switch to database name only when the prompt size is bigger than a certain threshold . Say 30 chars ( this will need a bit of experimentation to get right ) .,587.0
268,2016-09-15 17:16:52,2016-09-29 13:57:02,master : numbers division for int and float,"I apologize in advance for possible mistakes , first time trying to take part in open source project . All decimal columns defined as text field , I change this behavior . Now decimal defined as float . Changed default formatting for float and int . And separate int and text cases .",583.0
269,2016-09-12 21:40:25,2016-09-12 21:57:40,Fix crash bug with leading parenthesis,"@ amjith , you want to merge this in ?",581.0
270,2016-09-04 21:41:08,2016-09-12 21:28:05,Make semicolon not trigger execution in multiline mode,"Basically , having to go to the end of the input to delete the semicolon , then back to wherever you want to insert your newline , and then back to the end to re-add the semicolon before executing your edited query is way too complicated , and I keep getting it wrong , resulting in half-written queries being executed and me getting frustrated . My suggested solution is to ( 1 ) remove the power of the semicolon to decide what [ Enter ] does , and ( 2 ) make the UI ( toolbar ) tell the user about [ Esc ] [ Enter ] . The reason it 's [ Esc ] [ Enter ] and not [ Alt ] - [ Enter ] in the toolbar is that [ Alt ] - [ Enter ] does n't work by default on Mac OS ( it requires the user to change the settings of the terminal app ) . So ... does anyone else use multiline mode and have an opinion on this ?",577.0
271,2016-09-04 12:43:49,2016-09-04 19:00:17,Support configuring keyword casing preferences,See # 569 @ koljonen want to have a look ?,576.0
272,2016-09-01 12:44:52,2016-09-03 03:06:37,Update changelog for version 1.2.0 release .,@ dbcli/pgcli-core Can you please review ?,574.0
273,2016-08-25 19:15:53,2016-08-26 14:52:26,More prompt,"Hello , first patch is a bugfix ( I 'm using python2 ) : Second one is to add more placeholder to the new prompt variable : - \p for server port - \i for backend PID - # for superuser status ( same as the % # placeholder in psql ) That 's mostly the placeholder I need for my personal use , so feel free to merge only one or no one of these patch . PS : I did n't use the same placeholder as psql since existing one were already different ( except for # , did n't find better idea ) . If the one I choose are badly chosen , feel free to change them .",572.0
274,2016-08-25 02:49:59,2016-09-02 13:44:19,WIP : Use tweaked version of psycopg2.extras.wait_select to supply a timeout,See psycopg/psycopg2 # 468 for a minimal example of the problem,571.0
275,2016-08-23 18:16:24,2016-08-24 00:23:46,Temporary hack for sqlparse crashing after AS,"And a regression test . @ amjith , mind merging this in ? # 563",568.0
276,2016-08-23 11:49:49,2016-08-23 18:25:05,Fix crash bug with named queries,And add behave tests . @ amjith you want to merge this ?,566.0
277,2016-08-03 17:01:22,2016-08-15 20:53:12,Issue # 544 Implementation of watch command,"* * Note * * I do n't think the tests will pass until the related https : //github.com/dbcli/pgspecial/pull/22 is merged . @ amjith what would you normally do in this case ? An implementation of ` \watch ` from psql . If the command can be parsed as a 'watch ' command it is executed , then we sleep the specified number of seconds then execute again . Ctrl+C cancels Any feedback and suggestions on testing welcome",561.0
278,2016-08-01 04:36:16,2016-08-01 19:56:34,Read config files using utf-8 encoding .,@ koljonen Can you review and merge ? This is an extension to # 556 .,559.0
279,2016-07-29 12:12:10,2016-08-03 22:25:03,Add command-line option -- single-connection,This option makes it so that the executor and the completer use the same database connection . This is needed for the completer to function when using one-time passwords for connecting to the database . @ darikg wan na have a look ?,557.0
280,2016-07-28 01:10:42,2016-08-01 04:33:30,configurable null format,"Allows a configurable string for the null result . I like to use ‚ä• to visually distinguish from normal text , so the config value needs to be decoded to unicode . Such decoding should probably be applied to other formatting options , e.g . the prompt . Ideally , the output formatting would be themeable to make nulls , and other types , more distinguishable !",556.0
281,2016-07-27 22:03:31,2016-07-29 14:33:37,Some changes to sorting of suggestions,@ amjith you want to merge this in ?,554.0
282,2016-07-27 20:02:58,2016-08-09 05:10:29,CTE-aware suggestions,"The general idea here is to take a query like and simplify it into either ` SELECT foo , baz FROM bar WHERE foo > 1 ` or ` SELECT * FROM my_cte WHERE ` depending on whether the cursor is inside or outside the CTE body . If outside , parse the fieldnames and cte names and represent them in a manner analogous to real database tables . That way , they can be injected into the completion machinery , so CTE names get suggested alongside table names , and CTE column names get suggested when appropriate . Currently , CTEs are not suggested for joins or join conditions , but I 'll fix that in a follow up PR .",553.0
283,2016-07-27 06:17:41,2016-07-27 09:55:09,Fix failing tests .,Reviewer : @ darikg,552.0
284,2016-07-20 08:52:32,2016-07-27 06:16:36,"Upgrade to sqlparse-0.2.0 , required for Python-3.5 support","The tests pass with python-2.7 and python-3.5 , but other than that I did n't do much testing .",549.0
285,2016-07-15 11:14:43,2016-07-18 03:13:24,Show host and user information in prompt,I can also make this configurable if you are keen ! [ screen shot 2016-07-15 at 12 14 08 pm ] ( https : //cloud.githubusercontent.com/assets/2032984/16872603/afca99c0-4a85-11e6-8a82-ee2de4c23cf0.png ),548.0
286,2016-07-06 16:03:23,,\watch command does not work,( this is a minor issue as ` \watch ` is not a well known command ) PostgreSQL has a ` \watch ` command to repeat queries every X seconds ( as documented here ) : https : //www.postgresql.org/docs/current/static/app-psql.html It works perfectly on the psql CLI :,544.0
287,2016-07-06 15:42:49,2016-07-06 23:50:20,Better scoping for tables in insert statements,"@ amjith mind taking a look ? * * Original commit message : * * This commit makes it so that given ` INSERT INTO foo ( < cursor1 > ) SELECT < cursor2 > FROM bar ; ` , we suggest ` bar ` columns for ` < cursor2 > ` and ` foo ` columns for ` < cursor1 > ` . Previous behaviour is sugggesting columns from both tables in both cases .",543.0
288,2016-07-02 06:14:58,2016-07-04 03:31:38,Update changelog for release 1.1.0 .,I 'd like to do this release to fix the crashes caused due to the url parsing and redshift fix . This release also bumps the pgspecial version to 1.5.0 which adds support for ` \db ` command . @ dbcli/pgcli-core review please .,541.0
289,2016-06-29 18:33:21,2016-06-30 04:42:27,Possible fix for redshift ?,cf # 537 not tested bugfix : do n't call att.atttypid : :regtype : :text in old versions of postgresql,539.0
290,2016-06-29 18:00:21,2016-06-30 04:36:05,Repair exception thrown on urls with ports,"When the database URL contains a port , uri.port is ( at least in Python 2.7.6 ) an integer , not a string , so urlparse.unquote chokes on it . Fixes issue # 536 , but is probably worth verifying on Python 3 .",538.0
291,2016-06-21 01:51:40,2016-06-24 13:43:06,Some sqlcompletion refactoring,"The function signature for ` suggest_based_on_last_token ` was starting to get pretty unwieldy so I wrapped most of those variables into a standalone class unimaginably named ` SqlDocument ` . This cleaned up ` suggest_based_on_last_token ` a little bit and also formalized a couple of repeated patterns there , specifically schema name extraction and the reduction of ` text_before_cursor ` to a more simplified version by finding the preceding token .",532.0
292,2016-06-20 19:43:31,2016-07-06 11:39:56,Suggest table aliases + add tests for casing,"@ darikg , you showed some interest in this , so would you like to take a look ? * * Original commit message : * * If config.main.generate_aliases is True , for ` SELECT * FROM ` , we suggest ` FooBar FB ` and ` foo_bar fb ` instead of ` FooBar ` and ` foo_bar ` , respectively . To be able to add a test , I had to add support for testing with different settings , which meant I could also add tests for casing . There are two non-obvious changes that I can think of : 1 . The lexical sorting of matches is modified so as to sort spaces and underscores before letters and to sort case-insensitively . This is so that e.g ` Foob F ` comes before 'FooBar FB ' when ` foob ` is input . 2 . We now suggest ` some_func ( ) ` instead of ` some_func ` ( because suggesting ` some_func sf ` did n't make any sense ) .",531.0
293,2016-06-19 21:18:33,2016-06-20 03:35:29,Ported less_chatty option from mycli .,This ports ` less_chatty ` config option and ` NONE ` log level from ` mycli ` to address issue # 518 . Related PR : https : //github.com/dbcli/mycli/pull/268,530.0
294,2016-06-19 17:48:18,2016-06-20 16:28:46,Remove duplication from smart completion tests,"@ darikg you mind taking a look at this ? This PR has two parts ( plus some cosmetic changes ) : 1 . The first commit just consolidates existing duplicated logic in the two test_smart_completion\ * files into a new file . 2 . Then there are a six commits that make it so that , for some type of completion ( table , column , ... ) , instead of listing every individual completion we expect to get , we just say what kind of completions to get from the test ` metadata ` dict . E.g . instead of listing every table in the schema ` foo ` ( say for ` SELECT * FROM foo. < cursor > ` ) , we simply say we expect ` testdata.tables ( 'foo ' ) ` . This means we get to write less test code and that fewer tests will break when we expand the test data .",529.0
295,2016-06-16 18:26:04,2016-06-16 22:15:39,Fix some join-condition issues,"@ darikg I think this one 's for you . * * Commit message : * * When self-joining a table with an FK to or from some other table , we got a false FK-join suggestion for that column . There was also a problem with quoted tables not being quoted in the join condition . And there were a couple of problems when trying to join a non-existent table or using a non-existent qualifier ( ` SELECT * FROM Foo JOIN Bar ON Meow. ` ) . I also rewrote get_join_condition_matches a bit in the process , hopefully making it a bit simpler .",528.0
296,2016-06-08 23:01:19,2016-06-16 12:18:01,"For 'JOIN < cursor > ' , suggest 'foo on foo.fooid = bar.fooid '","@ darikg you feel like taking a look at this ? * * Original commit message : * * This is based on my previous work on suggesting join conditions , but here instead we suggest the whole join . What we do is simply check all the tables in the statement for FK relationships and then suggest joins based on those . I think this will not only save key presses , but also be rather useful when exploring an unfamiliar ( part of a ) database . There 's one non-obvious change in this commit ( that I can think of ) : When calling * * sqlcompletion.text_before_cursor * * , the * * text_before_cursor * * argument now no longer includes * * word_before_cursor * * . This is because for 'SELECT \ * FROM foo JOIN bar < cursor > ' , we would otherwise consider the table * * bar * * already included in the statement and thus suggest e.g . 'baz on baz.barid = bar.barid ' .",527.0
297,2016-06-07 18:55:29,2016-06-07 21:28:45,` column ` keyword suggests columns,E.g . so ` ALTER TABLE foo ALTER COLUMN ` suggests columns from ` foo ` . @ koljonen can you review & merge ?,525.0
298,2016-06-04 14:25:13,2016-06-07 21:28:04,Add a pgspecial logging handler,"Since we split pgspecial off into a separate package , its logging statements were n't being written to the pgcli log file . @ j-bennet can you review and merge this ?",524.0
299,2016-06-02 22:33:15,2016-06-03 03:17:45,Add instructions for running pytests to DEVELOP.rts,,523.0
300,2016-06-02 19:41:43,2016-06-05 21:50:39,Make too many rows warning limit configurable,This should resolve https : //github.com/dbcli/pgcli/issues/519,521.0
301,2016-06-01 23:54:49,2016-06-02 21:31:36,Use pg_proc.proargmodes & c. instead of parsing arg_list,"@ darikg , please check that this makes sense . It 'd be great if we could get rid of all this rather complicated code ! * * Original commit message : * * Getting the parameters from proargnames , proallargtypes and proargmodes instead of from parsing the arg_list string simplifies FunctionMetadata quite a bit . I also made the ColumnMetadata for table/view columns use the same format for the type ( i.e . regtype instead of typname ) . This means we now get join-condition suggestions for joining tables/views to functions , which did n't work before .",517.0
302,2016-05-31 22:02:33,2016-06-01 20:30:07,Fix issue with 'SELECT Foo . * < cursor > FROM Foo ',"In the expansion , we got ' '' Foo '' . < col > ' when we should have gotten 'Foo. < col > ' .",516.0
303,2016-05-27 09:36:24,2016-05-29 21:29:30,Fix two casing issues with schemas,"1 . In 'SELECT \ * FROM Foo . ' , Foo was not recognized as foo . 2 . In 'SELECT \ * FROM `` Foo '' ' , objects in Foo were not suggested .",514.0
304,2016-05-26 10:25:46,2016-06-04 11:34:35,Order columns by in-table order when expanding *,"Simply store them in that order when getting them from the DB , instead of sorted by name .",513.0
305,2016-05-26 10:25:27,2016-06-06 21:21:32,Custom casing of table/column/function/view names,"This is for those of us need/want to use unescaped names in CamelCase or whatever . This means we can use pgcli to edit our functions without having to correct the casing all the time ! * * Original commit message : * * This adds support for defining the casing to be used in completions ( for unquoted names ) . The casing is determined by the casing file , which consists of a \n-separated list of names using the preferred casing . This file is initially populated based on usage in SQL and PLPGSQL database functions but can then be modified by the user .",512.0
306,2016-05-25 15:46:33,2016-05-25 23:11:07,Fix another problem where table names would not be recognized when nott in lower case,"My previous fix did n't cover the case 'INSERT INTO Foo ( < cursor > ) ' , which is now covered .",510.0
307,2016-05-19 22:08:54,2016-05-21 12:55:39,Fix problem where non-lower-case table names would not be recognized,"This fixes the issue where pgcli interprets * * SELECT \ * FROM Foo * * as referring to the table * * Foo * * , whereas it actually refers to table * * foo * * .",508.0
308,2016-05-19 13:01:57,2016-05-23 23:46:34,Add priority arguments to find_matches,"@ darikg suggested I make this a separate PR , so here it is . See # 496 for more background . * * Original commit message : * * type_priority is an int that says how to sort these matches compared matches of other types . type_collection is a an iterable that overrides the internal sorting of the matches . The use case that motivated this change was to be able to 1 ) sort join conditions ( `` t.someid = t2.someid '' ) before table aliases ( `` t '' ) 2 ) sort FK-based join conditions before name-based join conditions and integer name-based join conditions before other name-based join conditions .",507.0
309,2016-05-16 16:06:14,2016-05-17 23:40:43,Stop suggesting * as a column,"I do n't know about you guys , but I do n't think suggesting \ * is of use to anyone , and it 's in the way for anyone who just wants a column .",505.0
310,2016-05-16 05:29:46,2016-05-17 19:32:10,Support unicode strings in notices .,A simple use case is when someone uses unicode characters in a RAISE statement . Example : I 've added a test . Reviewer : @ stuartquin,504.0
311,2016-05-15 17:55:01,2016-05-16 22:44:26,Remove dead code and fix a broken test,I was playing around with [ https : //www.codacy.com/ ] ( Codacy ) and found some low-hanging fruit .,502.0
312,2016-05-14 17:18:35,2016-05-15 18:44:15,Fix bug where `` USING ( < cursor > '' was n't detected properly + add test case,"prev_tok is something like ' [ table name ] [ table alias ] USING ' where we expect it to be 'USING ' , so I just added a quick fix where we check the last word in prev_token instead of the whole string .",501.0
313,2016-05-13 15:30:32,2016-05-15 17:01:10,Improve filtering of functions for FROM clause,Change from filtering out all non-set-returning functions to only filteirng out windowing functions and aggregate functions . Non-set-returning functions are legal in the FROM clause and can be quite useful .,497.0
314,2016-05-13 15:20:46,2016-05-25 22:57:40,Support for join-condition suggestions after ON,"The user types 'SELECT \ * FROM parenttable p JOIN childtable c on ' . We then suggest [ ' c.parenttableid = p.parenttableid ' , ' c.createdby = p.createdby ' , ... ] as completions . The suggestions are FK matches first , then name matches for int columns , then name matches for other columns . Some things that have been changed in order to make this work : meta [ reltype ] ] [ relname ] goes from being a list of columns to being a list of ColumnMetadata namedtuples , which , apart from the column name , also contains its data type and a list of FKs from the column ( i.e . where the column is a child ) . This entails modification of a number of functions dealing with columns . get_matches can now be fed with priorities from outside , enabling more intelligent sorting . TableReference gets a property , ref , that returns COALESCE ( Alias , TableName ) . populate_scoped_cols now returns a dict { TableReference : { colname : ColumnMetadata } } instead of just a list [ colname ] .",496.0
315,2016-05-12 06:01:13,2016-06-29 02:59:12,Update changelog for release 1.0.0 .,@ dbcli/pgcli-core This is a big release . We 're going 1.0 . Please review the changelog and add/edit the entries . I 'd also like people to take the latest master for a spin and raise any issues you might see . I 'd like to keep this PR open for a few days before I get input from most of the core team before I do the release . Thank you !,494.0
316,2016-05-06 13:59:00,2016-05-16 22:36:47,Completion to column list when * is entered,,492.0
317,2016-05-05 18:11:18,2016-05-10 04:02:49,Upgrade to prompt-toolkit 1.0.0,"Changelog : https : //github.com/jonathanslenders/python-prompt-toolkit/blob/master/CHANGELOG The prompt-toolkit release has been well tested before the release , so I do n't expect any issues , but please let me know if this would break something .",490.0
318,2016-04-27 16:00:47,2016-05-15 11:35:16,Unquote URI parts prior to using in connection,"As you may know , [ RFC-3986 ] ( https : //tools.ietf.org/html/rfc3986 # section-2.1 ) allows passing `` disallowed '' characters as long as these are percent encoded . Since PGCLI deals with the url parsing , we should expect this to happen , and use the values after they have been decoded . ( includes a simple test for the parsing and decoding )",488.0
319,2016-04-24 23:06:29,2016-04-26 17:05:23,Add encoding to the output file .,Reviewer : @ j-bennet This PR changes adds the encoding to the file that is opened to write the output . This is a follow-up to the PR # 483,487.0
320,2016-04-05 15:06:57,2016-04-24 23:03:22,Add support for \o command to redirect query output to a file,,483.0
321,2016-03-25 02:51:11,2016-03-28 03:21:26,add feature connect dsn by config,,482.0
322,2016-03-24 05:31:46,2016-04-05 02:13:42,Add \i path completion,Initial prototype of # 467 @ amjith feel free to check it out . Looks like this for me : ! [ image ] ( https : //cloud.githubusercontent.com/assets/384556/14009181/9b289f46-f146-11e5-9365-ea4f835fa0ea.png ) If you select a directory it will start prompting autocomplete for the next characters you input or for everything if you just press tab . ! [ image ] ( https : //cloud.githubusercontent.com/assets/384556/14009202/dc0e3098-f146-11e5-8767-98dcf837e528.png ) Currently also handles ` .. ` and ` ~ ` . What do you think ?,480.0
323,2016-03-23 06:07:38,2016-03-24 03:42:34,Fix auto-completion breaking for table names with caps,Fix for # 478 ! [ image ] ( https : //cloud.githubusercontent.com/assets/384556/13977032/c444e57a-f082-11e5-80fa-432390563552.png ),479.0
324,2016-03-19 04:49:27,2016-03-23 05:37:13,Fix lexical order tiebreaking,"Fix for # 475 . The lexical priority was originally implemented as the ` -index ` of a match text within the lexically sorted collection in ` find_matches ` . The problem is when ` get_completions ` combines results from multiple ` find_matches ` calls . As the ` -index ` is the priority only within the scope of a single ` find_matches ` call , we end up with jumbling ( especially in the case ` SELECT * FROM ` ) because ` get_completions ` has only the lexical priority to do tie breaking , so it orders the completions as the first elem from all the get_X_matches , second elem from all get_X_matches , etc . The new lexical_priority is properly comparable when we 're combining multiple ` find_matches ` calls . I 've also added a test for making sure the ` SELECT * FROM ` results are ordered . It looks like this for me : ! [ image ] ( https : //cloud.githubusercontent.com/assets/384556/13896691/eaa6af1a-ed52-11e5-9012-b2ea57f19945.png )",477.0
325,2016-03-14 20:42:01,2016-03-18 18:37:12,Upgrade to prompt_toolkit 0.60 .,"Changes ( see 0.58 .. 0.60 . ) : https : //github.com/jonathanslenders/python-prompt-toolkit/blob/master/CHANGELOG I also added a simple example of the continuation prompt . This shows dots in front of every next line , when the input is multiline . Feel free to change this .",476.0
326,2016-02-26 15:22:33,2016-02-29 05:53:06,Issue # 448 . Add timestamptz to DATE custom extension,Adds timestamptz to DATE custom extension,470.0
327,2016-02-15 04:51:25,2016-02-15 15:53:30,Use lexical order to break ties when fuzzy matching,"Suppose we have a bunch of tables start with the name ` user ` , e.g . ` user ` , ` user_group ` , ` user_action ` , ` user_address ` , etc . When searching for the text ` user ` , where the match group length and position are identical for all of these items , the current master of pgcli produces completion results in arbitrary order : ! [ pgcli arbitrary order ] ( https : //cloud.githubusercontent.com/assets/1424858/13040041/fd36c3e2-d374-11e5-80d3-97317206df27.png ) This PR adds a new priority fallback ‚Äî after the fuzzy match group length , position , and history priority ‚Äî such that , if the existing ranking fails to produce a total ordering , lexical order is used to break the ties . Here is the previous example with this change in place : ! [ pgcli lexical order ] ( https : //cloud.githubusercontent.com/assets/1424858/13040087/9b2e6050-d375-11e5-9930-c1bc6addfbd8.png )",461.0
328,2016-02-03 20:58:56,2016-02-04 03:21:29,ensure target dir exists when copying config,,458.0
329,2016-02-03 10:54:34,2016-02-04 03:23:22,Issue # 448 extension for BC dates,Addresses BC date issue by typecasting all ` DATE ` and ` TIMESTAMP ` results to string .,457.0
330,2016-02-02 18:59:20,2016-02-03 02:55:16,test for recent patch for execute_from_file,to prevent obvious regressions at least,456.0
331,2016-02-02 05:26:48,2016-02-03 14:07:50,Handle a corner case for execute_from_file .,"Since we added two more parameters to the result tuple , we need to update the error case for execute_from_file ( ) special functions . Reviewer : @ darikg",453.0
332,2016-02-02 04:21:35,2016-02-03 06:47:35,Load default pager and its options on load from config file instead of manipulate environment variable,I purpose to set the defaut pager `` less -SRXF '' in pgclirc config file in order to allow users have more flexibility in pager configuration . In my case I want to have different pager configuration for pgcli/psql than for the rest of the system or use a pager filtered to colorize some expressions : ` pager= grcat ~/.grc/conf.psql | less -iMSx4FXRe `,452.0
333,2016-02-02 02:25:29,2016-02-08 12:46:56,Add fallback queries so that redshift auto-complete indexing does n't exception out,I have added fallback queries that allow the auto-completion indexing to not exception out with the current version of Amazon Redshift . Only tested to a `` works for me '' state .,451.0
334,2016-01-25 19:10:42,2016-02-02 05:23:58,fix execute_from_file after # 395,fixes # 443,449.0
335,2016-01-25 15:16:34,2016-02-29 13:37:54,year is out of range,"I did it by mistake , but it turns out that some old dates ca n't be read through pgcli . ie . ` 0001-01-01 00:00:00+00:09:21 BC ` now I have to update my field from psql to get pgcli working again : grin :",448.0
336,2016-01-16 20:58:37,2016-01-18 15:22:05,Upgrade to prompt-toolkit-0.57,A new pull request with the minimal set of changes required to run on the latest prompt_toolkit . This does n't enable new features yet ( like mouse support . ) ( Not tested on Windows . ),442.0
337,2016-01-12 12:56:23,2016-01-13 18:12:44,Add a test case for enum unicode case .,@ j-bennet Can you review and merge ?,441.0
338,2016-01-06 08:41:16,2016-01-12 12:49:53,convert enum type to unicode in tabulate . # 437,I try to encode string before it is passed to tabulate . It works for my issue .,438.0
339,2016-01-06 08:29:02,2016-01-26 08:19:46,enum type unicode error in py2,"Hi , I have some enum type in Chinese . When I query enum value or tables using these enums , unicode encoding error raises . I think this might be similar with # 426 . In Python2 , psycopg2 returns enum type as string object . So tabulate fails encoding enum type value .",437.0
340,2016-01-06 01:22:24,2016-01-06 22:38:44,Add missing keywords .,Reviewer : @ j-bennet,436.0
341,2016-01-05 16:33:25,2016-01-06 00:46:57,do n't error when completing parameter-less functions,,435.0
342,2015-12-06 10:10:31,2015-12-06 16:11:30,Concat and return all available notices,"A quick one , addresses # 424",429.0
343,2015-11-26 19:22:32,2015-11-29 01:20:58,Really sort keywords after everything else,As @ amjith pointed out in # 379 keywords do n't sort properly after starting to type an identifier,425.0
344,2015-11-25 21:26:54,2015-11-26 03:03:50,Fix suggestions in multi-way joins,` extract_tables ` was stopping as soon as it hit the ` ON ` keyword in the first join clause Thanks to @ jamiely for reporting this issue,423.0
345,2015-11-24 20:58:27,2015-11-29 01:16:10,Added humanized time display . Connect # 396 .,This is a small change to add humanized time display in parentheses . Examples :,422.0
346,2015-11-22 21:29:59,2015-11-24 19:17:31,Handle manually entered double-quote gracefully,"Surprisingly , manually entering a double quote , as in ` SELECT * FROM `` ` breaks suggestions . This just allows the suggestion system to ignore it .",421.0
347,2015-11-22 13:47:24,2015-11-23 06:13:13,Fix the bug in auto-expand mode when there are no rows to display .,Reviewer : @ j-bennet This is a fix for # 417 . I 've also added some tests to prevent future failure .,419.0
348,2015-11-16 12:49:28,2015-11-18 05:36:32,Use only immutable datatypes for suggestions,"The main goal here is to make it easier to write regression tests using set-based logic . Before , suggest_type returned lists of dictionaries , whose values were lists . Because mutable data structures are n't hashable , it was n't possible to create sets of suggestions , and mandated the ugly ` sorted_dicts ` kludge . Here , I 've reworked everything to return tuples instead of lists , and namedtuples instead of dicts . For the most part , I think this leads to more readable code , although admittedly one-element tuples are a bit of an eyesore .",413.0
349,2015-11-13 00:00:47,2015-11-13 02:51:55,Aded sdist upload to release script .,,411.0
350,2015-11-07 19:24:35,2015-11-07 21:39:42,Preparing release 0.20.1 with Windows log fix .,,408.0
351,2015-11-05 02:23:18,2015-11-06 11:37:12,Switch the location of log/history file based on OS .,"@ j-bennet @ darikg I made a reference implementation of what I had in mind . You 're welcome to test this and merge or write your own implementation if you 're not satisfied . I have n't tested this yet , sorry .",407.0
352,2015-10-31 13:51:52,2015-11-01 04:33:59,Amjith/release 0.20.0,We 're getting ready to release pgcli 0.20.0 . I 've updated the changelog and AUTHORS file . This is a pretty big release . So a thumbs up from @ dbcli/pgcli-core would be much appreciated . Please let me know if I 've missed something .,405.0
353,2015-10-26 22:19:40,2015-10-27 10:50:01,Setproctitle should be optional in tests .,Right now our tests fail in tox because of setproctitle .,400.0
354,2015-10-24 16:12:06,2015-10-26 02:57:35,Fix indentation problems with `` explain '' . Seems to solve # 313 .,"It 's possible I broke something , I do n't know the codebase .",398.0
355,2015-10-23 09:50:56,2015-10-23 12:55:37,Make setproctitle optional in Windows,@ darikg Can you please check this PR on Windows and merge ?,397.0
356,2015-10-22 23:05:35,2016-06-19 21:37:29,Humanize time display ?,Here 's what I just noticed : Making it ` humanize.time.naturaldelta ( t ) + ( miliseconds ) + `` miliseconds '' ` would be much more readable . What do you think about it ?,396.0
357,2015-10-22 18:02:49,2015-10-28 19:42:52,Tweak on error options,"As discussed in # 382 . Split the RESUME , STOP , RAISE on_error enum into two separate input arguments : ` exception_formatter ` , a callable that accepts an Exception and returns a ( title , rows , headers , status ) tuple as if it were a valid query result , and ` on_error_resume ` , a boolean . If you want ` pgexecute.run ` to always raise an exception , simply do n't supply an ` exception_formatter ` . It occurs to me now that the input arguments ` on_error_resume ` and ` exception_formatter ` could be moved to instance variables of ` pgexecute ` instead being being function arguments but that seems like mostly a matter of taste so I 'll leave it open for discussion first .",395.0
358,2015-10-19 13:20:04,2015-10-19 17:45:43,Check for headers in \x auto mode .,Reviewer : @ stuartquin Related to # 369 . Check for the headers before using expanded mode when ` \x auto ` is enabled .,391.0
359,2015-10-19 02:50:51,2015-10-20 16:15:37,Reset completions when database is changed .,"Reviewer : @ j-bennet This is a corner case scenario in the background completion refresh . When a user changes to a new database using ` \c ` and the completion is happening in the background , we still retain the tables and views from the old database and the completion suggestions show old database entries . This PR will address this by resetting the completion data-structure before triggering the completion refresh .",388.0
360,2015-10-18 20:58:46,2015-10-19 18:54:46,Issue # 355 Use setproctitle to hide command line passwords,"Hi Guys First draft at solving https : //github.com/dbcli/pgcli/issues/355 Would be good to get some feedback on the approach , particularly the regex's One thing this does n't cover is entries in shell history file , will do some research on this .",387.0
361,2015-10-11 16:58:29,2015-10-12 03:40:36,Fix PyPI badge,,383.0
362,2015-10-10 21:38:29,2015-10-14 11:30:43,Improve error handling in pgexecute,"I do n't like how errors are handled in pgexecute.run : 1 . The default behavior with multiple statements , with errors in intermediate statements , is to continue executing the remaining statements . I 'd like to be able to override that behavior to stop immediately on errors . 2 . Handling all exceptions makes it more difficult to reuse pgexecute outside of pgcli -- consumers may want to catch their own exceptions 3 . \special commands are run outside the try clause . Because named queries can include arbitrary sql , they should be run like any other query 4 . The ` except ` clause is too narrow . Currently , it catches ` psycopg2.ProgrammingError ` , which includes syntax errors , but not , for example , division by zero errors . See [ here ] ( http : //initd.org/psycopg/docs/module.html # exceptions ) for the psycopg2 exception hierarchy . I think ideally we 'd widen all the way to catching ` psycopg2.DatabaseError ` , but ` pgcli.main ` relies on catching ` psycopg2.OperationalError ` in order to detect connection failures This PR is one attempt at addressing these issues . It gives ` pgexecute.run ` and extra argument to specify how you want exceptions handled -- continue , stop , or reraise . I have n't done anything about point 4 though . Does catching ` psycopg2.DatabaseError ` , and always reraising ` psycopg2.OperationalError ` regardless of the ` on_error ` mode make sense ?",382.0
363,2015-10-10 04:02:38,2015-10-10 13:31:03,Makes `` enter '' key function as the `` tab '' key only when the completion menu is displayed,"New users get frustrated when they select a SQL command , press ` Enter ` and the command gets executed . So this PR makes the enter key work like the tab , but only when the completion menu is visible .",381.0
364,2015-10-09 04:48:49,2015-10-09 18:08:41,Consolidate the timing information .,Fixes # 378 . Reviewer : @ stuartquin,380.0
365,2015-10-07 22:27:25,2015-11-10 03:55:31,[ experimental ] learn keyword preferences,"Spinning this off from discussion in # 377 since they 're ( mostly ) orthogonal . I was originally a little skeptical of using any learning algorithm because 1 . It might be annoying to have different suggestions on different installations 2 . It might preclude improving the base suggestion engine . Right now sqlcomplete suggests only the very vague ` keyword ` category when it could take greater advantage of syntactical restrictions . Given ` SELECT * F ` , ` FREEZE ` is a pretty silly suggestion because it 's just not valid sql . On the other hand , basing suggestions on syntax requires syntactically valid input , and a simple learning algorithm could be much more reliable in the middle of editing temporarily invalid queries . In the long run , the learning approach could move to estimating second- or third-order keyword transitions and be pretty powerful . So this PR offers a basic experiment of the learning approach . Measure zeroth-order keyword probabilities , and rank keywords thereby . Open questions : 1 . How should learning be shared between concurrent pgcli sessions ? One global state or one state per pgcli instance ? 2 . Should we ( and if so , how do ) we save keyword preferences between sessions ?",379.0
366,2015-10-06 07:34:02,2015-10-06 07:39:03,Update AUTHORS to add Stuart to core team .,@ stuartquin Can you review and merge ? : ),376.0
367,2015-10-05 21:23:03,2015-10-05 22:10:20,Fix tests breaking with pexpect 4.0,This PR : - Uses a different method of exiting the cli with pexpect ( ` .terminate ( ) ` ) - Updates a regexp to filter out ANSI escape sequences . - Pins pexpect to 3.3 . - Adds pgspecial to tox . Connected to # 374 .,375.0
368,2015-10-04 13:37:30,2015-10-06 05:03:02,Move literal definitions to standalone files,,374.0
369,2015-10-03 18:43:42,2015-10-03 21:48:16,Fix need_completion_refresh,Was only actually checking the first command in multiple commands,373.0
370,2015-10-03 18:04:42,2015-10-03 21:45:23,Fix suggestions in compound join clauses,"Previously , this worked correctly , suggesting columns etc . from ` a ` ` SELECT * FROM abc a JOIN def d ON a. ` But this suggested only keywords : ` SELECT * FROM abc a JOIN def d ON a.id = d.id AND a. `",371.0
371,2015-09-29 13:19:17,2015-10-04 13:31:11,Suggest columns from functions,This is a follow-up to # 361 . See also discussion in # 189 . Here 's the upshot : ! [ temp ] ( https : //cloud.githubusercontent.com/assets/6875882/10165045/12a7127e-668b-11e5-98ec-b490c56db747.png ),368.0
372,2015-09-28 20:52:42,2015-09-29 05:07:11,Removed files left over from separating pgspecial .,,367.0
373,2015-09-25 17:13:35,2015-09-26 03:35:13,Updated release script with a -- dry-run and -- confirm-steps option .,,364.0
374,2015-09-24 20:51:03,2015-09-28 05:38:51,Using pgspecial as a separate module .,"This branch of pgcli uses pgspecial as an independent module . It adds the dependency in setup.py . All of the code , including tests , is now here : https : //github.com/dbcli/pgspecial",363.0
375,2015-09-23 19:25:48,2015-09-25 05:35:40,Suggest functions as tables,"Fixes # 189 . Suggest set-returning functions in the appropriate places . This enhances the amount of function meta-data stored : the function argument list , the function return type , and boolean flags ` is_aggregate ` , ` is_window ` , and ` is_set_returning ` . This is a little bit overkill , in that all we need for this PR is ` is_set_returning ` , but I plan on using most of this in the future . In particular , after ( if ) this PR is accepted , I 'll have follow up that suggests column names from set-returning functions used as tables . Ultimately after that I 'd like to implement function tooltips/hints .",361.0
376,2015-09-23 00:35:17,2015-09-23 04:22:28,Add CONCURRENTLY to keyword completion,See e.g . http : //www.postgresql.org/docs/9.4/static/sql-createindex.html Fixes # 358,360.0
377,2015-09-22 21:25:58,2015-09-23 16:21:16,Issue # 315 Add support for \x auto,Adds support for ` \x auto ` option . - I 'm not totally sure about returning ` rows ` from ` tabulate ` but it was the most straightforward way I could think of to reuse the data from ` cur ` - The ` get_terminal_width ` function has been borrowed from Stack Overflow and is not extensively tested ( works well on GNOME Terminal 3.6.2 ),359.0
378,2015-09-22 17:05:19,2015-09-23 04:29:14,Do n't hide functions from pg_catalog,Fixes # 353,357.0
379,2015-09-20 22:06:25,2015-09-24 02:51:56,Move config file to ~/.config/pgcli,"This is PR # 349 by @ inkn to move the config file from ~/.pgclirc to ~/.config/pgcli/config . I 've added one more commit to this PR which will auto-migrate the config file at launch time and print a message at the top . If there is already a config file under ~/.config/pgcli/config then we wo n't overwrite it . Pgcli will simply print a message saying the user has to merge their ~/.pgclirc to ~/.config/pgcli/config file . I 've also added default paths that are compatible with Windows . @ dbcli/pgcli-core Can you please review this ? @ darikg I 'm interested to know if this works as expected in Windows . My Windows VMs have expired , so I 'm still downloading a new Windows VM to test this out . /cc @ inkn I 'm going to close # 349 since this PR has all of your original commits .",356.0
380,2015-09-17 18:00:03,2015-11-01 09:08:44,Hide command line passwords from ps,"It 's super convenient to be able to run pgcli like this : However , it enables other users on the same system to see the password by running ` ps ` , ` top ` , etc . Some other clients ( like the regular ` mysql ` client ) have a cunning way to hide this : http : //unix.stackexchange.com/questions/88665/how-does-ps-know-to-hide-passwords And there 's a Python package that wraps this up to make it easy : https : //github.com/dvarrazzo/py-setproctitle Although neither of these are foolproof ( there 's a timing attack due to a small window of opportunity between the process being started and the args being modified ) , it can help reduce the attack vector .",355.0
381,2015-09-13 17:46:52,2015-09-14 06:34:26,"When behave fails , it prints out expected and actual output .",,350.0
382,2015-08-28 06:14:40,2015-09-12 22:02:16,Perform auto-completion refresh in background .,"@ dbcli/vcli-core @ dbcli/pgcli-core This is my first attempt at making the auto-completion refresh in a background thread . I tried it on a database with 40,000 tables in them and I can see a noticeable different in the startup time . I could get more granular by spawning a thread for each type of completion ( eg : tables , views , columns etc ) , but that 'll require some granular locking on data-structures . Since we get a tremendous speed boost with just one thread , I 'm not motivated to do multiple threads . Please pitch in and let me know if there are better ways of doing this .",345.0
383,2015-08-25 05:31:56,2015-08-26 02:26:16,Added read_from_file back into iospecial .,"The 'read_from_file ' method was removed but is still being called in external editor command . This adds it back , plus an integration test to make sure the call to external editor works .",344.0
384,2015-08-25 02:32:42,2015-08-25 13:10:51,Add tests for where clause with keywords .,@ darikg These are the regression tests for the WHERE clause completion from PR # 341 . You 're right I should have added the tests with the PR . My bad .,343.0
385,2015-08-24 20:36:31,2015-08-26 04:45:53,Autocompletion in named queries .,This fixes # 270 .,342.0
386,2015-08-23 08:45:39,2015-08-24 21:00:57,Amjith/where clause completion,"@ darikg Can you review the PR ? This is to replace # 340 . I 've made the WHERE clause to always return columns , functions and keywords . Since keywords is listed at the bottom of the list , we wo n't seen them most of the time in the menu unless the user is going for a keyword specifically .",341.0
387,2015-08-18 10:20:48,2015-08-20 04:54:11,Do n't end multi-line query within a quote,Fixes # 236,337.0
388,2015-08-18 07:39:36,2015-08-19 15:00:25,Multiple queries with syntax errors,This fixes # 335 . @ darikg Can you review ?,336.0
389,2015-08-17 04:52:28,2015-08-17 15:22:29,Make \i to run multiple commands and show results .,@ darikg Can you review ? This PR enables ` \i ` to run a file with multiple queries ( semi-colon separated ) and display the results for each of them . Previously only the results from the last query was displayed .,334.0
390,2015-08-14 16:28:43,2015-08-16 17:34:51,Added `` service '' option .,Using dsn-based approach ( no config parsing required ) . Connect # 289 .,333.0
391,2015-08-12 03:57:53,2015-08-12 05:55:06,Add a \pager special command .,@ j-bennet Can you review this PR ? It adds a ` \pager ` command to special commands . This will address # 286 .,332.0
392,2015-08-08 12:16:02,2015-08-11 20:08:49,Upgrade to prompt_toolkit 0.46,,328.0
393,2015-08-07 04:20:22,2015-08-07 13:43:44,"Add custom styles for menus , toolbars etc .",@ darikg Can you please review ? This is an attempt at addressing # 310 . It uses ` eval ( ) ` which is generally frowned upon . But I ca n't think of a better way to do this . Thoughts ?,326.0
394,2015-08-06 05:38:27,2015-08-07 13:31:57,Pgclirc file location is being read from command line or env .,This is to address # 302 . Adds pgclirc location as command line argument or environment variable .,325.0
395,2015-08-05 21:22:35,2015-08-05 22:04:33,Fix # 322,,324.0
396,2015-08-05 21:22:07,2015-08-05 22:43:05,Fix # 283,"Pretty easy -- just bump sqlparse from 0.1.14 to 0.1.16 , which includes some improvements in alias extraction .",323.0
397,2015-08-05 15:53:47,2015-08-05 21:55:51,Fixes for test database being in use problem .,,321.0
398,2015-08-05 13:41:53,2015-08-05 22:01:15,Add regression test for # 317,,320.0
399,2015-08-04 14:11:50,2015-08-04 16:54:26,Update changelog for 0.19.1 release .,@ darikg Can you take a quick look at the change log ? I 'm going to release this bug fix right away .,319.0
400,2015-08-04 12:27:58,2015-08-05 05:31:15,traceback in completion on `` selt * '',Just entering ` selt * ` leads to the following traceback in 0.19 :,317.0
401,2015-08-03 15:32:07,2015-09-24 16:05:12,Does not respect \x auto,Is there a way to get the ` psql ` behavior with ` \x auto ` ?,315.0
402,2015-08-03 04:16:50,2015-08-03 15:49:53,Amjith/changelog 0.19.0,We 're getting ready to do another release . @ dbcli/pgcli-core Can you please check the changelog to see if I 've missed anything ? Give it a thumbs up if you 're satisfied . I 'll merge it in once I get a quorum .,314.0
403,2015-08-02 23:22:15,2015-08-03 03:56:11,Add a comment about the keybindings in pgclirc .,@ j-bennet Can you take a look ? This is just adding a comment in the config file . But this seems to trip up people all the time .,313.0
404,2015-08-01 15:32:02,2015-08-02 14:34:50,Fix the crashing autocompletion on joins .,"@ darikg Can you review ? Bug : Entering ` select * from foo f left join bar b , ` will crash pgcli . Notice the trailing comma at the end . After the merge that should be handled correctly .",311.0
405,2015-07-30 20:18:34,2015-08-02 21:42:05,Integration with prompt_toolkit==0.44,"- Re-enable the open-in-editor functionality . Pressing ' v ' in Vi mode or Control-X Control-E in emacs mode should open the EDITOR when the input can be edited . - Visualization of completions in multiple columns . ( This is off by default , but can be configured . ) edit : as always , test before merging ; )",308.0
406,2015-07-30 00:01:27,2015-07-30 17:20:00,Add includes '\i ' functionality,"I 'm sort of new to Python so sorry if this is n't great . It appears to work , but I was n't sure how to get the test db set up so I did n't ... run any . Also I sort of hacked the use of the @ special_command decorator , but since it seems to work as I expected it , I left it . I 'm new to open source stuff , so I 'd be happy to rework and resubmit if you give me any feedback .",306.0
407,2015-07-29 16:00:00,2015-07-29 18:00:08,"Provide customizable history file location , Fixes # 304",,305.0
408,2015-07-29 15:11:16,2015-07-29 18:00:09,Provide customizable history file location,"Copied from email . > when i launch pgcli with sudo -u postgres pgcli , like I do with psql , I get the following error : > IOError : [ Errno 13 ] Permission denied : '/home/vagrant/.pgcli.log ‚Äò ( vagrant is the user i ‚Äô m running sudo with ) . > > I can workaround this by setting log_file = /tmp/pgcli.log in ~/.pgclirc but then a similar error occurs when writing ~/.pgcli-history file of which location is hardcoded .",304.0
409,2015-07-29 04:02:09,2015-08-07 22:18:06,Add the ability to start pgcli providing path to config file on command line,Something like this :,302.0
410,2015-07-28 17:24:15,2015-08-01 14:45:22,More integration tests,"Create and drop database . Connect and disconnect from database . Create and drop table . Insert , update , select from table .",300.0
411,2015-07-27 16:54:13,2015-07-27 22:12:33,Added test coverage with codecov.io,Link to review coverage : https : //codecov.io/github/dbcli ( login with github ) .,299.0
412,2015-07-26 16:09:24,2017-03-07 01:44:53,Make Exanded output a config option,Provide a config option to always enable expanded output .,298.0
413,2015-07-24 14:16:32,2015-08-02 14:29:43,Bump up click version to address # 288,Reviewer : @ macobo Upgrading the minimum required version of click to 4.1 . We use the output_via_pager ( ) function in pgcli . When the pager is active ( if the output is longer than the screen ) if a user presses Ctrl-C it will abort pgcli and cause the terminal to go weird . This latest version fixes the issue . Relevant PR : https : //github.com/mitsuhiko/click/pull/351,290.0
414,2015-07-24 14:13:45,2015-08-22 16:36:40,support `` service= '',"With psql , one can create a .pg_service.conf file with the following format : and then run ` psql service=someservice ` . Support for this feature would be nice .",289.0
415,2015-07-12 21:43:40,2015-07-15 06:16:52,"Moved integration tests into `` tests '' , plus some fixes .",- Moved behavioral tests into tests . - Updated expected help output . - Drop test db if exists .,279.0
416,2015-07-06 11:34:04,2015-07-28 20:19:52,[ wip/rfc ] Put meta info in the completions menu,"See # 200 . Looks like this : ! [ 1 ] ( https : //cloud.githubusercontent.com/assets/6875882/8521328/a38064c6-23b0-11e5-9322-e313b8609028.png ) It turns out this is almost trivially easy to do . However , it breaks all of our completions tests . So I before I go ahead and update all the tests , I wanted everyone to get a chance to suggest what should or should not go in the metadata . I think a simple category label is almost a waste . As an experiment , I shuffled some code around so I could put special command help text directly in the completions menu : ! [ 2 ] ( https : //cloud.githubusercontent.com/assets/6875882/8521381/0ccbe068-23b1-11e5-8447-60ed0839cf01.png ) Let me know what you think ! This branch works fine , despite the failing tests , if you want to try it out .",277.0
417,2015-07-05 06:14:25,2015-07-05 23:02:29,Update Changelog for version 0.18.0 .,The time has come for the next release . Can the @ dbcli/pgcli-core team please review the changelog and leave a : +1 : ? I 'll merge it in once I get a quorum .,276.0
418,2015-06-30 16:56:17,2015-07-02 00:14:09,More specials refactoring,"Building on @ amjith 's last specials refactor , this wraps up a lot of the specials.main file into a PGSpecial class , which makes it possible for multiple PGCli instances to coexist in the same python interpreter without interfering with each other through module level globals in pgspecial . While doing this I was also able to weaken some of the coupling between pgspecial , pgexecute , and pgcli . As before , special commands that do not manipulate state are defined by the ` @ special_command ` decorator , which stores metadata in the ` COMMANDS ` variable . During initialization of a new PGSpecial object , a _copy_ of ` COMMANDS ` is stored in the member variable ` commands ` . Further special method registration is done through the method PGSpecial.register , which of course modifies only the member variable , not the module one . One hesitation I had was where the code for ` \x ` and ` \timing ` belonged . Because they 're ultimately responsible for mutating the state of the cli application I moved them out of the specials package and into PGCli , in parallel to ` \c ` and ` \ # ` .",273.0
419,2015-06-23 02:24:51,2015-06-23 03:48:02,Added support for PGPASSWORD environment variable . Connect # 220 .,Addresses issue # 220 .,271.0
420,2015-06-22 22:42:05,2015-08-26 04:45:53,There is no autocompletion inside a named query .,"When inside the named query , suggestions do n't show up . ! [ named-query-no-autocomplete ] ( https : //cloud.githubusercontent.com/assets/637013/8294961/1df337e0-18f5-11e5-860e-5b47ae95dbe1.png ) Boo .",270.0
421,2015-06-22 16:25:35,2015-07-04 17:23:29,Started working on integration tests .,Copy of PR # 266 .,269.0
422,2015-06-22 03:54:08,2015-06-22 22:39:09,Amjith/named query docs,"Reviewer : @ j-bennet Closes # 264 # 265 When a user invokes ` \n ` and there are no saved queries , the documentation for that command will be printed . When a user makes a mistake like invoking ` \ns ` or ` \nd ` without giving it an argument , it will print the usage . This should help educate users about this awesome feature . : ) /cc @ brettatoms",268.0
423,2015-06-22 03:51:29,2015-06-22 21:26:45,Create a new error type for special command not found .,"Reviewer : @ darikg Simple change to raise a custom exception type when a special command is not found . Previously it used to raise KeyError , but this is not as explicit as I 'd like it to be .",267.0
424,2015-06-21 07:02:30,2015-07-02 04:52:04,Make the horizontal separator in expanded mode a constant length .,In expanded mode the record separator looks like this ` - [ RECORD 26 ] -- -- -- -- -- -- -- -- -- -- -- -- - ` . The number of dashes used to be calculated based on the longest value of a column . Now this is made a constant for two reasons . 1 . If a column has a really long value ( say a multi-line paragraph ) . The separator will look ridiculous which would make the expanded output useless . 2 . It is more performant to use a constant value instead of trying to iterate over the whole set of values just to determine the max length to use . Reviewer : @ macobo,262.0
425,2015-06-20 11:46:51,2015-06-21 06:41:55,add autocompletion for named queries,,260.0
426,2015-06-17 05:27:33,2015-06-18 05:18:38,Add \ # to manually refresh the completions .,Closes # 225 . This adds a new special command called ` \ # ` to refresh completions . Reviewer : @ j-bennet /cc @ darikg This is a testament to the idea of having register hooks for special commands . It was ridiculously easy to add this new command . Thank you for the idea . : ),259.0
427,2015-06-17 04:09:34,2015-06-22 18:55:53,"Do not escape the database names , since they clash with \c commands .","Database names should not be quoted even if they are keywords or have non-alphabets . Before this change database names with unicode characters were quoted . So when you try to change db , it will suggest ! [ 1__2_0_python_-__pgcli___users_amjith_dropbox_code_python_pgcli___tmux_ ] ( https : //cloud.githubusercontent.com/assets/49260/8199514/adf4db2a-146b-11e5-81d3-441e47f571f1.png ) But choosing the database name with the quotes will result in error . ! [ 1__2_0_python_-__pgcli___users_amjith_dropbox_code_python_pgcli___tmux__and_comparing_master___amjith_no-escape-db-names_ _dbcli_pgcli ] ( https : //cloud.githubusercontent.com/assets/49260/8199521/ce3cfaf2-146b-11e5-9d88-e4e04724950a.png ) So quoting database names is not a desired behavior . /cc @ darikg Can you review and merge ?",258.0
428,2015-06-14 16:39:32,2015-06-16 23:40:57,Amjith/specials decorator,"Created a new PR from the decorators branch . # # Description : This implements a new way of defining special commands using decorators as well as register_special_command ( ) hook . No more listing of all special commands in a dictionary . Instead functions that are decorated using a ` @ special_command ` is added to the commands dict automatically . Kinda like Flask , where you define the routes of your webapp using decorators . Also , no more separate ` COMMANDS ` and ` HIDDEN_COMMANDS ` , instead the values in the dictionary are a namedtuple called ` SpecialCommand ( ) ` which defines everything you need to know about a command . I think this is a much better approach . But I 'd love to hear your thoughts . If you 're satisfied with that approach , I 'll close this PR and open a new PR from that branch . /cc @ j-bennet & @ darikg",255.0
429,2015-06-05 06:28:04,2015-06-18 01:45:37,Implement fuzzy completion using regex .,"Reviewer : @ drocco007 This is an implementation of fuzzy completion ( or true subsequence matching ) for schemas/tables/columns/views . This is not enabled for keywords . Typing ` djms ` will match ` django_migrations ` . It is implemented as follows : When user types ` djms ` we create a regex pattern that looks like this ` ( d. * j. * m . * s ) ` and try to match against the collection . So ` django_migrations ` will be a positive match . In order to produce the relevant ordering in the suggestion menu , there are two ranking values used . 1 . Length of a matching group . 2 . Position of the first matching character . Here 's how it is used : Let 's say there are two tables ` django_migrations ` and ` misago_threads_post_mentions ` . Case 1 : If a user starts to type ` djm ` it will be converted to ` ( d. * j . * m ) ` , which will match ` django_migrations ` which is what we want . Case 2 : If a user types ` migr ` it will be ` ( m. * i. * g. * r . * ) ` which will match both tables and depending on the location of the table in the list it is possibel that ` misago_threads_post_mentions ` will be listed first , but the user clearly intended to match ` django_migrations ` since they typed ` migr ` . The ranking algo will first check the length of the matching group in this case for ` misago_threads_post_mentions ` the matching group will be ` misago_thr ` . For ` django_migrations ` the matching group will be ` migr ` . The rank is assigned by the length of the matching group . So ` django_migration ` wins . Another scenario : Let 's take two table ` django_migrations ` and ` migrations ` . If the user types ` migr ` , the matching group will be the same for both strings , so the tie breaker is the appearance of the first matching character . In this case ` migrations ` table will win and it will be suggested first . This was a fun feature to implement . : ) Looking forward to your feedback . ps : Thanks @ zoltu .",254.0
430,2015-05-31 14:01:06,2015-06-04 15:23:37,Upgrade to prompt_toolkit==0.38,"Upgrade to the newest version of prompt_toolkit . This should also fix the issue with slow pasting . Feel free to make changes to the pull request before merging . I 'm not sure how you are feeling about the circular reference between pgcli_bindings and the main class . It can be a weakref , but it does n't have to .",252.0
431,2015-05-31 07:12:13,2015-06-05 18:30:36,Make timing info human friendly .,A simple change to make the timing output more human friendly . Before : Reviewer : @ darikg,250.0
432,2015-05-30 19:55:48,2015-05-30 22:21:33,Simplify config file handling .,Reduce the complexity of config files . Reviewer : @ j-bennet,248.0
433,2015-05-28 14:35:08,2015-05-28 15:59:56,Fix error for ( \d < table_name > command ) if table has rules,"error like `` coercing to Unicode : need string or buffer , int found ''",246.0
434,2015-05-28 11:41:08,2015-05-29 13:51:36,replace configparser with configobj,,245.0
435,2015-05-27 16:05:40,2015-05-30 19:02:23,Saving named queries,This is the beginning of a patch for saving named queries in pgcli . Named queries allow you to save and re-execute a query with a short name . E.g . There 's a couple shortcoming that should probably be addressed before merging this PR : 1 . Queries are saved in ` ~/.pgcli ` . This destroys any formatting and comments in the config file . It could be fixed by either saving the queries in a separate file or replacing ` ConfigParser ` with ` ConfigObj ` which should preserve the formatting and comments . 2 . Autocomplete saved queries after entering ` \n ` and as you type . 3 . Tests,244.0
436,2015-05-25 06:42:41,2015-05-26 13:54:30,Update changelog for 0.17.0 release .,"I 'm prepping for a new release of pgcli . I 've updated the changelog . Can the @ dbcli/pgcli-core team please review the changes ? Leave a : +1 : if you 're satisfied . Ideally I 'd like to do the release by end of tomorrow . But I can also wait longer if you 'd like more time . Just let me know . BTW , we just merged the 100th PR to pgcli . Kudos to everyone who helped us make this project a success . : tada : : balloon :",242.0
437,2015-05-24 18:59:25,2015-05-25 00:00:43,Fix editor mode,It seems there was a leftover from prompt-toolkit migration .,241.0
438,2015-05-23 12:44:12,2015-05-24 08:45:20,Suggest datatypes,"1 . The following contexts now suggest datatypes : - ` SELECT foo : : < TAB > ` - ` CREATE TABLE foo ( bar < TAB > ` - ` CREATE FUNCTION foo ( bar < TAB > ` - ` ALTER TABLE foo ALTER COLUMN bar TYPE < TAB > ` 2 . The special command ` \dT ` is now supported , and suggests types ( but not tables ) Datatypes are suggested both from a hardcoded whitelist of builtin postgresql types , as well as user-defined custom types . Furthermore , since postgresql treats a table row as a form of composite type , table names are suggested in addition to data types . The whitelist I just typed from memory of datatypes I use frequently , and would appreciate feedback on what belongs there . ( Or we can just use all of them . ) You should be able to use ` \dT pg_catalog . * ` to list all of the built-in types .",240.0
439,2015-05-22 21:55:29,2015-05-22 22:36:09,` drop schema ` and ` create schema ` should suggest schemas,,239.0
440,2015-05-15 05:12:17,2015-05-16 03:21:33,Remove unnecessary finally clause .,@ j-bennet,234.0
441,2015-05-15 03:04:56,2015-05-15 04:30:35,Amjith/general cleanup,"Minor issues discovered while I was working on the mysql-cli which should be fixed in pgcli as well . - The test harness setup was done incorrectly . This should enable everyone who has postgres to run our tests without skipping . - Exceptions in a generator function are n't thrown right away , they 're only thrown when we consume the generator . Hence a new addition of try/except to suppress the exception and prevent crashing pgcli if one of the result sets had a error . - Minor efficiency improvement by moving the ` all_completion ` update into the for loop instead of a separate list comprehension . /cc @ drocco007 Can you review and merge ? I 'm going to start tagging individuals ( picked randomly ) to review PRs instead of tagging the entire core dev team .",233.0
442,2015-05-08 15:56:17,2015-05-09 14:52:19,Fix incorrect super ( ) calls,"From the ‚Äú not a problem now but could be later ‚Äù department , this PR is preventative maintenance to fix some incorrect calls to ` super ( ) ` . The spelling but you actually get a stack overflow . The first ` super ( ) ` call from ` C ` to ` B ` works as expected , but in ` B.report ( ) ` , when called from ` C ` , ` self.__class__ ` is ` C ` , so ` super ( self.__class__ , self ) ` == ` super ( C , self ) ` == ` B ` ! This is correct from a semantic point of view but almost certainly not what was intended ; the result is that ` B.report ( ) ` keeps calling itself recursively until stack space is exhausted .",231.0
443,2015-04-28 21:42:25,2015-05-07 21:46:25,fix broken suggestions after compound where clause,"Previously , 'SELECT \ * FROM foo WHERE ' correctly suggested columns , but 'SELECT \ * FROM foo WHERE bar = 1 AND ' incorrectly suggested keywords . This was due to the fact that sqlparse was grouping the entire where clause into a single Where token . This seems such a simple fix I feel like I 'm missing something ! Suggestions on any extra tests here would be appreciated",224.0
444,2015-04-28 02:28:39,2015-04-29 10:57:04,Have Tab autocomplete at cursor,Closes # 222,223.0
445,2015-04-22 15:52:59,2015-07-27 03:25:24,Support for psql environment variables,It 'd be awesome to use the ` PGPASSWORD= '' ... '' pgcli ` syntax like psql to set the connecting password http : //www.postgresql.org/docs/9.3/static/libpq-envars.html,220.0
446,2015-04-20 16:15:36,2015-04-24 06:14:56,Iryna 's Editor Command PR,This PR is a cleanup of # 213 to remove extraneous commits added in due to the repo move . I 've cleaned up the commit history . I should have waited to move the repo after merging all pending PRs . That was my bad . @ j-bennet Doe this look good ? I 'll review the changes and merge it in .,217.0
447,2015-04-19 05:56:05,2015-04-20 14:10:59,Update repo references .,@ dbcli/pgcli-core Can one of you review and merge ?,215.0
448,2015-04-18 01:45:34,2015-04-18 01:45:57,Add the ability to reconnect .,Closes # 196,210.0
449,2015-04-18 00:54:34,2015-04-19 03:13:05,Register the json handler only for PY2 .,"Closes # 201 . @ drocco007 Can you please verify this PR ? The json handler is trying to decode the incoming string into unicode based on the database encoding . But this is only required if we 're in Python 2 , because in Python 3 psycopg2 already converts the string to unicode . But I want to double check my understanding . The test case shown in # 201 clearly highlights the problem .",209.0
450,2015-04-17 04:11:13,2015-04-19 02:37:46,Support table completion for TRUNCATE,,208.0
451,2015-04-13 23:02:19,2015-04-15 18:09:53,Added to-be-implemented commands .,Added some commands yet-to-be implemented . Added `` unimplemented '' message if such a command is called . Reformatted help docstrings .,204.0
452,2015-04-13 01:33:48,2015-04-15 13:29:43,Completion search text matches user-defined entities anywhere in the name,"When searching for completions in smart completion mode , a potential suggestion of a user-specified name ( e.g . tables , functions , etc . ) is considered a match if the search text appears anywhere in the suggestion . Keywords , special commands , and built-in functions still use startswith matching . Closes # 193",202.0
453,2015-04-11 18:27:57,2015-04-15 04:57:55,Packaging : first cut of working deb and rpm build,,199.0
454,2015-04-11 13:56:52,2015-04-11 16:28:41,"Handle a ' , ' entered before any completions gracefully",Fixes # 197,198.0
455,2015-04-09 16:45:04,2015-04-15 00:07:28,Improve handling of pg_catalog in metadata,"Originally , tables and schemas starting with ` pg_ ` , as well as ` information_schema ` were not stored , under the assumption they would generate too many superfluous suggestions . This broke as soon as someone tried to manually add pg_catalog to the search path . # 192 Now , metadata is stored for all tables and schemas , and pg_catalog is correctly reported as being on the search_path , even though it is so implicitly . In order to prevent extraneous suggestions from ` pg_catalog ` , suggestions starting with ` pg_ ` are suppressed , unless the user has already typed ` pg_ ` , which seems like a reasonable compromise to me .",195.0
456,2015-04-06 22:40:35,2015-04-17 05:30:38,some join-related improvements,- fix some bugs where ` t1 JOIN t2 ... ` worked fine but ` t1 INNER JOIN t2 ... ` was broken - support ` t1 INNER JOIN t2 USING ( ` which suggests only columns in common,190.0
457,2015-04-05 20:43:36,2015-04-06 00:24:00,Suggest view names,Had this laying around from a while ago and realized today I never submitted it ! Closes # 39,187.0
458,2015-04-05 07:52:39,2015-04-05 21:30:28,display width character string with wcwidth,Thank you for your encouragement .,186.0
459,2015-03-24 16:39:01,2015-03-25 07:27:06,raise messages not displayed ( unless exception ),When using ` raise ` for debugging purposes the output is not shown in ` pgcli ` ( even if ` client_min_messages ` is set accordingly ) . Here 's an example using * * 0.16.2 * * :,177.0
460,2015-03-10 02:43:44,2015-03-11 05:08:55,Format Decimal values directly as strings,"The failure listed in the issue is rooted in how tabulate handles Decimal objects , which , at bottom , end up being rendered via I would normally avoid patching a vendored library like this , but this seems like the cleanest solution under the circumstances and matches previous fixes to a few other types . Closes # 169",172.0
461,2015-03-06 13:35:34,2015-03-09 00:50:23,Better handle schema qualifications in current word,"short version : fixes a bug where ` DROP TABLE schema_name. < TAB > ` and ` DROP FUNCTION schema_name. < TAB > ` would both suggest both tables and functions from schema_name . Previously , if the current word contained a period , ` suggest_type ` would parse text to the right of the period as ` word_before_cursor ` , so that characters to the left of the period were parsed as the final token . Then ` suggest_based_on_last_token ` would generate suggestions under the generic catch-all ` elif token_v.endswith ( '. ' ) ` . This means that , for example , ` DROP TABLE schema_name. < TAB > ` and ` DROP FUNCTION schema_name. < TAB > ` would each suggest both tables and functions from schema_name . This commit PR changes this behavior to include schema qualifications as part of word_before_cursor , so that ` suggest_based_on_last_token ` operates on the actual preceding token , not just the schema name . The schema name itself is parsed as an sqlparse Identifier , and passed as an extra argument to suggest_based_on_last_token . This allows each token value to handle dot-qualifications differently , and may eventually support things like function output arguments ` func ( ) .fieldname ` or custom types with ` arbitrarily.deep.nested.child.fields `",170.0
462,2015-03-01 02:11:08,2015-03-01 05:48:56,Interpret incoming JSON as a string instead of via json.loads,"Replace the default JSON ( and JSONB , if defined ) type casters with versions that handle the incoming data as strings instead of via json.loads . This fixes # 163 and makes JSON render the same way in pgcli as it does in psql . The typecaster uses the current connection 's encoding ‚Äî which defaults to the database encoding ‚Äî to interpret the incoming data ; the implementation should continue to behave correctly if someone ever adds the ability to change the client encoding to pgcli . I tested this against 9.3 and 9.4 servers ( yay Docker ! ) . Comments welcome . : )",165.0
463,2015-02-27 15:31:39,2015-02-28 16:56:22,Some small \special improvements,"- Move special-related suggestions out of ` suggest_based_on_last_token ` and into a new ` suggest_special ` method - Special commands do n't really obey sql syntax so this makes it easier to work around sqlparse - Have \d , \dt , and \dv suggest schema and table names - Add support for \df - \df suggests schema and function names - \dn suggests schema names",161.0
464,2015-02-24 17:47:41,2015-02-25 22:14:56,Add completion for CREATE WITH TEMPLATE,Closes # 156,158.0
465,2015-02-17 17:51:21,2015-02-18 22:17:45,Autocomplete custom function names,"This would suggest the names of functions create via ` CREATE FUNCTION ... ` It does n't get metadata from functions defined in the pg_catalog schema , which is where ` max ` , ` count ` , ` sum ` , et al . are defined . There 's over 2000 functions there so I thought it made sense to stick with the hardcoded whitelist approach currently used for those .",155.0
466,2015-02-12 22:32:58,2015-02-13 02:26:43,Get vi mode working,For https : //github.com/amjith/pgcli/issues/136,154.0
467,2015-02-12 16:30:43,2015-02-12 21:13:05,bugfix : \dt query should n't restrict schemas if schema qualifer supplied,this was also my fault !,152.0
468,2015-02-12 16:29:59,2015-02-12 21:14:08,bugfix : make tables query schema filter match schematas query,pgcli crashed for me today after making a new schema : This was my mistake from the schema PR,151.0
469,2015-02-09 11:59:19,2015-03-25 06:27:56,requset support : COPY command WITH subcommand options auto-completion,see http : //www.postgresql.org/docs/9.3/static/sql-copy.html,149.0
470,2015-02-01 14:08:26,2015-02-03 02:58:31,make \dt and \dv use verbose and pattern arguments,see # 82,144.0
471,2015-01-28 23:23:48,2015-01-29 18:24:53,Fix # 106 - autocompletion in multiple statements,,142.0
472,2015-01-24 03:22:03,2015-01-24 05:08:00,Minor PGCli API improvements,"I 've been slowly working on a pgcli autocompletion plugin for Sublime Text 3 , and found myself importing and copy/pasting a little more than I 'd like . This PR simply moves pgcompleter construction to PGCli . * * init * * , and adds a convenience method PGCli.get_completions ( text , cursor_position ) which delegates to self.completer.get_completions .",137.0
473,2015-01-22 13:19:10,2015-01-26 08:19:57,Can not handle multibyte characters ( ie . Japanese ),"It seems , that multibyte characters are not supported at all . The following example uses Japanese characters : With PSQL : You will receive the same error for every query , that has to deal with a table containing multibyte characters .",134.0
474,2015-01-22 04:03:40,2015-01-22 05:33:48,Cast bytea fields to text for output .,"In the current version of pgcli , ` bytea ` fields trigger Unicode decode errors when queried :",133.0
475,2015-01-19 23:28:25,2015-01-20 06:35:41,Documentation and an addition to smart completion for ON keyword .,Added a section about meta-commands to developer documentation . ON keyword now suggests tables and aliases on the right side of equal sign also .,129.0
476,2015-01-18 21:40:48,2015-01-27 04:26:52,Make autocomplete schema-aware,"This PR would fix # 22 , and also I think # 39 as a side-effect Issues : - I used pandas DataFrames for working with database metadata -- I found them a lot more flexible than a pure standard lib dict/list based approach . But I 'm not sure how you 'd feel about adding pandas as a requirement . - We do n't have any tests for `` DoubleQuoted '' identifiers -- I 'm not confident I did n't break that .",127.0
477,2015-01-18 06:17:45,2015-01-18 06:25:06,"ON keyword suggests either table aliases , or table names .",,126.0
478,2015-01-16 15:51:31,2015-01-18 06:51:42,Auto-completion does not work for LIMIT sql keyword,"When I try to use Tab key after the next command , the LIMIT option does not appear . ` testdb > SELECT * FROM test_table L `",125.0
479,2015-01-16 08:44:46,2015-01-27 07:07:17,Encoding issues within error messages,"When I try to connect using a role that does not exist , pgcli display ` 'ascii ' codec ca n't decode byte 0xe2 in position 14 : ordinal not in range ( 128 ) ` as it obviously trips over a ‚Äû character .",124.0
480,2015-01-14 13:04:07,2015-01-14 21:46:27,fix bug where show_help command failed in python 3 due to iteritems ( ) de ...,Not sure if there 's more standard way to get a dict iterator in both 2 & 3 .,120.0
481,2015-01-13 22:45:57,2015-01-14 06:25:08,pip install fails,Installation fails if you do n't have one or some of the following packages : - python2.7-dev - libevent-dev The error : ` error : command 'x86_64-linux-gnu-gcc ' failed with exit status 1 ` I would put in a PR to add this info to the README but I do n't know which one fixed it or if it was both and do n't want to put false info in it so figured I 'd at least leave this here,118.0
482,2015-01-13 08:26:32,2015-01-14 05:07:44,Changing to a non-existent database using \c crashes pgcli,"When the ` \c ` fails because of a non-existent database , it crashes pgcli . /cc @ macobo",117.0
483,2015-01-11 01:13:56,2015-01-29 18:24:54,Auto-completion is broken for multiple queries in the same line,"eg : Let 's assume $ is the cursor position . That should suggest table names , but instead I 'm getting keywords .",106.0
484,2015-01-11 00:46:13,2015-01-11 01:05:50,allows pgcli to connect to specified user 's database,... when database name is omitted Fix # 101,105.0
485,2015-01-11 00:40:12,2015-01-11 02:04:42,ipython magic improvements,"` % pgcli ` magic now persists pgcli objects by stashing them in sql-magic connection objects . after first connecting with ` % pgcli postgresql : //blahblahblah ` you can return to that same connection with simply ` % pgcli ` . if you have multuple pgcli connections open , you can refer to them with an alias like ` % pgcli username @ dbname ` also , mutating queries are n't rerun in sql magic",104.0
486,2015-01-11 00:36:03,2015-01-11 00:59:47,fix logging bug : log statements outside pgcli.main not logged to file,file handler was attached to the pgcli.main logger instead of pgcli,103.0
487,2015-01-10 14:24:45,2015-01-11 00:31:34,Fix auto passwd prompt,"Hi , On Linux , with Python 3.4.2 and psycopg2 2.5.4 , I have this error when I try to connect to a database with a password : < pre > ( pyvenv ) lg @ steroids : ~/Documents/IDEA/LGbo $ pgcli -h localhost -p 5432 -U asterisk asterisk 'OperationalError ' object has no attribute 'message ' < /pre > With this commit , I have no more issues . I 've quickly tested with Python 2.7.6 , it continues to work . Regards .",100.0
488,2015-01-10 10:00:48,2015-01-10 23:00:25,Support having multiple queries on the same line .,"See # 93 . Note that if any of the queries raises an error , nothing besides the error is output . This is different behavior from psql which outputs separately for each query : Let me know if we want to be fully psql-compatible with this or if this acceptable behavior .",98.0
489,2015-01-09 12:14:26,2015-01-09 18:39:47,Renamed escape_ * functions and fixed case-insensitive compare,I fixed the remarks for the pull request # 83,95.0
490,2015-01-09 10:56:03,2015-01-09 17:08:02,Fix travis and build errors under python 3 .,"PR # 71 introduced a bug , where the python version that was used by travis did not match the version intended . Also fix the problems plaguing current master builds failing under python 3 , with tests ! : ) @ amjith",94.0
491,2015-01-09 09:57:32,2015-01-09 21:10:17,Support for cancelling queries,See # 77,92.0
492,2015-01-08 20:13:27,2015-01-10 07:37:40,"Support CTRL+arrow shortcuts , bump prompt_toolkit to 0.26","See # 9 . Note that the new version has a slightly different API , which is why this PR is the size it is .",89.0
493,2015-01-08 17:26:43,2015-01-08 19:29:57,README.rst : small tweaks,See at https : //github.com/msabramo/pgcli/blob/patch-5/README.rst,87.0
494,2015-01-08 16:52:46,2015-01-08 19:50:53,Fix a crash in autocompletion,"This commit fixes a crash in autocompletion , when a comma character is entered before any valid sql keyword , e.g. , * * Note for future refence : * * Whenever ` find_prev_keyword ( ) ` is used , a check should be made in case ` None ` was returned .",85.0
495,2015-01-08 15:29:37,2015-01-08 19:45:35,Corrected some typos,Some very minor corrections in the README and sanity_checks.txt files,84.0
496,2015-01-08 13:44:24,2015-01-09 06:50:32,support for table/column names which should be escaped,"this patch supports table and column names that have space , special chars , non-ascii word characters and names that conflict with build in function names and keywords . It also fixes a minor issue where the table columns where not refreshed because of a case-sensitive comparison of the tokens . For example the following tables/columns can be autocompleted with this patch :",83.0
497,2015-01-07 22:21:22,2015-01-07 22:22:34,Fix typos in README,,74.0
498,2015-01-07 20:22:28,2015-01-07 22:10:44,Travis - run tox only once per python version,"Current version of pgcli runs tests too many times in travis , total 12 times instead of 4 . Example : https : //travis-ci.org/amjith/pgcli/builds/46215230 Idea for the solution was taken from https : //github.com/eventlet/eventlet/blob/master/.travis.yml",71.0
499,2015-01-07 19:38:08,2015-01-07 22:47:14,Fix syntaxerror for special commands like \d+,See # 58,69.0
500,2015-01-07 14:45:55,2015-01-14 05:53:58,Should understand -d param,"I expected pgcli to understand all the params of psql , including ` -d ` / ` -- dbname ` for database name . It would be a nice tweak if it could work as a drop in for psql as far as possible .",65.0
501,2015-01-07 10:48:53,2015-01-09 04:51:20,Add support of \dn [ PATTERN ] command,This command is used in standard psql for listing of schemas,62.0
502,2015-01-07 06:32:01,2015-01-08 05:45:18,made a little bit of the sql prettier,"Did n't have enough time to do more , but it 's a start .",51.0
503,2015-01-07 05:51:48,2015-01-07 06:29:40,Fix # 45,"Check PEP 352 . To put it simple , from 2.6 the message attribute is deprecated and removed in 3.x .",50.0
504,2015-01-07 04:57:25,2015-01-07 06:28:34,ISSUE # 32 More graceful error management,,49.0
505,2015-01-07 02:57:35,2015-01-07 06:29:40,Add doc string to the back-slash commands,Add in a doc to display when typing a pg special command that starts with back-slash .,45.0
506,2015-01-06 23:58:25,2015-01-09 02:48:30,Use standard postgres environmental tags,so the pgcli command behaves more similarly to the psql command,42.0
507,2015-01-06 21:58:28,2015-01-07 05:21:41,Fix UnicodeDecodeError in python2,"Great tool , thanks for developing ! I ran into some trouble getting it to work with a databases containing unicode data and this pull request aims to mend that . See also # 24 I also added some extra debugging information to ensure that the proper error message is shown and always logged for ease of debugging .",40.0
508,2015-01-06 20:08:18,2015-01-07 08:36:03,More graceful error management,"Currently , on syntax errors in psycopg2 and connection error , the error is n't caught and pgcli fails and exits . Perhaps you should handle that more gracefully .",32.0
509,2015-01-06 18:12:53,2015-01-09 08:24:24,Extremely Slow Startup,"It takes it well over a minute to start up on my database - I suspect it is due to the inefficiency of iterating over all the tables and then issuing separate selects to pull in column names . ( I am seeing boatloads of queries like SELECT column_name FROM information_schema.columns WHERE\n table_name = '' ) Would likely be faster to do a single select table_name , column_name from information_schema.columns .",25.0
510,2015-01-03 21:43:58,2015-01-04 03:16:51,Added \di and \dv meta-commands .,,15.0
511,2014-12-30 23:37:59,2014-12-30 23:53:30,Fix for bug # 12 : Config reading is failing when an option is missing .,,14.0
512,2014-12-30 08:38:19,2014-12-31 05:48:29,Config reading is failing when an option is missing,"Steps to reproduce . Open ~/.pgclirc , delete the line with multi-line option . Launch pgcli and it crashes with the following error : This is because the ConfigParser is reading a config option without providing a default value to fall back . @ j-bennet Would you mind taking a stab at this bug ? If you do n't have time , let me know .",12.0
513,2014-12-29 22:16:32,2014-12-29 22:31:46,Set multi-line via config file .,,11.0
514,2014-12-28 23:00:09,2014-12-28 23:11:00,"Added tests for multiple column suggestion , dot and alias .",,8.0
515,2014-12-27 22:44:28,2014-12-27 22:48:10,added tests for dot and alias,,7.0
516,2014-12-27 21:53:51,2014-12-27 22:09:14,added functions to all completions ; added naive completion tests,,6.0
517,2014-12-19 18:53:00,2014-12-20 07:05:13,Added key binding on control-space ; changed order to order by,- added autocompletion key binding on control-space - changed `` order '' keyword to `` order by '',3.0
518,2014-12-19 08:03:33,2014-12-19 08:10:15,attempt to suggest column name when function is typed,,2.0
519,2014-12-18 05:19:25,2014-12-18 06:30:15,Keyword additions,"added support for ansi sql functions added CASE , WHEN , FULL keywords changed GROUP to GROUP BY",1.0
